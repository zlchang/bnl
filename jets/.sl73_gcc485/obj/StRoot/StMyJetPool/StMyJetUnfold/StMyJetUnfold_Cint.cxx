//
// File generated by rootcint at Fri Nov 30 12:15:23 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStMyJetPooldIStMyJetUnfolddIStMyJetUnfold_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StMyJetUnfold_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StMyJetBayesUnfold_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StMyJetBayesUnfold(void *p);
   static void deleteArray_StMyJetBayesUnfold(void *p);
   static void destruct_StMyJetBayesUnfold(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyJetBayesUnfold*)
   {
      ::StMyJetBayesUnfold *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyJetBayesUnfold >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyJetBayesUnfold", ::StMyJetBayesUnfold::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyJetBayesUnfold.h", 8,
                  typeid(::StMyJetBayesUnfold), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyJetBayesUnfold::Dictionary, isa_proxy, 4,
                  sizeof(::StMyJetBayesUnfold) );
      instance.SetDelete(&delete_StMyJetBayesUnfold);
      instance.SetDeleteArray(&deleteArray_StMyJetBayesUnfold);
      instance.SetDestructor(&destruct_StMyJetBayesUnfold);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyJetBayesUnfold*)
   {
      return GenerateInitInstanceLocal((::StMyJetBayesUnfold*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyJetBayesUnfold*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyJetSVDUnfoldResponseError_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyJetSVDUnfoldResponseError(void *p = 0);
   static void *newArray_StMyJetSVDUnfoldResponseError(Long_t size, void *p);
   static void delete_StMyJetSVDUnfoldResponseError(void *p);
   static void deleteArray_StMyJetSVDUnfoldResponseError(void *p);
   static void destruct_StMyJetSVDUnfoldResponseError(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyJetSVDUnfoldResponseError*)
   {
      ::StMyJetSVDUnfoldResponseError *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyJetSVDUnfoldResponseError >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyJetSVDUnfoldResponseError", ::StMyJetSVDUnfoldResponseError::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyJetSVDUnfoldResponseError.h", 10,
                  typeid(::StMyJetSVDUnfoldResponseError), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyJetSVDUnfoldResponseError::Dictionary, isa_proxy, 4,
                  sizeof(::StMyJetSVDUnfoldResponseError) );
      instance.SetNew(&new_StMyJetSVDUnfoldResponseError);
      instance.SetNewArray(&newArray_StMyJetSVDUnfoldResponseError);
      instance.SetDelete(&delete_StMyJetSVDUnfoldResponseError);
      instance.SetDeleteArray(&deleteArray_StMyJetSVDUnfoldResponseError);
      instance.SetDestructor(&destruct_StMyJetSVDUnfoldResponseError);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyJetSVDUnfoldResponseError*)
   {
      return GenerateInitInstanceLocal((::StMyJetSVDUnfoldResponseError*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldResponseError*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyJetSVDUnfoldBias_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyJetSVDUnfoldBias(void *p = 0);
   static void *newArray_StMyJetSVDUnfoldBias(Long_t size, void *p);
   static void delete_StMyJetSVDUnfoldBias(void *p);
   static void deleteArray_StMyJetSVDUnfoldBias(void *p);
   static void destruct_StMyJetSVDUnfoldBias(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyJetSVDUnfoldBias*)
   {
      ::StMyJetSVDUnfoldBias *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyJetSVDUnfoldBias >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyJetSVDUnfoldBias", ::StMyJetSVDUnfoldBias::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyJetSVDUnfoldBias.h", 10,
                  typeid(::StMyJetSVDUnfoldBias), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyJetSVDUnfoldBias::Dictionary, isa_proxy, 4,
                  sizeof(::StMyJetSVDUnfoldBias) );
      instance.SetNew(&new_StMyJetSVDUnfoldBias);
      instance.SetNewArray(&newArray_StMyJetSVDUnfoldBias);
      instance.SetDelete(&delete_StMyJetSVDUnfoldBias);
      instance.SetDeleteArray(&deleteArray_StMyJetSVDUnfoldBias);
      instance.SetDestructor(&destruct_StMyJetSVDUnfoldBias);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyJetSVDUnfoldBias*)
   {
      return GenerateInitInstanceLocal((::StMyJetSVDUnfoldBias*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldBias*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyJetSVDUnfold_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyJetSVDUnfold(void *p = 0);
   static void *newArray_StMyJetSVDUnfold(Long_t size, void *p);
   static void delete_StMyJetSVDUnfold(void *p);
   static void deleteArray_StMyJetSVDUnfold(void *p);
   static void destruct_StMyJetSVDUnfold(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyJetSVDUnfold*)
   {
      ::StMyJetSVDUnfold *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyJetSVDUnfold >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyJetSVDUnfold", ::StMyJetSVDUnfold::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyJetSVDUnfold.h", 15,
                  typeid(::StMyJetSVDUnfold), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyJetSVDUnfold::Dictionary, isa_proxy, 4,
                  sizeof(::StMyJetSVDUnfold) );
      instance.SetNew(&new_StMyJetSVDUnfold);
      instance.SetNewArray(&newArray_StMyJetSVDUnfold);
      instance.SetDelete(&delete_StMyJetSVDUnfold);
      instance.SetDeleteArray(&deleteArray_StMyJetSVDUnfold);
      instance.SetDestructor(&destruct_StMyJetSVDUnfold);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyJetSVDUnfold*)
   {
      return GenerateInitInstanceLocal((::StMyJetSVDUnfold*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyJetSVDUnfold*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyRes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StMyRes(void *p);
   static void deleteArray_StMyRes(void *p);
   static void destruct_StMyRes(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyRes*)
   {
      ::StMyRes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyRes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyRes", ::StMyRes::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyRes.h", 10,
                  typeid(::StMyRes), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyRes::Dictionary, isa_proxy, 4,
                  sizeof(::StMyRes) );
      instance.SetDelete(&delete_StMyRes);
      instance.SetDeleteArray(&deleteArray_StMyRes);
      instance.SetDestructor(&destruct_StMyRes);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyRes*)
   {
      return GenerateInitInstanceLocal((::StMyRes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyRes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyRes2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyRes2D(void *p = 0);
   static void *newArray_StMyRes2D(Long_t size, void *p);
   static void delete_StMyRes2D(void *p);
   static void deleteArray_StMyRes2D(void *p);
   static void destruct_StMyRes2D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyRes2D*)
   {
      ::StMyRes2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyRes2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyRes2D", ::StMyRes2D::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyRes.h", 22,
                  typeid(::StMyRes2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyRes2D::Dictionary, isa_proxy, 4,
                  sizeof(::StMyRes2D) );
      instance.SetNew(&new_StMyRes2D);
      instance.SetNewArray(&newArray_StMyRes2D);
      instance.SetDelete(&delete_StMyRes2D);
      instance.SetDeleteArray(&deleteArray_StMyRes2D);
      instance.SetDestructor(&destruct_StMyRes2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyRes2D*)
   {
      return GenerateInitInstanceLocal((::StMyRes2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyRes2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyRes1D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyRes1D(void *p = 0);
   static void *newArray_StMyRes1D(Long_t size, void *p);
   static void delete_StMyRes1D(void *p);
   static void deleteArray_StMyRes1D(void *p);
   static void destruct_StMyRes1D(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyRes1D*)
   {
      ::StMyRes1D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyRes1D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyRes1D", ::StMyRes1D::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyRes.h", 109,
                  typeid(::StMyRes1D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyRes1D::Dictionary, isa_proxy, 4,
                  sizeof(::StMyRes1D) );
      instance.SetNew(&new_StMyRes1D);
      instance.SetNewArray(&newArray_StMyRes1D);
      instance.SetDelete(&delete_StMyRes1D);
      instance.SetDeleteArray(&deleteArray_StMyRes1D);
      instance.SetDestructor(&destruct_StMyRes1D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyRes1D*)
   {
      return GenerateInitInstanceLocal((::StMyRes1D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyRes1D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StMyJetBayesUnfold::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyJetBayesUnfold::Class_Name()
{
   return "StMyJetBayesUnfold";
}

//______________________________________________________________________________
const char *StMyJetBayesUnfold::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetBayesUnfold*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyJetBayesUnfold::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetBayesUnfold*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyJetBayesUnfold::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetBayesUnfold*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyJetBayesUnfold::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetBayesUnfold*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyJetSVDUnfoldResponseError::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyJetSVDUnfoldResponseError::Class_Name()
{
   return "StMyJetSVDUnfoldResponseError";
}

//______________________________________________________________________________
const char *StMyJetSVDUnfoldResponseError::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldResponseError*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyJetSVDUnfoldResponseError::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldResponseError*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyJetSVDUnfoldResponseError::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldResponseError*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyJetSVDUnfoldResponseError::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldResponseError*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyJetSVDUnfoldBias::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyJetSVDUnfoldBias::Class_Name()
{
   return "StMyJetSVDUnfoldBias";
}

//______________________________________________________________________________
const char *StMyJetSVDUnfoldBias::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldBias*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyJetSVDUnfoldBias::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldBias*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyJetSVDUnfoldBias::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldBias*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyJetSVDUnfoldBias::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfoldBias*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyJetSVDUnfold::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyJetSVDUnfold::Class_Name()
{
   return "StMyJetSVDUnfold";
}

//______________________________________________________________________________
const char *StMyJetSVDUnfold::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfold*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyJetSVDUnfold::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfold*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyJetSVDUnfold::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfold*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyJetSVDUnfold::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyJetSVDUnfold*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyRes::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyRes::Class_Name()
{
   return "StMyRes";
}

//______________________________________________________________________________
const char *StMyRes::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyRes::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyRes::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyRes::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyRes2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyRes2D::Class_Name()
{
   return "StMyRes2D";
}

//______________________________________________________________________________
const char *StMyRes2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyRes2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyRes2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyRes2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyRes1D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyRes1D::Class_Name()
{
   return "StMyRes1D";
}

//______________________________________________________________________________
const char *StMyRes1D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes1D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyRes1D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes1D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyRes1D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes1D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyRes1D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyRes1D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StMyJetBayesUnfold::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyJetBayesUnfold.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyJetBayesUnfold::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyJetBayesUnfold::Class(),this);
   }
}

//______________________________________________________________________________
void StMyJetBayesUnfold::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyJetBayesUnfold.
      TClass *R__cl = ::StMyJetBayesUnfold::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNit", &mNit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX", &mX);
      R__insp.InspectMember(mX, "mX.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mB", &mB);
      R__insp.InspectMember(mB, "mB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mA", &mA);
      R__insp.InspectMember(mA, "mA.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRes", &mRes);
      R__insp.InspectMember(mRes, "mRes.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChi2", &mChi2);
      R__insp.InspectMember(mChi2, "mChi2.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StMyJetBayesUnfold(void *p) {
      delete ((::StMyJetBayesUnfold*)p);
   }
   static void deleteArray_StMyJetBayesUnfold(void *p) {
      delete [] ((::StMyJetBayesUnfold*)p);
   }
   static void destruct_StMyJetBayesUnfold(void *p) {
      typedef ::StMyJetBayesUnfold current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyJetBayesUnfold

//______________________________________________________________________________
void StMyJetSVDUnfold::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyJetSVDUnfold.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyJetSVDUnfold::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyJetSVDUnfold::Class(),this);
   }
}

//______________________________________________________________________________
void StMyJetSVDUnfold::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyJetSVDUnfold.
      TClass *R__cl = ::StMyJetSVDUnfold::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*heff", &heff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hratio", &hratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hx0", &hx0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hex0", &hex0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hxs", &hxs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hex", &hex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsig", &hsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reg", &reg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdetVspar", &hdetVspar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparPy", &hparPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdet", &hjetdet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmc", &hjetmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetvar", &hjetvar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMin", &mMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMax", &mMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDim", &mDim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFlag", &mFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReg", &mReg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mfReg", &mfReg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mResp", &mResp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBias", &mBias);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyJetSVDUnfold(void *p) {
      return  p ? new(p) ::StMyJetSVDUnfold : new ::StMyJetSVDUnfold;
   }
   static void *newArray_StMyJetSVDUnfold(Long_t nElements, void *p) {
      return p ? new(p) ::StMyJetSVDUnfold[nElements] : new ::StMyJetSVDUnfold[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyJetSVDUnfold(void *p) {
      delete ((::StMyJetSVDUnfold*)p);
   }
   static void deleteArray_StMyJetSVDUnfold(void *p) {
      delete [] ((::StMyJetSVDUnfold*)p);
   }
   static void destruct_StMyJetSVDUnfold(void *p) {
      typedef ::StMyJetSVDUnfold current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyJetSVDUnfold

//______________________________________________________________________________
void StMyJetSVDUnfoldBias::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyJetSVDUnfoldBias.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyJetSVDUnfoldBias::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyJetSVDUnfoldBias::Class(),this);
   }
}

//______________________________________________________________________________
void StMyJetSVDUnfoldBias::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyJetSVDUnfoldBias.
      TClass *R__cl = ::StMyJetSVDUnfoldBias::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hx", &hx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hprof", &hprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nrep", &Nrep);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyJetSVDUnfoldBias(void *p) {
      return  p ? new(p) ::StMyJetSVDUnfoldBias : new ::StMyJetSVDUnfoldBias;
   }
   static void *newArray_StMyJetSVDUnfoldBias(Long_t nElements, void *p) {
      return p ? new(p) ::StMyJetSVDUnfoldBias[nElements] : new ::StMyJetSVDUnfoldBias[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyJetSVDUnfoldBias(void *p) {
      delete ((::StMyJetSVDUnfoldBias*)p);
   }
   static void deleteArray_StMyJetSVDUnfoldBias(void *p) {
      delete [] ((::StMyJetSVDUnfoldBias*)p);
   }
   static void destruct_StMyJetSVDUnfoldBias(void *p) {
      typedef ::StMyJetSVDUnfoldBias current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyJetSVDUnfoldBias

//______________________________________________________________________________
void StMyJetSVDUnfoldResponseError::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyJetSVDUnfoldResponseError.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyJetSVDUnfoldResponseError::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyJetSVDUnfoldResponseError::Class(),this);
   }
}

//______________________________________________________________________________
void StMyJetSVDUnfoldResponseError::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyJetSVDUnfoldResponseError.
      TClass *R__cl = ::StMyJetSVDUnfoldResponseError::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hprof", &hprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mUnfold", &mUnfold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nrep", &Nrep);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyJetSVDUnfoldResponseError(void *p) {
      return  p ? new(p) ::StMyJetSVDUnfoldResponseError : new ::StMyJetSVDUnfoldResponseError;
   }
   static void *newArray_StMyJetSVDUnfoldResponseError(Long_t nElements, void *p) {
      return p ? new(p) ::StMyJetSVDUnfoldResponseError[nElements] : new ::StMyJetSVDUnfoldResponseError[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyJetSVDUnfoldResponseError(void *p) {
      delete ((::StMyJetSVDUnfoldResponseError*)p);
   }
   static void deleteArray_StMyJetSVDUnfoldResponseError(void *p) {
      delete [] ((::StMyJetSVDUnfoldResponseError*)p);
   }
   static void destruct_StMyJetSVDUnfoldResponseError(void *p) {
      typedef ::StMyJetSVDUnfoldResponseError current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyJetSVDUnfoldResponseError

//______________________________________________________________________________
void StMyRes::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyRes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyRes::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyRes::Class(),this);
   }
}

//______________________________________________________________________________
void StMyRes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyRes.
      TClass *R__cl = ::StMyRes::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StMyRes(void *p) {
      delete ((::StMyRes*)p);
   }
   static void deleteArray_StMyRes(void *p) {
      delete [] ((::StMyRes*)p);
   }
   static void destruct_StMyRes(void *p) {
      typedef ::StMyRes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyRes

//______________________________________________________________________________
void StMyRes2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyRes2D.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyRes2D::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyRes2D::Class(),this);
   }
}

//______________________________________________________________________________
void StMyRes2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyRes2D.
      TClass *R__cl = ::StMyRes2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmatchratioprof", &hjetmatchratioprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetres", &hjetres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptmeanprof", &hjetptmeanprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xpt", &xpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xeta", &xeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ypt", &ypt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*yeta", &yeta);
      StMyRes::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyRes2D(void *p) {
      return  p ? new(p) ::StMyRes2D : new ::StMyRes2D;
   }
   static void *newArray_StMyRes2D(Long_t nElements, void *p) {
      return p ? new(p) ::StMyRes2D[nElements] : new ::StMyRes2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyRes2D(void *p) {
      delete ((::StMyRes2D*)p);
   }
   static void deleteArray_StMyRes2D(void *p) {
      delete [] ((::StMyRes2D*)p);
   }
   static void destruct_StMyRes2D(void *p) {
      typedef ::StMyRes2D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyRes2D

//______________________________________________________________________________
void StMyRes1D::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyRes1D.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StMyRes1D::Class(),this);
   } else {
      R__b.WriteClassBuffer(StMyRes1D::Class(),this);
   }
}

//______________________________________________________________________________
void StMyRes1D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyRes1D.
      TClass *R__cl = ::StMyRes1D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetres", &hjetres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmatchratioprof", &hjetmatchratioprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptmeanprof", &hjetptmeanprof);
      StMyRes::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyRes1D(void *p) {
      return  p ? new(p) ::StMyRes1D : new ::StMyRes1D;
   }
   static void *newArray_StMyRes1D(Long_t nElements, void *p) {
      return p ? new(p) ::StMyRes1D[nElements] : new ::StMyRes1D[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyRes1D(void *p) {
      delete ((::StMyRes1D*)p);
   }
   static void deleteArray_StMyRes1D(void *p) {
      delete [] ((::StMyRes1D*)p);
   }
   static void destruct_StMyRes1D(void *p) {
      typedef ::StMyRes1D current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StMyRes1D

/********************************************************
* .sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetUnfold/StMyJetUnfold_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStMyJetUnfold_Cint();

extern "C" void G__set_cpp_environmentStMyJetUnfold_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StMyJetBayesUnfold.h");
  G__add_compiledheader("StMyJetSVDUnfold.h");
  G__add_compiledheader("StMyJetSVDUnfoldBias.h");
  G__add_compiledheader("StMyJetSVDUnfoldResponseError.h");
  G__add_compiledheader("StMyRes.h");
  G__cpp_reset_tagtableStMyJetUnfold_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStMyJetUnfold_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StMyJetBayesUnfold */
static int G__StMyJetUnfold_Cint_250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetBayesUnfold* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyJetBayesUnfold(
*(TMatrixD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, (int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StMyJetBayesUnfold(
*(TMatrixD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TVectorD*) libp->para[2].ref, (int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetBayesUnfold*) G__getstructoffset())->unfold();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StMyJetBayesUnfold*) G__getstructoffset())->bayesUnfold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD* pobj;
         const TVectorD xobj = ((const StMyJetBayesUnfold*) G__getstructoffset())->getX();
         pobj = new TVectorD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD* pobj;
         const TVectorD xobj = ((const StMyJetBayesUnfold*) G__getstructoffset())->getB();
         pobj = new TVectorD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD* pobj;
         const TMatrixD xobj = ((const StMyJetBayesUnfold*) G__getstructoffset())->getA();
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVectorD* pobj;
         const TVectorD xobj = ((const StMyJetBayesUnfold*) G__getstructoffset())->getRes();
         pobj = new TVectorD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayD* pobj;
         const TArrayD xobj = ((const StMyJetBayesUnfold*) G__getstructoffset())->getChi2();
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyJetBayesUnfold::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetBayesUnfold::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyJetBayesUnfold::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyJetBayesUnfold::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetBayesUnfold*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetBayesUnfold::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetBayesUnfold::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetBayesUnfold::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_250_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetBayesUnfold::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetUnfold_Cint_250_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyJetBayesUnfold* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyJetBayesUnfold(*(StMyJetBayesUnfold*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyJetBayesUnfold G__TStMyJetBayesUnfold;
static int G__StMyJetUnfold_Cint_250_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyJetBayesUnfold*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyJetBayesUnfold*) (soff+(sizeof(StMyJetBayesUnfold)*i)))->~G__TStMyJetBayesUnfold();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyJetBayesUnfold*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyJetBayesUnfold*) (soff))->~G__TStMyJetBayesUnfold();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_250_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetBayesUnfold* dest = (StMyJetBayesUnfold*) G__getstructoffset();
   *dest = *(StMyJetBayesUnfold*) libp->para[0].ref;
   const StMyJetBayesUnfold& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyJetSVDUnfoldResponseError */
static int G__StMyJetUnfold_Cint_286_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfoldResponseError* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfoldResponseError[n];
     } else {
       p = new((void*) gvp) StMyJetSVDUnfoldResponseError[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfoldResponseError;
     } else {
       p = new((void*) gvp) StMyJetSVDUnfoldResponseError;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfoldResponseError* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyJetSVDUnfoldResponseError((StMyJetSVDUnfold*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StMyJetSVDUnfoldResponseError((StMyJetSVDUnfold*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfoldResponseError*) G__getstructoffset())->getError(*(TMatrixD*) libp->para[0].ref, *(TVectorD*) libp->para[1].ref
, *(TMatrixD*) libp->para[2].ref, *(TVectorD*) libp->para[3].ref
, *(TMatrixD*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TMatrixD* pobj;
         TMatrixD xobj = ((StMyJetSVDUnfoldResponseError*) G__getstructoffset())->replica(*(TMatrixD*) libp->para[0].ref, *(TMatrixD*) libp->para[1].ref
, (int) G__int(libp->para[2]));
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfoldResponseError*) G__getstructoffset())->getProfile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfoldResponseError*) G__getstructoffset())->setNrep((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyJetSVDUnfoldResponseError::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfoldResponseError::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyJetSVDUnfoldResponseError::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyJetSVDUnfoldResponseError::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfoldResponseError*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfoldResponseError::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetSVDUnfoldResponseError::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfoldResponseError::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_286_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetSVDUnfoldResponseError::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetUnfold_Cint_286_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyJetSVDUnfoldResponseError* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyJetSVDUnfoldResponseError(*(StMyJetSVDUnfoldResponseError*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyJetSVDUnfoldResponseError G__TStMyJetSVDUnfoldResponseError;
static int G__StMyJetUnfold_Cint_286_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyJetSVDUnfoldResponseError*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyJetSVDUnfoldResponseError*) (soff+(sizeof(StMyJetSVDUnfoldResponseError)*i)))->~G__TStMyJetSVDUnfoldResponseError();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyJetSVDUnfoldResponseError*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyJetSVDUnfoldResponseError*) (soff))->~G__TStMyJetSVDUnfoldResponseError();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_286_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfoldResponseError* dest = (StMyJetSVDUnfoldResponseError*) G__getstructoffset();
   *dest = *(StMyJetSVDUnfoldResponseError*) libp->para[0].ref;
   const StMyJetSVDUnfoldResponseError& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyJetSVDUnfoldBias */
static int G__StMyJetUnfold_Cint_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfoldBias* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfoldBias[n];
     } else {
       p = new((void*) gvp) StMyJetSVDUnfoldBias[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfoldBias;
     } else {
       p = new((void*) gvp) StMyJetSVDUnfoldBias;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfoldBias*) G__getstructoffset())->getError(*(TVectorD*) libp->para[0].ref, *(TMatrixD*) libp->para[1].ref
, *(TMatrixD*) libp->para[2].ref, (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfoldBias*) G__getstructoffset())->getProfile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfoldBias*) G__getstructoffset())->setNrep((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyJetSVDUnfoldBias::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfoldBias::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyJetSVDUnfoldBias::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyJetSVDUnfoldBias::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfoldBias*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfoldBias::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetSVDUnfoldBias::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfoldBias::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetSVDUnfoldBias::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetUnfold_Cint_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyJetSVDUnfoldBias* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyJetSVDUnfoldBias(*(StMyJetSVDUnfoldBias*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyJetSVDUnfoldBias G__TStMyJetSVDUnfoldBias;
static int G__StMyJetUnfold_Cint_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyJetSVDUnfoldBias*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyJetSVDUnfoldBias*) (soff+(sizeof(StMyJetSVDUnfoldBias)*i)))->~G__TStMyJetSVDUnfoldBias();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyJetSVDUnfoldBias*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyJetSVDUnfoldBias*) (soff))->~G__TStMyJetSVDUnfoldBias();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_287_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfoldBias* dest = (StMyJetSVDUnfoldBias*) G__getstructoffset();
   *dest = *(StMyJetSVDUnfoldBias*) libp->para[0].ref;
   const StMyJetSVDUnfoldBias& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyJetSVDUnfold */
static int G__StMyJetUnfold_Cint_288_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfold* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold[n];
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold;
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfold* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]), (int) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StMyJetSVDUnfold(
(TH2D*) G__int(libp->para[0]), (TH2D*) G__int(libp->para[1])
, (TH2D*) G__int(libp->para[2]), (TH2D*) G__int(libp->para[3])
, (TH2D*) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfold*) G__getstructoffset())->Unfold();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfold*) G__getstructoffset())->SetXY((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfold*) G__getstructoffset())->SetOverflow((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StMyJetSVDUnfold*) G__getstructoffset())->SetReg((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StMyJetSVDUnfold*) G__getstructoffset())->SetReg((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getEff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getRecoNoReg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getRecoNoRegErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getReco());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getRecoErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getSV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StMyJetSVDUnfold*) G__getstructoffset())->getReg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getResponse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getNx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getNdim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->getFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfold*) G__getstructoffset())->setResponseError((StMyJetSVDUnfoldResponseError*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->setResponseError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfold*) G__getstructoffset())->setBias((StMyJetSVDUnfoldBias*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyJetSVDUnfold*) G__getstructoffset())->setBias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyJetSVDUnfold::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfold::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyJetSVDUnfold::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyJetSVDUnfold::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyJetSVDUnfold*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfold::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetSVDUnfold::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyJetSVDUnfold::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_288_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyJetSVDUnfold::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetUnfold_Cint_288_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyJetSVDUnfold* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyJetSVDUnfold(*(StMyJetSVDUnfold*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyJetSVDUnfold G__TStMyJetSVDUnfold;
static int G__StMyJetUnfold_Cint_288_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyJetSVDUnfold*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyJetSVDUnfold*) (soff+(sizeof(StMyJetSVDUnfold)*i)))->~G__TStMyJetSVDUnfold();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyJetSVDUnfold*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyJetSVDUnfold*) (soff))->~G__TStMyJetSVDUnfold();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_288_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyJetSVDUnfold* dest = (StMyJetSVDUnfold*) G__getstructoffset();
   *dest = *(StMyJetSVDUnfold*) libp->para[0].ref;
   const StMyJetSVDUnfold& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyRes */
static int G__StMyJetUnfold_Cint_303_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyRes*) G__getstructoffset())->GetJetRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyRes*) G__getstructoffset())->GetJetMatchRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMyRes*) G__getstructoffset())->GetJetPtMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyRes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyRes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyRes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyRes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_303_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyRes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyRes G__TStMyRes;
static int G__StMyJetUnfold_Cint_303_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyRes*) (soff+(sizeof(StMyRes)*i)))->~G__TStMyRes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyRes*) (soff))->~G__TStMyRes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_303_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes* dest = (StMyRes*) G__getstructoffset();
   *dest = *(StMyRes*) libp->para[0].ref;
   const StMyRes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyRes2D */
static int G__StMyJetUnfold_Cint_304_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyRes2D[n];
     } else {
       p = new((void*) gvp) StMyRes2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyRes2D;
     } else {
       p = new((void*) gvp) StMyRes2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyRes2D(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double*) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) StMyRes2D(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double*) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes2D*) G__getstructoffset())->Add((StMyRes2D*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes2D*) G__getstructoffset())->FillJetMatchRatio((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes2D*) G__getstructoffset())->FillResponse((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyRes2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyRes2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyRes2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyRes2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_304_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyRes2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetUnfold_Cint_304_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyRes2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyRes2D(*(StMyRes2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyRes2D G__TStMyRes2D;
static int G__StMyJetUnfold_Cint_304_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyRes2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyRes2D*) (soff+(sizeof(StMyRes2D)*i)))->~G__TStMyRes2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyRes2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyRes2D*) (soff))->~G__TStMyRes2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_304_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes2D* dest = (StMyRes2D*) G__getstructoffset();
   *dest = *(StMyRes2D*) libp->para[0].ref;
   const StMyRes2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyRes1D */
static int G__StMyJetUnfold_Cint_305_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyRes1D[n];
     } else {
       p = new((void*) gvp) StMyRes1D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyRes1D;
     } else {
       p = new((void*) gvp) StMyRes1D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyRes1D(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) StMyRes1D(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes1D*) G__getstructoffset())->Add((StMyRes1D*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes1D*) G__getstructoffset())->FillResponse((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyRes1D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes1D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyRes1D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyRes1D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyRes1D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes1D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyRes1D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyRes1D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetUnfold_Cint_305_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyRes1D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetUnfold_Cint_305_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyRes1D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyRes1D(*(StMyRes1D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyRes1D G__TStMyRes1D;
static int G__StMyJetUnfold_Cint_305_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyRes1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyRes1D*) (soff+(sizeof(StMyRes1D)*i)))->~G__TStMyRes1D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyRes1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyRes1D*) (soff))->~G__TStMyRes1D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetUnfold_Cint_305_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyRes1D* dest = (StMyRes1D*) G__getstructoffset();
   *dest = *(StMyRes1D*) libp->para[0].ref;
   const StMyRes1D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StMyJetBayesUnfold */

/* StMyJetSVDUnfoldResponseError */

/* StMyJetSVDUnfoldBias */

/* StMyJetSVDUnfold */

/* StMyRes */

/* StMyRes2D */

/* StMyRes1D */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStMyJetUnfold_Cint {
 public:
  G__Sizep2memfuncStMyJetUnfold_Cint(): p(&G__Sizep2memfuncStMyJetUnfold_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStMyJetUnfold_Cint::*p)();
};

size_t G__get_sizep2memfuncStMyJetUnfold_Cint()
{
  G__Sizep2memfuncStMyJetUnfold_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStMyJetUnfold_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold))) {
     StMyJetBayesUnfold *G__Lderived;
     G__Lderived=(StMyJetBayesUnfold*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError))) {
     StMyJetSVDUnfoldResponseError *G__Lderived;
     G__Lderived=(StMyJetSVDUnfoldResponseError*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias))) {
     StMyJetSVDUnfoldBias *G__Lderived;
     G__Lderived=(StMyJetSVDUnfoldBias*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold))) {
     StMyJetSVDUnfold *G__Lderived;
     G__Lderived=(StMyJetSVDUnfold*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes))) {
     StMyRes *G__Lderived;
     G__Lderived=(StMyRes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D))) {
     StMyRes2D *G__Lderived;
     G__Lderived=(StMyRes2D*)0x1000;
     {
       StMyRes *G__Lpbase=(StMyRes*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D))) {
     StMyRes1D *G__Lderived;
     G__Lderived=(StMyRes1D*)0x1000;
     {
       StMyRes *G__Lpbase=(StMyRes*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D),G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStMyJetUnfold_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorD",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StMyJetBayesUnfold */
static void G__setup_memvarStMyJetBayesUnfold(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold));
   { StMyJetBayesUnfold *p; p=(StMyJetBayesUnfold*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"mX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"mB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"mA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"mRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TArrayD),-1,-1,4,"mChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyJetSVDUnfoldResponseError */
static void G__setup_memvarStMyJetSVDUnfoldResponseError(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError));
   { StMyJetSVDUnfoldResponseError *p; p=(StMyJetSVDUnfoldResponseError*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TProfile),-1,-1,2,"hprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold),-1,-1,4,"mUnfold=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Nrep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyJetSVDUnfoldBias */
static void G__setup_memvarStMyJetSVDUnfoldBias(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias));
   { StMyJetSVDUnfoldBias *p; p=(StMyJetSVDUnfoldBias*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D),-1,-1,2,"hx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TProfile),-1,-1,2,"hprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Nrep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyJetSVDUnfold */
static void G__setup_memvarStMyJetSVDUnfold(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold));
   { StMyJetSVDUnfold *p; p=(StMyJetSVDUnfold*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D),-1,-1,2,"heff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D),-1,-1,2,"hratio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D),-1,-1,2,"hx0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,2,"hex0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D),-1,-1,2,"hxs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,2,"hex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D),-1,-1,2,"hsig=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"reg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hdetVspar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hparPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hjetdet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hjetmc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hjetvar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mDim=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mReg=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mfReg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError),-1,-1,4,"mResp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias),-1,-1,4,"mBias=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyRes */
static void G__setup_memvarStMyRes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes));
   { StMyRes *p; p=(StMyRes*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyRes2D */
static void G__setup_memvarStMyRes2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D));
   { StMyRes2D *p; p=(StMyRes2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile),-1,-1,4,"hjetmatchratioprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hjetres=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile),-1,-1,4,"hjetptmeanprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TAxis),-1,-1,4,"xpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TAxis),-1,-1,4,"xeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TAxis),-1,-1,4,"ypt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TAxis),-1,-1,4,"yeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyRes1D */
static void G__setup_memvarStMyRes1D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D));
   { StMyRes1D *p; p=(StMyRes1D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D),-1,-1,4,"hjetres=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile),-1,-1,4,"hjetmatchratioprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile),-1,-1,4,"hjetptmeanprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStMyJetUnfold_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStMyJetBayesUnfold(void) {
   /* StMyJetBayesUnfold */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold));
   G__memfunc_setup("StMyJetBayesUnfold",1804,G__StMyJetUnfold_Cint_250_0_1, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold), -1, 0, 4, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - A u 'TVectorT<double>' 'TVectorD' 11 - b "
"u 'TVectorT<double>' 'TVectorD' 11 - x i - - 0 - nit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unfold",648,G__StMyJetUnfold_Cint_250_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bayesUnfold",1148,G__StMyJetUnfold_Cint_250_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__StMyJetUnfold_Cint_250_0_4, 117, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getB",386,G__StMyJetUnfold_Cint_250_0_5, 117, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getA",385,G__StMyJetUnfold_Cint_250_0_6, 117, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRes",618,G__StMyJetUnfold_Cint_250_0_7, 117, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR), G__defined_typename("TVectorD"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__StMyJetUnfold_Cint_250_0_8, 117, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TArrayD), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_250_0_9, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyJetBayesUnfold::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_250_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetBayesUnfold::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_250_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyJetBayesUnfold::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_250_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyJetBayesUnfold::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_250_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_250_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetBayesUnfold::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_250_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetBayesUnfold::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_250_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetBayesUnfold::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_250_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetBayesUnfold::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyJetBayesUnfold", 1804, G__StMyJetUnfold_Cint_250_0_21, (int) ('i'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold), -1, 0, 1, 1, 1, 0, "u 'StMyJetBayesUnfold' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyJetBayesUnfold", 1930, G__StMyJetUnfold_Cint_250_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_250_0_23, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold), -1, 1, 1, 1, 1, 0, "u 'StMyJetBayesUnfold' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyJetSVDUnfoldResponseError(void) {
   /* StMyJetSVDUnfoldResponseError */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError));
   G__memfunc_setup("StMyJetSVDUnfoldResponseError",2910,G__StMyJetUnfold_Cint_286_0_1, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyJetSVDUnfoldResponseError",2910,G__StMyJetUnfold_Cint_286_0_2, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError), -1, 0, 1, 1, 1, 0, "U 'StMyJetSVDUnfold' - 0 - unfold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getError",842,G__StMyJetUnfold_Cint_286_0_3, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - res u 'TVectorT<double>' 'TVectorD' 11 - xx "
"u 'TMatrixT<double>' 'TMatrixD' 11 - covf u 'TVectorT<double>' 'TVectorD' 11 - bcov "
"u 'TMatrixT<double>' 'TMatrixD' 11 - cc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replica",736,G__StMyJetUnfold_Cint_286_0_4, 117, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 3, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - res u 'TMatrixT<double>' 'TMatrixD' 11 - resErr "
"i - - 0 - seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getProfile",1041,G__StMyJetUnfold_Cint_286_0_5, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNrep",737,G__StMyJetUnfold_Cint_286_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nrep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_286_0_7, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyJetSVDUnfoldResponseError::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_286_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfoldResponseError::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_286_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyJetSVDUnfoldResponseError::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_286_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyJetSVDUnfoldResponseError::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_286_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_286_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfoldResponseError::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_286_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetSVDUnfoldResponseError::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_286_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfoldResponseError::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_286_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetSVDUnfoldResponseError::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyJetSVDUnfoldResponseError", 2910, G__StMyJetUnfold_Cint_286_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError), -1, 0, 1, 1, 1, 0, "u 'StMyJetSVDUnfoldResponseError' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyJetSVDUnfoldResponseError", 3036, G__StMyJetUnfold_Cint_286_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_286_0_21, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError), -1, 1, 1, 1, 1, 0, "u 'StMyJetSVDUnfoldResponseError' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyJetSVDUnfoldBias(void) {
   /* StMyJetSVDUnfoldBias */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias));
   G__memfunc_setup("StMyJetSVDUnfoldBias",1924,G__StMyJetUnfold_Cint_287_0_1, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getError",842,G__StMyJetUnfold_Cint_287_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVectorT<double>' 'TVectorD' 11 - x u 'TMatrixT<double>' 'TMatrixD' 11 - rescovp "
"u 'TMatrixT<double>' 'TMatrixD' 11 - cc d - - 0 - reg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getProfile",1041,G__StMyJetUnfold_Cint_287_0_3, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNrep",737,G__StMyJetUnfold_Cint_287_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nrep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_287_0_5, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyJetSVDUnfoldBias::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_287_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfoldBias::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_287_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyJetSVDUnfoldBias::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_287_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyJetSVDUnfoldBias::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_287_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_287_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfoldBias::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_287_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetSVDUnfoldBias::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_287_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfoldBias::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_287_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetSVDUnfoldBias::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyJetSVDUnfoldBias", 1924, G__StMyJetUnfold_Cint_287_0_17, (int) ('i'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias), -1, 0, 1, 1, 1, 0, "u 'StMyJetSVDUnfoldBias' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyJetSVDUnfoldBias", 2050, G__StMyJetUnfold_Cint_287_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_287_0_19, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias), -1, 1, 1, 1, 1, 0, "u 'StMyJetSVDUnfoldBias' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyJetSVDUnfold(void) {
   /* StMyJetSVDUnfold */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold));
   G__memfunc_setup("StMyJetSVDUnfold",1541,G__StMyJetUnfold_Cint_288_0_1, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyJetSVDUnfold",1541,G__StMyJetUnfold_Cint_288_0_2, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold), -1, 0, 9, 1, 1, 0, 
"U 'TH2D' - 0 - hresponse U 'TH2D' - 0 - hpar "
"U 'TH2D' - 0 - hdet U 'TH2D' - 0 - hmc "
"U 'TH2D' - 0 - hvar i - - 0 '2' nx "
"i - - 0 '15' ny i - - 0 '2' dim "
"g - - 0 'true' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unfold",616,G__StMyJetUnfold_Cint_288_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXY",477,G__StMyJetUnfold_Cint_288_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - min i - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOverflow",1152,G__StMyJetUnfold_Cint_288_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReg",586,G__StMyJetUnfold_Cint_288_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - index d - - 0 '1.0' frac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEff",593,G__StMyJetUnfold_Cint_288_0_7, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatch",813,G__StMyJetUnfold_Cint_288_0_8, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecoNoReg",1188,G__StMyJetUnfold_Cint_288_0_9, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecoNoRegErr",1485,G__StMyJetUnfold_Cint_288_0_10, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReco",713,G__StMyJetUnfold_Cint_288_0_11, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecoErr",1010,G__StMyJetUnfold_Cint_288_0_12, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSV",489,G__StMyJetUnfold_Cint_288_0_13, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReg",606,G__StMyJetUnfold_Cint_288_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResponse",1167,G__StMyJetUnfold_Cint_288_0_15, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNx",518,G__StMyJetUnfold_Cint_288_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNy",519,G__StMyJetUnfold_Cint_288_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNdim",712,G__StMyJetUnfold_Cint_288_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFlag",698,G__StMyJetUnfold_Cint_288_0_19, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResponseError",1701,G__StMyJetUnfold_Cint_288_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StMyJetSVDUnfoldResponseError' - 0 - resp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResponseError",1701,G__StMyJetUnfold_Cint_288_0_21, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBias",715,G__StMyJetUnfold_Cint_288_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StMyJetSVDUnfoldBias' - 0 - bias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBias",715,G__StMyJetUnfold_Cint_288_0_23, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_288_0_24, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyJetSVDUnfold::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_288_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfold::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_288_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyJetSVDUnfold::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_288_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyJetSVDUnfold::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_288_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_288_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfold::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_288_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetSVDUnfold::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_288_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyJetSVDUnfold::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_288_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyJetSVDUnfold::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyJetSVDUnfold", 1541, G__StMyJetUnfold_Cint_288_0_36, (int) ('i'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold), -1, 0, 1, 1, 1, 0, "u 'StMyJetSVDUnfold' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyJetSVDUnfold", 1667, G__StMyJetUnfold_Cint_288_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_288_0_38, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold), -1, 1, 1, 1, 1, 0, "u 'StMyJetSVDUnfold' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyRes(void) {
   /* StMyRes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes));
   G__memfunc_setup("GetJetRes",877,G__StMyJetUnfold_Cint_303_0_1, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetJetMatchRatio",1583,G__StMyJetUnfold_Cint_303_0_2, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetJetPtMean",1160,G__StMyJetUnfold_Cint_303_0_3, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_303_0_4, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyRes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_303_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_303_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyRes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_303_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyRes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_303_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_303_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_303_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyRes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_303_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_303_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyRes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StMyRes", 821, G__StMyJetUnfold_Cint_303_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_303_0_17, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes), -1, 1, 1, 1, 1, 0, "u 'StMyRes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyRes2D(void) {
   /* StMyRes2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D));
   G__memfunc_setup("StMyRes2D",813,G__StMyJetUnfold_Cint_304_0_1, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyRes2D",813,G__StMyJetUnfold_Cint_304_0_2, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name i - - 0 - nxpt "
"D - - 10 - xptbins i - - 0 - nxeta "
"D - - 10 - xetabins i - - 0 - nypt "
"D - - 10 - yptbins i - - 0 - nyeta "
"D - - 10 - yetabins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetUnfold_Cint_304_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StMyRes2D' - 0 - jetyield f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRes",877,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetMatchRatio",1583,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtMean",1160,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillJetMatchRatio",1686,G__StMyJetUnfold_Cint_304_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - pt d - - 0 - eta "
"g - - 0 - match d - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillResponse",1238,G__StMyJetUnfold_Cint_304_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - eta1 "
"f - - 0 - pt2 f - - 0 - eta2 "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XIndex",592,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 0, 
"d - - 0 - pt d - - 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YIndex",593,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 0, 
"d - - 0 - pt d - - 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_304_0_11, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyRes2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_304_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_304_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyRes2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_304_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyRes2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_304_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_304_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_304_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyRes2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_304_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_304_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyRes2D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyRes2D", 813, G__StMyJetUnfold_Cint_304_0_23, (int) ('i'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D), -1, 0, 1, 1, 1, 0, "u 'StMyRes2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyRes2D", 939, G__StMyJetUnfold_Cint_304_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_304_0_25, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes2D), -1, 1, 1, 1, 1, 0, "u 'StMyRes2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyRes1D(void) {
   /* StMyRes1D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D));
   G__memfunc_setup("StMyRes1D",812,G__StMyJetUnfold_Cint_305_0_1, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyRes1D",812,G__StMyJetUnfold_Cint_305_0_2, 105, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name i - - 0 - nxpt "
"D - - 10 - xptbins i - - 0 - nypt "
"D - - 10 - yptbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetUnfold_Cint_305_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StMyRes1D' - 0 - jetyield f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRes",877,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetMatchRatio",1583,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtMean",1160,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillResponse",1238,G__StMyJetUnfold_Cint_305_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - pt2 "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetUnfold_Cint_305_0_8, 85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyRes1D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetUnfold_Cint_305_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes1D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetUnfold_Cint_305_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyRes1D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetUnfold_Cint_305_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyRes1D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetUnfold_Cint_305_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetUnfold_Cint_305_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes1D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetUnfold_Cint_305_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyRes1D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetUnfold_Cint_305_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyRes1D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetUnfold_Cint_305_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyRes1D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyRes1D", 812, G__StMyJetUnfold_Cint_305_0_20, (int) ('i'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D), -1, 0, 1, 1, 1, 0, "u 'StMyRes1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyRes1D", 938, G__StMyJetUnfold_Cint_305_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetUnfold_Cint_305_0_22, (int) ('u'), G__get_linked_tagnum(&G__StMyJetUnfold_CintLN_StMyRes1D), -1, 1, 1, 1, 1, 0, "u 'StMyRes1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStMyJetUnfold_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStMyJetUnfold_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStMyJetUnfold_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StMyJetUnfold_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyJetBayesUnfold = { "StMyJetBayesUnfold" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError = { "StMyJetSVDUnfoldResponseError" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias = { "StMyJetSVDUnfoldBias" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyJetSVDUnfold = { "StMyJetSVDUnfold" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyProfile = { "StMyProfile" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyRes = { "StMyRes" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyRes2D = { "StMyRes2D" , 99 , -1 };
G__linked_taginfo G__StMyJetUnfold_CintLN_StMyRes1D = { "StMyRes1D" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStMyJetUnfold_Cint() {
  G__StMyJetUnfold_CintLN_TClass.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TBuffer.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMemberInspector.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TObject.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TArrayD.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyJetBayesUnfold.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TAxis.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TH1D.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TProfile.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_TH2D.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyJetSVDUnfold.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyProfile.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyRes.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyRes2D.tagnum = -1 ;
  G__StMyJetUnfold_CintLN_StMyRes1D.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStMyJetUnfold_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TArrayD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyJetBayesUnfold),sizeof(StMyJetBayesUnfold),-1,323584,(char*)NULL,G__setup_memvarStMyJetBayesUnfold,G__setup_memfuncStMyJetBayesUnfold);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TAxis);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldResponseError),sizeof(StMyJetSVDUnfoldResponseError),-1,323840,(char*)NULL,G__setup_memvarStMyJetSVDUnfoldResponseError,G__setup_memfuncStMyJetSVDUnfoldResponseError);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfoldBias),sizeof(StMyJetSVDUnfoldBias),-1,291072,(char*)NULL,G__setup_memvarStMyJetSVDUnfoldBias,G__setup_memfuncStMyJetSVDUnfoldBias);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyJetSVDUnfold),sizeof(StMyJetSVDUnfold),-1,323840,(char*)NULL,G__setup_memvarStMyJetSVDUnfold,G__setup_memfuncStMyJetSVDUnfold);
   G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyProfile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyRes),sizeof(StMyRes),-1,290819,(char*)NULL,G__setup_memvarStMyRes,G__setup_memfuncStMyRes);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyRes2D),sizeof(StMyRes2D),-1,324864,(char*)NULL,G__setup_memvarStMyRes2D,G__setup_memfuncStMyRes2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetUnfold_CintLN_StMyRes1D),sizeof(StMyRes1D),-1,324864,(char*)NULL,G__setup_memvarStMyRes1D,G__setup_memfuncStMyRes1D);
}
extern "C" void G__cpp_setupStMyJetUnfold_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStMyJetUnfold_Cint()");
  G__set_cpp_environmentStMyJetUnfold_Cint();
  G__cpp_setup_tagtableStMyJetUnfold_Cint();

  G__cpp_setup_inheritanceStMyJetUnfold_Cint();

  G__cpp_setup_typetableStMyJetUnfold_Cint();

  G__cpp_setup_memvarStMyJetUnfold_Cint();

  G__cpp_setup_memfuncStMyJetUnfold_Cint();
  G__cpp_setup_globalStMyJetUnfold_Cint();
  G__cpp_setup_funcStMyJetUnfold_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStMyJetUnfold_Cint();
  return;
}
class G__cpp_setup_initStMyJetUnfold_Cint {
  public:
    G__cpp_setup_initStMyJetUnfold_Cint() { G__add_setup_func("StMyJetUnfold_Cint",(G__incsetup)(&G__cpp_setupStMyJetUnfold_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStMyJetUnfold_Cint() { G__remove_setup_func("StMyJetUnfold_Cint"); }
};
G__cpp_setup_initStMyJetUnfold_Cint G__cpp_setup_initializerStMyJetUnfold_Cint;

