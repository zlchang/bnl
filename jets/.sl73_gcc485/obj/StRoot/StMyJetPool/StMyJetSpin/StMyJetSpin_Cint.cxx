//
// File generated by rootcint at Fri Nov 30 23:32:44 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStMyJetPooldIStMyJetSpindIStMyJetSpin_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StMyJetSpin_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MyJetMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetMC(void *p = 0);
   static void *newArray_MyJetMC(Long_t size, void *p);
   static void delete_MyJetMC(void *p);
   static void deleteArray_MyJetMC(void *p);
   static void destruct_MyJetMC(void *p);
   static void streamer_MyJetMC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetMC*)
   {
      ::MyJetMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetMC", ::MyJetMC::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetMC.h", 15,
                  typeid(::MyJetMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetMC::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetMC) );
      instance.SetNew(&new_MyJetMC);
      instance.SetNewArray(&newArray_MyJetMC);
      instance.SetDelete(&delete_MyJetMC);
      instance.SetDeleteArray(&deleteArray_MyJetMC);
      instance.SetDestructor(&destruct_MyJetMC);
      instance.SetStreamerFunc(&streamer_MyJetMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetMC*)
   {
      return GenerateInitInstanceLocal((::MyJetMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetPar(void *p = 0);
   static void *newArray_MyJetPar(Long_t size, void *p);
   static void delete_MyJetPar(void *p);
   static void deleteArray_MyJetPar(void *p);
   static void destruct_MyJetPar(void *p);
   static void streamer_MyJetPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetPar*)
   {
      ::MyJetPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetPar", ::MyJetPar::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetMC.h", 376,
                  typeid(::MyJetPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetPar::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetPar) );
      instance.SetNew(&new_MyJetPar);
      instance.SetNewArray(&newArray_MyJetPar);
      instance.SetDelete(&delete_MyJetPar);
      instance.SetDeleteArray(&deleteArray_MyJetPar);
      instance.SetDestructor(&destruct_MyJetPar);
      instance.SetStreamerFunc(&streamer_MyJetPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetPar*)
   {
      return GenerateInitInstanceLocal((::MyJetPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetYield_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetYield(void *p = 0);
   static void *newArray_MyJetYield(Long_t size, void *p);
   static void delete_MyJetYield(void *p);
   static void deleteArray_MyJetYield(void *p);
   static void destruct_MyJetYield(void *p);
   static void streamer_MyJetYield(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetYield*)
   {
      ::MyJetYield *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetYield >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetYield", ::MyJetYield::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetYield.h", 10,
                  typeid(::MyJetYield), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetYield::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetYield) );
      instance.SetNew(&new_MyJetYield);
      instance.SetNewArray(&newArray_MyJetYield);
      instance.SetDelete(&delete_MyJetYield);
      instance.SetDeleteArray(&deleteArray_MyJetYield);
      instance.SetDestructor(&destruct_MyJetYield);
      instance.SetStreamerFunc(&streamer_MyJetYield);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetYield*)
   {
      return GenerateInitInstanceLocal((::MyJetYield*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetYield*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetYieldPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetYieldPar(void *p = 0);
   static void *newArray_MyJetYieldPar(Long_t size, void *p);
   static void delete_MyJetYieldPar(void *p);
   static void deleteArray_MyJetYieldPar(void *p);
   static void destruct_MyJetYieldPar(void *p);
   static void streamer_MyJetYieldPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetYieldPar*)
   {
      ::MyJetYieldPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetYieldPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetYieldPar", ::MyJetYieldPar::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetYield.h", 56,
                  typeid(::MyJetYieldPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetYieldPar::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetYieldPar) );
      instance.SetNew(&new_MyJetYieldPar);
      instance.SetNewArray(&newArray_MyJetYieldPar);
      instance.SetDelete(&delete_MyJetYieldPar);
      instance.SetDeleteArray(&deleteArray_MyJetYieldPar);
      instance.SetDestructor(&destruct_MyJetYieldPar);
      instance.SetStreamerFunc(&streamer_MyJetYieldPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetYieldPar*)
   {
      return GenerateInitInstanceLocal((::MyJetYieldPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetYieldPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetTest_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetTest(void *p = 0);
   static void *newArray_MyJetTest(Long_t size, void *p);
   static void delete_MyJetTest(void *p);
   static void deleteArray_MyJetTest(void *p);
   static void destruct_MyJetTest(void *p);
   static void streamer_MyJetTest(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetTest*)
   {
      ::MyJetTest *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetTest >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetTest", ::MyJetTest::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetTest.h", 8,
                  typeid(::MyJetTest), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetTest::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetTest) );
      instance.SetNew(&new_MyJetTest);
      instance.SetNewArray(&newArray_MyJetTest);
      instance.SetDelete(&delete_MyJetTest);
      instance.SetDeleteArray(&deleteArray_MyJetTest);
      instance.SetDestructor(&destruct_MyJetTest);
      instance.SetStreamerFunc(&streamer_MyJetTest);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetTest*)
   {
      return GenerateInitInstanceLocal((::MyJetTest*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetTest*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetTestPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetTestPar(void *p = 0);
   static void *newArray_MyJetTestPar(Long_t size, void *p);
   static void delete_MyJetTestPar(void *p);
   static void deleteArray_MyJetTestPar(void *p);
   static void destruct_MyJetTestPar(void *p);
   static void streamer_MyJetTestPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetTestPar*)
   {
      ::MyJetTestPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetTestPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetTestPar", ::MyJetTestPar::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetTest.h", 44,
                  typeid(::MyJetTestPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetTestPar::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetTestPar) );
      instance.SetNew(&new_MyJetTestPar);
      instance.SetNewArray(&newArray_MyJetTestPar);
      instance.SetDelete(&delete_MyJetTestPar);
      instance.SetDeleteArray(&deleteArray_MyJetTestPar);
      instance.SetDestructor(&destruct_MyJetTestPar);
      instance.SetStreamerFunc(&streamer_MyJetTestPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetTestPar*)
   {
      return GenerateInitInstanceLocal((::MyJetTestPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetTestPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyEventQA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyEventQA(void *p = 0);
   static void *newArray_MyEventQA(Long_t size, void *p);
   static void delete_MyEventQA(void *p);
   static void deleteArray_MyEventQA(void *p);
   static void destruct_MyEventQA(void *p);
   static void streamer_MyEventQA(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyEventQA*)
   {
      ::MyEventQA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyEventQA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyEventQA", ::MyEventQA::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyEventQA.h", 7,
                  typeid(::MyEventQA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyEventQA::Dictionary, isa_proxy, 0,
                  sizeof(::MyEventQA) );
      instance.SetNew(&new_MyEventQA);
      instance.SetNewArray(&newArray_MyEventQA);
      instance.SetDelete(&delete_MyEventQA);
      instance.SetDeleteArray(&deleteArray_MyEventQA);
      instance.SetDestructor(&destruct_MyEventQA);
      instance.SetStreamerFunc(&streamer_MyEventQA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyEventQA*)
   {
      return GenerateInitInstanceLocal((::MyEventQA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyEventQA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetQA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetQA(void *p = 0);
   static void *newArray_MyJetQA(Long_t size, void *p);
   static void delete_MyJetQA(void *p);
   static void deleteArray_MyJetQA(void *p);
   static void destruct_MyJetQA(void *p);
   static void streamer_MyJetQA(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetQA*)
   {
      ::MyJetQA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetQA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetQA", ::MyJetQA::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetQA.h", 15,
                  typeid(::MyJetQA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetQA::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetQA) );
      instance.SetNew(&new_MyJetQA);
      instance.SetNewArray(&newArray_MyJetQA);
      instance.SetDelete(&delete_MyJetQA);
      instance.SetDeleteArray(&deleteArray_MyJetQA);
      instance.SetDestructor(&destruct_MyJetQA);
      instance.SetStreamerFunc(&streamer_MyJetQA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetQA*)
   {
      return GenerateInitInstanceLocal((::MyJetQA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetQA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyTrigQA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyTrigQA(void *p = 0);
   static void *newArray_MyTrigQA(Long_t size, void *p);
   static void delete_MyTrigQA(void *p);
   static void deleteArray_MyTrigQA(void *p);
   static void destruct_MyTrigQA(void *p);
   static void streamer_MyTrigQA(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyTrigQA*)
   {
      ::MyTrigQA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyTrigQA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyTrigQA", ::MyTrigQA::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyTrigQA.h", 16,
                  typeid(::MyTrigQA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyTrigQA::Dictionary, isa_proxy, 0,
                  sizeof(::MyTrigQA) );
      instance.SetNew(&new_MyTrigQA);
      instance.SetNewArray(&newArray_MyTrigQA);
      instance.SetDelete(&delete_MyTrigQA);
      instance.SetDeleteArray(&deleteArray_MyTrigQA);
      instance.SetDestructor(&destruct_MyTrigQA);
      instance.SetStreamerFunc(&streamer_MyTrigQA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyTrigQA*)
   {
      return GenerateInitInstanceLocal((::MyTrigQA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyTrigQA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetSpin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetSpin(void *p = 0);
   static void *newArray_MyJetSpin(Long_t size, void *p);
   static void delete_MyJetSpin(void *p);
   static void deleteArray_MyJetSpin(void *p);
   static void destruct_MyJetSpin(void *p);
   static void streamer_MyJetSpin(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetSpin*)
   {
      ::MyJetSpin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetSpin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetSpin", ::MyJetSpin::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetSpin.h", 13,
                  typeid(::MyJetSpin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetSpin::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetSpin) );
      instance.SetNew(&new_MyJetSpin);
      instance.SetNewArray(&newArray_MyJetSpin);
      instance.SetDelete(&delete_MyJetSpin);
      instance.SetDeleteArray(&deleteArray_MyJetSpin);
      instance.SetDestructor(&destruct_MyJetSpin);
      instance.SetStreamerFunc(&streamer_MyJetSpin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetSpin*)
   {
      return GenerateInitInstanceLocal((::MyJetSpin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetSpin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetCrs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetCrs(void *p = 0);
   static void *newArray_MyJetCrs(Long_t size, void *p);
   static void delete_MyJetCrs(void *p);
   static void deleteArray_MyJetCrs(void *p);
   static void destruct_MyJetCrs(void *p);
   static void streamer_MyJetCrs(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetCrs*)
   {
      ::MyJetCrs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetCrs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetCrs", ::MyJetCrs::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetCrs.h", 17,
                  typeid(::MyJetCrs), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetCrs::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetCrs) );
      instance.SetNew(&new_MyJetCrs);
      instance.SetNewArray(&newArray_MyJetCrs);
      instance.SetDelete(&delete_MyJetCrs);
      instance.SetDeleteArray(&deleteArray_MyJetCrs);
      instance.SetDestructor(&destruct_MyJetCrs);
      instance.SetStreamerFunc(&streamer_MyJetCrs);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetCrs*)
   {
      return GenerateInitInstanceLocal((::MyJetCrs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetCrs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetAsym_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetAsym(void *p = 0);
   static void *newArray_MyJetAsym(Long_t size, void *p);
   static void delete_MyJetAsym(void *p);
   static void deleteArray_MyJetAsym(void *p);
   static void destruct_MyJetAsym(void *p);
   static void streamer_MyJetAsym(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetAsym*)
   {
      ::MyJetAsym *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetAsym >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetAsym", ::MyJetAsym::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetAsym.h", 18,
                  typeid(::MyJetAsym), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetAsym::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetAsym) );
      instance.SetNew(&new_MyJetAsym);
      instance.SetNewArray(&newArray_MyJetAsym);
      instance.SetDelete(&delete_MyJetAsym);
      instance.SetDeleteArray(&deleteArray_MyJetAsym);
      instance.SetDestructor(&destruct_MyJetAsym);
      instance.SetStreamerFunc(&streamer_MyJetAsym);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetAsym*)
   {
      return GenerateInitInstanceLocal((::MyJetAsym*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetAsym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetPtSpin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetPtSpin(void *p = 0);
   static void *newArray_MyJetPtSpin(Long_t size, void *p);
   static void delete_MyJetPtSpin(void *p);
   static void deleteArray_MyJetPtSpin(void *p);
   static void destruct_MyJetPtSpin(void *p);
   static void streamer_MyJetPtSpin(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetPtSpin*)
   {
      ::MyJetPtSpin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetPtSpin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetPtSpin", ::MyJetPtSpin::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetPtAsym.h", 15,
                  typeid(::MyJetPtSpin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetPtSpin::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetPtSpin) );
      instance.SetNew(&new_MyJetPtSpin);
      instance.SetNewArray(&newArray_MyJetPtSpin);
      instance.SetDelete(&delete_MyJetPtSpin);
      instance.SetDeleteArray(&deleteArray_MyJetPtSpin);
      instance.SetDestructor(&destruct_MyJetPtSpin);
      instance.SetStreamerFunc(&streamer_MyJetPtSpin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetPtSpin*)
   {
      return GenerateInitInstanceLocal((::MyJetPtSpin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetPtSpin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetPtAsym_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetPtAsym(void *p = 0);
   static void *newArray_MyJetPtAsym(Long_t size, void *p);
   static void delete_MyJetPtAsym(void *p);
   static void deleteArray_MyJetPtAsym(void *p);
   static void destruct_MyJetPtAsym(void *p);
   static void streamer_MyJetPtAsym(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetPtAsym*)
   {
      ::MyJetPtAsym *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetPtAsym >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetPtAsym", ::MyJetPtAsym::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetPtAsym.h", 50,
                  typeid(::MyJetPtAsym), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetPtAsym::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetPtAsym) );
      instance.SetNew(&new_MyJetPtAsym);
      instance.SetNewArray(&newArray_MyJetPtAsym);
      instance.SetDelete(&delete_MyJetPtAsym);
      instance.SetDeleteArray(&deleteArray_MyJetPtAsym);
      instance.SetDestructor(&destruct_MyJetPtAsym);
      instance.SetStreamerFunc(&streamer_MyJetPtAsym);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetPtAsym*)
   {
      return GenerateInitInstanceLocal((::MyJetPtAsym*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetPtAsym*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetSum_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetSum(void *p = 0);
   static void *newArray_MyJetSum(Long_t size, void *p);
   static void delete_MyJetSum(void *p);
   static void deleteArray_MyJetSum(void *p);
   static void destruct_MyJetSum(void *p);
   static void streamer_MyJetSum(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetSum*)
   {
      ::MyJetSum *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetSum >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetSum", ::MyJetSum::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetSum.h", 13,
                  typeid(::MyJetSum), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetSum::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetSum) );
      instance.SetNew(&new_MyJetSum);
      instance.SetNewArray(&newArray_MyJetSum);
      instance.SetDelete(&delete_MyJetSum);
      instance.SetDeleteArray(&deleteArray_MyJetSum);
      instance.SetDestructor(&destruct_MyJetSum);
      instance.SetStreamerFunc(&streamer_MyJetSum);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetSum*)
   {
      return GenerateInitInstanceLocal((::MyJetSum*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetSum*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetVtx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetVtx(void *p = 0);
   static void *newArray_MyJetVtx(Long_t size, void *p);
   static void delete_MyJetVtx(void *p);
   static void deleteArray_MyJetVtx(void *p);
   static void destruct_MyJetVtx(void *p);
   static void streamer_MyJetVtx(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetVtx*)
   {
      ::MyJetVtx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetVtx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetVtx", ::MyJetVtx::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetVtx.h", 8,
                  typeid(::MyJetVtx), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetVtx::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetVtx) );
      instance.SetNew(&new_MyJetVtx);
      instance.SetNewArray(&newArray_MyJetVtx);
      instance.SetDelete(&delete_MyJetVtx);
      instance.SetDeleteArray(&deleteArray_MyJetVtx);
      instance.SetDestructor(&destruct_MyJetVtx);
      instance.SetStreamerFunc(&streamer_MyJetVtx);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetVtx*)
   {
      return GenerateInitInstanceLocal((::MyJetVtx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetVtx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetRes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MyJetRes(void *p);
   static void deleteArray_MyJetRes(void *p);
   static void destruct_MyJetRes(void *p);
   static void streamer_MyJetRes(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetRes*)
   {
      ::MyJetRes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetRes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetRes", ::MyJetRes::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetRes.h", 10,
                  typeid(::MyJetRes), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetRes::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetRes) );
      instance.SetDelete(&delete_MyJetRes);
      instance.SetDeleteArray(&deleteArray_MyJetRes);
      instance.SetDestructor(&destruct_MyJetRes);
      instance.SetStreamerFunc(&streamer_MyJetRes);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetRes*)
   {
      return GenerateInitInstanceLocal((::MyJetRes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetRes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetRes2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetRes2D(void *p = 0);
   static void *newArray_MyJetRes2D(Long_t size, void *p);
   static void delete_MyJetRes2D(void *p);
   static void deleteArray_MyJetRes2D(void *p);
   static void destruct_MyJetRes2D(void *p);
   static void streamer_MyJetRes2D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetRes2D*)
   {
      ::MyJetRes2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetRes2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetRes2D", ::MyJetRes2D::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetRes.h", 22,
                  typeid(::MyJetRes2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetRes2D::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetRes2D) );
      instance.SetNew(&new_MyJetRes2D);
      instance.SetNewArray(&newArray_MyJetRes2D);
      instance.SetDelete(&delete_MyJetRes2D);
      instance.SetDeleteArray(&deleteArray_MyJetRes2D);
      instance.SetDestructor(&destruct_MyJetRes2D);
      instance.SetStreamerFunc(&streamer_MyJetRes2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetRes2D*)
   {
      return GenerateInitInstanceLocal((::MyJetRes2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetRes2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyJetRes1D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyJetRes1D(void *p = 0);
   static void *newArray_MyJetRes1D(Long_t size, void *p);
   static void delete_MyJetRes1D(void *p);
   static void deleteArray_MyJetRes1D(void *p);
   static void destruct_MyJetRes1D(void *p);
   static void streamer_MyJetRes1D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyJetRes1D*)
   {
      ::MyJetRes1D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyJetRes1D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyJetRes1D", ::MyJetRes1D::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/MyJetRes.h", 90,
                  typeid(::MyJetRes1D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyJetRes1D::Dictionary, isa_proxy, 0,
                  sizeof(::MyJetRes1D) );
      instance.SetNew(&new_MyJetRes1D);
      instance.SetNewArray(&newArray_MyJetRes1D);
      instance.SetDelete(&delete_MyJetRes1D);
      instance.SetDeleteArray(&deleteArray_MyJetRes1D);
      instance.SetDestructor(&destruct_MyJetRes1D);
      instance.SetStreamerFunc(&streamer_MyJetRes1D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyJetRes1D*)
   {
      return GenerateInitInstanceLocal((::MyJetRes1D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyJetRes1D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MyJetMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetMC::Class_Name()
{
   return "MyJetMC";
}

//______________________________________________________________________________
const char *MyJetMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetPar::Class_Name()
{
   return "MyJetPar";
}

//______________________________________________________________________________
const char *MyJetPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetYield::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetYield::Class_Name()
{
   return "MyJetYield";
}

//______________________________________________________________________________
const char *MyJetYield::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYield*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetYield::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYield*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetYield::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYield*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetYield::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYield*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetYieldPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetYieldPar::Class_Name()
{
   return "MyJetYieldPar";
}

//______________________________________________________________________________
const char *MyJetYieldPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYieldPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetYieldPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYieldPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetYieldPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYieldPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetYieldPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetYieldPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetTest::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetTest::Class_Name()
{
   return "MyJetTest";
}

//______________________________________________________________________________
const char *MyJetTest::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTest*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetTest::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTest*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetTest::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTest*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetTest::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTest*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetTestPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetTestPar::Class_Name()
{
   return "MyJetTestPar";
}

//______________________________________________________________________________
const char *MyJetTestPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTestPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetTestPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTestPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetTestPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTestPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetTestPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetTestPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyEventQA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyEventQA::Class_Name()
{
   return "MyEventQA";
}

//______________________________________________________________________________
const char *MyEventQA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyEventQA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyEventQA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyEventQA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyEventQA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyEventQA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyEventQA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyEventQA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetQA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetQA::Class_Name()
{
   return "MyJetQA";
}

//______________________________________________________________________________
const char *MyJetQA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetQA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetQA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetQA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetQA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetQA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetQA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetQA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyTrigQA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyTrigQA::Class_Name()
{
   return "MyTrigQA";
}

//______________________________________________________________________________
const char *MyTrigQA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyTrigQA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyTrigQA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyTrigQA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyTrigQA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyTrigQA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyTrigQA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyTrigQA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetSpin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetSpin::Class_Name()
{
   return "MyJetSpin";
}

//______________________________________________________________________________
const char *MyJetSpin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSpin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetSpin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSpin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetSpin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSpin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetSpin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSpin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetCrs::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetCrs::Class_Name()
{
   return "MyJetCrs";
}

//______________________________________________________________________________
const char *MyJetCrs::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetCrs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetCrs::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetCrs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetCrs::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetCrs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetCrs::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetCrs*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetAsym::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetAsym::Class_Name()
{
   return "MyJetAsym";
}

//______________________________________________________________________________
const char *MyJetAsym::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetAsym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetAsym::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetAsym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetAsym::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetAsym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetAsym::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetAsym*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetPtSpin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetPtSpin::Class_Name()
{
   return "MyJetPtSpin";
}

//______________________________________________________________________________
const char *MyJetPtSpin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtSpin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetPtSpin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtSpin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetPtSpin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtSpin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetPtSpin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtSpin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetPtAsym::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetPtAsym::Class_Name()
{
   return "MyJetPtAsym";
}

//______________________________________________________________________________
const char *MyJetPtAsym::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtAsym*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetPtAsym::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtAsym*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetPtAsym::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtAsym*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetPtAsym::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetPtAsym*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetSum::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetSum::Class_Name()
{
   return "MyJetSum";
}

//______________________________________________________________________________
const char *MyJetSum::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSum*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetSum::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSum*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetSum::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSum*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetSum::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetSum*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetVtx::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetVtx::Class_Name()
{
   return "MyJetVtx";
}

//______________________________________________________________________________
const char *MyJetVtx::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetVtx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetVtx::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetVtx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetVtx::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetVtx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetVtx::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetVtx*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetRes::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetRes::Class_Name()
{
   return "MyJetRes";
}

//______________________________________________________________________________
const char *MyJetRes::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetRes::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetRes::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetRes::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetRes2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetRes2D::Class_Name()
{
   return "MyJetRes2D";
}

//______________________________________________________________________________
const char *MyJetRes2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetRes2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetRes2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetRes2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyJetRes1D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyJetRes1D::Class_Name()
{
   return "MyJetRes1D";
}

//______________________________________________________________________________
const char *MyJetRes1D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes1D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyJetRes1D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes1D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyJetRes1D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes1D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyJetRes1D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyJetRes1D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MyJetMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetMC.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjetpt;
      R__b >> hjetptnovtx;
      R__b >> hjetptnovtxprof;
      R__b >> hxparton;
      R__b >> hxgparton;
      R__b >> hxparticle;
      R__b >> hxgparticle;
      R__b >> hproc;
      R__b >> htwojetpt;
      R__b >> hjetptparton;
      R__b >> hjetptparticle;
      R__b >> hjetptparticlecrr;
      R__b >> hdptparton;
      R__b >> hdptparticle;
      R__b >> hdptparticlecrr;
      R__b >> hdptpartonw2;
      R__b >> hdptparticlew2;
      R__b >> hdptparticlecrrw2;
      R__b >> hjetpartonN;
      R__b >> hjetparticleN;
      R__b >> hjetpartonNprof;
      R__b >> hjetparticleNprof;
      R__b >> hjetdpt;
      R__b >> hjetdpt2d;
      R__b >> hjetdptw2;
      R__b >> hptdetector;
      R__b >> hptdetectorw2;
      int R__i;
      for (R__i = 0; R__i < 101; R__i++)
         R__b >> haLLdetector[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b >> haLLdetector2d[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b >> haLLdetectorw2[R__i];
      R__b.CheckByteCount(R__s, R__c, MyJetMC::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetMC::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hjetpt;
      R__b << (TObject*)hjetptnovtx;
      R__b << (TObject*)hjetptnovtxprof;
      R__b << (TObject*)hxparton;
      R__b << (TObject*)hxgparton;
      R__b << (TObject*)hxparticle;
      R__b << (TObject*)hxgparticle;
      R__b << (TObject*)hproc;
      R__b << (TObject*)htwojetpt;
      R__b << (TObject*)hjetptparton;
      R__b << (TObject*)hjetptparticle;
      R__b << (TObject*)hjetptparticlecrr;
      R__b << (TObject*)hdptparton;
      R__b << (TObject*)hdptparticle;
      R__b << (TObject*)hdptparticlecrr;
      R__b << (TObject*)hdptpartonw2;
      R__b << (TObject*)hdptparticlew2;
      R__b << (TObject*)hdptparticlecrrw2;
      R__b << (TObject*)hjetpartonN;
      R__b << (TObject*)hjetparticleN;
      R__b << (TObject*)hjetpartonNprof;
      R__b << (TObject*)hjetparticleNprof;
      R__b << (TObject*)hjetdpt;
      R__b << (TObject*)hjetdpt2d;
      R__b << (TObject*)hjetdptw2;
      R__b << (TObject*)hptdetector;
      R__b << (TObject*)hptdetectorw2;
      int R__i;
      for (R__i = 0; R__i < 101; R__i++)
         R__b << (TObject*)haLLdetector[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b << (TObject*)haLLdetector2d[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b << (TObject*)haLLdetectorw2[R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetMC.
      TClass *R__cl = ::MyJetMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpt", &hjetpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptnovtx", &hjetptnovtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptnovtxprof", &hjetptnovtxprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hxparton", &hxparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hxgparton", &hxgparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hxparticle", &hxparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hxgparticle", &hxgparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hproc", &hproc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htwojetpt", &htwojetpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptparton", &hjetptparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptparticle", &hjetptparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptparticlecrr", &hjetptparticlecrr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptparton", &hdptparton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptparticle", &hdptparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptparticlecrr", &hdptparticlecrr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptpartonw2", &hdptpartonw2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptparticlew2", &hdptparticlew2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptparticlecrrw2", &hdptparticlecrrw2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpartonN", &hjetpartonN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetparticleN", &hjetparticleN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpartonNprof", &hjetpartonNprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetparticleNprof", &hjetparticleNprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdpt", &hjetdpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdpt2d", &hjetdpt2d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdptw2", &hjetdptw2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptdetector", &hptdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptdetectorw2", &hptdetectorw2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haLLdetector[101]", &haLLdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haLLdetector2d[101]", &haLLdetector2d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haLLdetectorw2[101]", &haLLdetectorw2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetMC(void *p) {
      return  p ? new(p) ::MyJetMC : new ::MyJetMC;
   }
   static void *newArray_MyJetMC(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetMC[nElements] : new ::MyJetMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetMC(void *p) {
      delete ((::MyJetMC*)p);
   }
   static void deleteArray_MyJetMC(void *p) {
      delete [] ((::MyJetMC*)p);
   }
   static void destruct_MyJetMC(void *p) {
      typedef ::MyJetMC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetMC(TBuffer &buf, void *obj) {
      ((::MyJetMC*)obj)->::MyJetMC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetMC

//______________________________________________________________________________
void MyJetPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hx;
      R__b >> hxg;
      R__b >> hptpar;
      R__b >> hptparw2;
      int R__i;
      for (R__i = 0; R__i < 101; R__i++)
         R__b >> haLLpar[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b >> haLLpar2d[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b >> haLLparw2[R__i];
      R__b.CheckByteCount(R__s, R__c, MyJetPar::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetPar::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hx;
      R__b << (TObject*)hxg;
      R__b << (TObject*)hptpar;
      R__b << (TObject*)hptparw2;
      int R__i;
      for (R__i = 0; R__i < 101; R__i++)
         R__b << (TObject*)haLLpar[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b << (TObject*)haLLpar2d[R__i];
      for (R__i = 0; R__i < 101; R__i++)
         R__b << (TObject*)haLLparw2[R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetPar.
      TClass *R__cl = ::MyJetPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hx", &hx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hxg", &hxg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptpar", &hptpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptparw2", &hptparw2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haLLpar[101]", &haLLpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haLLpar2d[101]", &haLLpar2d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haLLparw2[101]", &haLLparw2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetPar(void *p) {
      return  p ? new(p) ::MyJetPar : new ::MyJetPar;
   }
   static void *newArray_MyJetPar(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetPar[nElements] : new ::MyJetPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetPar(void *p) {
      delete ((::MyJetPar*)p);
   }
   static void deleteArray_MyJetPar(void *p) {
      delete [] ((::MyJetPar*)p);
   }
   static void destruct_MyJetPar(void *p) {
      typedef ::MyJetPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetPar(TBuffer &buf, void *obj) {
      ((::MyJetPar*)obj)->::MyJetPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetPar

//______________________________________________________________________________
void MyJetYield::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetYield.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjetptrtprof;
      R__b >> hjettwojet;
      R__b >> hjetdetector;
      R__b.CheckByteCount(R__s, R__c, MyJetYield::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetYield::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << hjetptrtprof;
      R__b << (TObject*)hjettwojet;
      R__b << (TObject*)hjetdetector;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetYield::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetYield.
      TClass *R__cl = ::MyJetYield::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptrtprof", &hjetptrtprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwojet", &hjettwojet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdetector", &hjetdetector);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetYield(void *p) {
      return  p ? new(p) ::MyJetYield : new ::MyJetYield;
   }
   static void *newArray_MyJetYield(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetYield[nElements] : new ::MyJetYield[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetYield(void *p) {
      delete ((::MyJetYield*)p);
   }
   static void deleteArray_MyJetYield(void *p) {
      delete [] ((::MyJetYield*)p);
   }
   static void destruct_MyJetYield(void *p) {
      typedef ::MyJetYield current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetYield(TBuffer &buf, void *obj) {
      ((::MyJetYield*)obj)->::MyJetYield::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetYield

//______________________________________________________________________________
void MyJetYieldPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetYieldPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hpteta;
      R__b >> hjetptres;
      R__b.CheckByteCount(R__s, R__c, MyJetYieldPar::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetYieldPar::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hpteta;
      R__b << (TObject*)hjetptres;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetYieldPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetYieldPar.
      TClass *R__cl = ::MyJetYieldPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hpteta", &hpteta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptres", &hjetptres);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetYieldPar(void *p) {
      return  p ? new(p) ::MyJetYieldPar : new ::MyJetYieldPar;
   }
   static void *newArray_MyJetYieldPar(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetYieldPar[nElements] : new ::MyJetYieldPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetYieldPar(void *p) {
      delete ((::MyJetYieldPar*)p);
   }
   static void deleteArray_MyJetYieldPar(void *p) {
      delete [] ((::MyJetYieldPar*)p);
   }
   static void destruct_MyJetYieldPar(void *p) {
      typedef ::MyJetYieldPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetYieldPar(TBuffer &buf, void *obj) {
      ((::MyJetYieldPar*)obj)->::MyJetYieldPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetYieldPar

//______________________________________________________________________________
void MyJetTest::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetTest.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjetpt;
      R__b >> hjeteta;
      R__b >> hjetphi;
      R__b >> hjettwo;
      R__b.CheckByteCount(R__s, R__c, MyJetTest::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetTest::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hjetpt;
      R__b << (TObject*)hjeteta;
      R__b << (TObject*)hjetphi;
      R__b << (TObject*)hjettwo;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetTest::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetTest.
      TClass *R__cl = ::MyJetTest::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpt", &hjetpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeteta", &hjeteta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetphi", &hjetphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwo", &hjettwo);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetTest(void *p) {
      return  p ? new(p) ::MyJetTest : new ::MyJetTest;
   }
   static void *newArray_MyJetTest(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetTest[nElements] : new ::MyJetTest[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetTest(void *p) {
      delete ((::MyJetTest*)p);
   }
   static void deleteArray_MyJetTest(void *p) {
      delete [] ((::MyJetTest*)p);
   }
   static void destruct_MyJetTest(void *p) {
      typedef ::MyJetTest current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetTest(TBuffer &buf, void *obj) {
      ((::MyJetTest*)obj)->::MyJetTest::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetTest

//______________________________________________________________________________
void MyJetTestPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetTestPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hpt;
      R__b.CheckByteCount(R__s, R__c, MyJetTestPar::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetTestPar::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hpt;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetTestPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetTestPar.
      TClass *R__cl = ::MyJetTestPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hpt", &hpt);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetTestPar(void *p) {
      return  p ? new(p) ::MyJetTestPar : new ::MyJetTestPar;
   }
   static void *newArray_MyJetTestPar(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetTestPar[nElements] : new ::MyJetTestPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetTestPar(void *p) {
      delete ((::MyJetTestPar*)p);
   }
   static void deleteArray_MyJetTestPar(void *p) {
      delete [] ((::MyJetTestPar*)p);
   }
   static void destruct_MyJetTestPar(void *p) {
      typedef ::MyJetTestPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetTestPar(TBuffer &buf, void *obj) {
      ((::MyJetTestPar*)obj)->::MyJetTestPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetTestPar

//______________________________________________________________________________
void MyEventQA::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyEventQA.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hweight;
      R__b >> hmatchedVx;
      R__b >> hvertexz;
      R__b >> hnposvtx;
      R__b.CheckByteCount(R__s, R__c, MyEventQA::IsA());
   } else {
      R__c = R__b.WriteVersion(MyEventQA::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hweight;
      R__b << (TObject*)hmatchedVx;
      R__b << (TObject*)hvertexz;
      R__b << (TObject*)hnposvtx;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyEventQA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyEventQA.
      TClass *R__cl = ::MyEventQA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hweight", &hweight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hmatchedVx", &hmatchedVx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hvertexz", &hvertexz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnposvtx", &hnposvtx);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyEventQA(void *p) {
      return  p ? new(p) ::MyEventQA : new ::MyEventQA;
   }
   static void *newArray_MyEventQA(Long_t nElements, void *p) {
      return p ? new(p) ::MyEventQA[nElements] : new ::MyEventQA[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyEventQA(void *p) {
      delete ((::MyEventQA*)p);
   }
   static void deleteArray_MyEventQA(void *p) {
      delete [] ((::MyEventQA*)p);
   }
   static void destruct_MyEventQA(void *p) {
      typedef ::MyEventQA current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyEventQA(TBuffer &buf, void *obj) {
      ((::MyEventQA*)obj)->::MyEventQA::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyEventQA

//______________________________________________________________________________
void MyJetQA::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetQA.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjetptnovtx;
      R__b >> hjetnposvtx;
      R__b >> hjetvertexz;
      R__b >> hjetpt;
      R__b >> hjeteta;
      R__b >> hjetphi;
      R__b >> hjetrt;
      R__b >> hjetmult;
      R__b >> hjetparjt;
      R__b >> hjetparz;
      R__b >> hjettrkmult;
      R__b >> hjettrkpt;
      R__b >> hjettwrmult;
      R__b >> hjettwrpt;
      R__b >> hjetrtprof;
      R__b >> hjetptprof;
      R__b >> hjettrkmultprof;
      R__b >> hjettwrmultprof;
      R__b >> hjetptarea;
      R__b >> hjetdptue;
      R__b >> hjettrkmultue;
      R__b >> hjettwrmultue;
      R__b >> hdptue;
      R__b >> hmultue;
      R__b >> hjetuert;
      R__b >> hjetueparjt;
      R__b >> hjetueparz;
      R__b >> htrkmultue;
      R__b >> htwrmultue;
      R__b >> htrkptue;
      R__b >> htwrptue;
      R__b >> hdpt3due;
      R__b >> hmult3due;
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hjetprof[R__i];
      R__b >> hjetetart;
      R__b.CheckByteCount(R__s, R__c, MyJetQA::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetQA::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hjetptnovtx;
      R__b << (TObject*)hjetnposvtx;
      R__b << (TObject*)hjetvertexz;
      R__b << (TObject*)hjetpt;
      R__b << (TObject*)hjeteta;
      R__b << (TObject*)hjetphi;
      R__b << (TObject*)hjetrt;
      R__b << (TObject*)hjetmult;
      R__b << (TObject*)hjetparjt;
      R__b << (TObject*)hjetparz;
      R__b << (TObject*)hjettrkmult;
      R__b << (TObject*)hjettrkpt;
      R__b << (TObject*)hjettwrmult;
      R__b << (TObject*)hjettwrpt;
      R__b << (TObject*)hjetrtprof;
      R__b << (TObject*)hjetptprof;
      R__b << (TObject*)hjettrkmultprof;
      R__b << (TObject*)hjettwrmultprof;
      R__b << (TObject*)hjetptarea;
      R__b << (TObject*)hjetdptue;
      R__b << (TObject*)hjettrkmultue;
      R__b << (TObject*)hjettwrmultue;
      R__b << (TObject*)hdptue;
      R__b << (TObject*)hmultue;
      R__b << (TObject*)hjetuert;
      R__b << (TObject*)hjetueparjt;
      R__b << (TObject*)hjetueparz;
      R__b << (TObject*)htrkmultue;
      R__b << (TObject*)htwrmultue;
      R__b << (TObject*)htrkptue;
      R__b << (TObject*)htwrptue;
      R__b << (TObject*)hdpt3due;
      R__b << (TObject*)hmult3due;
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hjetprof[R__i];
      R__b << (TObject*)hjetetart;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetQA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetQA.
      TClass *R__cl = ::MyJetQA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptnovtx", &hjetptnovtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetnposvtx", &hjetnposvtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetvertexz", &hjetvertexz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpt", &hjetpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeteta", &hjeteta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetphi", &hjetphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetrt", &hjetrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmult", &hjetmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetparjt", &hjetparjt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetparz", &hjetparz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettrkmult", &hjettrkmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettrkpt", &hjettrkpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwrmult", &hjettwrmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwrpt", &hjettwrpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetrtprof", &hjetrtprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptprof", &hjetptprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettrkmultprof", &hjettrkmultprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwrmultprof", &hjettwrmultprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptarea", &hjetptarea);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdptue", &hjetdptue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettrkmultue", &hjettrkmultue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwrmultue", &hjettwrmultue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdptue", &hdptue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hmultue", &hmultue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetuert", &hjetuert);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetueparjt", &hjetueparjt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetueparz", &hjetueparz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htrkmultue", &htrkmultue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htwrmultue", &htwrmultue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htrkptue", &htrkptue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htwrptue", &htwrptue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdpt3due", &hdpt3due);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hmult3due", &hmult3due);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetprof[3]", &hjetprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetetart", &hjetetart);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetQA(void *p) {
      return  p ? new(p) ::MyJetQA : new ::MyJetQA;
   }
   static void *newArray_MyJetQA(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetQA[nElements] : new ::MyJetQA[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetQA(void *p) {
      delete ((::MyJetQA*)p);
   }
   static void deleteArray_MyJetQA(void *p) {
      delete [] ((::MyJetQA*)p);
   }
   static void destruct_MyJetQA(void *p) {
      typedef ::MyJetQA current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetQA(TBuffer &buf, void *obj) {
      ((::MyJetQA*)obj)->::MyJetQA::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetQA

//______________________________________________________________________________
void MyTrigQA::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyTrigQA.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         map<string,int> &R__stl =  trigNevnt;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            int R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, int > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         map<string,float> &R__stl =  trigPrescale;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            float R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, float > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         map<int,string> &R__stl =  trigIdmap;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            string R__t2;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t2 = R__str.Data();}
            typedef int Value_t;
            std::pair<Value_t const, string > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b.CheckByteCount(R__s, R__c, MyTrigQA::IsA());
   } else {
      R__c = R__b.WriteVersion(MyTrigQA::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         map<string,int> &R__stl =  trigNevnt;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<string,int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      {
         map<string,float> &R__stl =  trigPrescale;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<string,float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      {
         map<int,string> &R__stl =  trigIdmap;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<int,string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << ((*R__k).first );
            {TString R__str(((*R__k).second).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyTrigQA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyTrigQA.
      TClass *R__cl = ::MyTrigQA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigNevnt", (void*)&trigNevnt);
      R__insp.InspectMember("map<string,int>", (void*)&trigNevnt, "trigNevnt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigPrescale", (void*)&trigPrescale);
      R__insp.InspectMember("map<string,float>", (void*)&trigPrescale, "trigPrescale.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigIdmap", (void*)&trigIdmap);
      R__insp.InspectMember("map<int,string>", (void*)&trigIdmap, "trigIdmap.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyTrigQA(void *p) {
      return  p ? new(p) ::MyTrigQA : new ::MyTrigQA;
   }
   static void *newArray_MyTrigQA(Long_t nElements, void *p) {
      return p ? new(p) ::MyTrigQA[nElements] : new ::MyTrigQA[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyTrigQA(void *p) {
      delete ((::MyTrigQA*)p);
   }
   static void deleteArray_MyTrigQA(void *p) {
      delete [] ((::MyTrigQA*)p);
   }
   static void destruct_MyTrigQA(void *p) {
      typedef ::MyTrigQA current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyTrigQA(TBuffer &buf, void *obj) {
      ((::MyTrigQA*)obj)->::MyTrigQA::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyTrigQA

//______________________________________________________________________________
void MyJetSpin::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetSpin.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjetpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjettwopt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjetsigpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjetmeanpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjetdpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjetmult[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hjetmultue[R__i];
      R__b.CheckByteCount(R__s, R__c, MyJetSpin::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetSpin::IsA(), kTRUE);
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjetpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjettwopt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjetsigpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjetmeanpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjetdpt[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjetmult[R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hjetmultue[R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetSpin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetSpin.
      TClass *R__cl = ::MyJetSpin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpt[4]", &hjetpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjettwopt[4]", &hjettwopt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigpt[4]", &hjetsigpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmeanpt[4]", &hjetmeanpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetdpt[4]", &hjetdpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmult[4]", &hjetmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmultue[4]", &hjetmultue);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetSpin(void *p) {
      return  p ? new(p) ::MyJetSpin : new ::MyJetSpin;
   }
   static void *newArray_MyJetSpin(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetSpin[nElements] : new ::MyJetSpin[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetSpin(void *p) {
      delete ((::MyJetSpin*)p);
   }
   static void deleteArray_MyJetSpin(void *p) {
      delete [] ((::MyJetSpin*)p);
   }
   static void destruct_MyJetSpin(void *p) {
      typedef ::MyJetSpin current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetSpin(TBuffer &buf, void *obj) {
      ((::MyJetSpin*)obj)->::MyJetSpin::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetSpin

//______________________________________________________________________________
void MyJetCrs::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetCrs.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjet;
      R__b >> hjetblue;
      R__b >> hjetyell;
      R__b >> hjetlsign;
      R__b >> hjetusign;
      R__b >> hjetsig;
      R__b >> hjetsigblue;
      R__b >> hjetsigyell;
      R__b >> hjetsiglsign;
      R__b >> hjetsigusign;
      R__b >> hjeterr;
      R__b >> hjeterrblue;
      R__b >> hjeterryell;
      R__b >> hjeterrlsign;
      R__b >> hjeterrusign;
      R__b.CheckByteCount(R__s, R__c, MyJetCrs::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetCrs::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hjet;
      R__b << (TObject*)hjetblue;
      R__b << (TObject*)hjetyell;
      R__b << (TObject*)hjetlsign;
      R__b << (TObject*)hjetusign;
      R__b << (TObject*)hjetsig;
      R__b << (TObject*)hjetsigblue;
      R__b << (TObject*)hjetsigyell;
      R__b << (TObject*)hjetsiglsign;
      R__b << (TObject*)hjetsigusign;
      R__b << (TObject*)hjeterr;
      R__b << (TObject*)hjeterrblue;
      R__b << (TObject*)hjeterryell;
      R__b << (TObject*)hjeterrlsign;
      R__b << (TObject*)hjeterrusign;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetCrs::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetCrs.
      TClass *R__cl = ::MyJetCrs::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjet", &hjet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetblue", &hjetblue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetyell", &hjetyell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetlsign", &hjetlsign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetusign", &hjetusign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsig", &hjetsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigblue", &hjetsigblue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigyell", &hjetsigyell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsiglsign", &hjetsiglsign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigusign", &hjetsigusign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterr", &hjeterr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterrblue", &hjeterrblue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterryell", &hjeterryell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterrlsign", &hjeterrlsign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterrusign", &hjeterrusign);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetCrs(void *p) {
      return  p ? new(p) ::MyJetCrs : new ::MyJetCrs;
   }
   static void *newArray_MyJetCrs(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetCrs[nElements] : new ::MyJetCrs[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetCrs(void *p) {
      delete ((::MyJetCrs*)p);
   }
   static void deleteArray_MyJetCrs(void *p) {
      delete [] ((::MyJetCrs*)p);
   }
   static void destruct_MyJetCrs(void *p) {
      typedef ::MyJetCrs current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetCrs(TBuffer &buf, void *obj) {
      ((::MyJetCrs*)obj)->::MyJetCrs::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetCrs

//______________________________________________________________________________
void MyJetAsym::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetAsym.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjet;
      R__b >> hjetblue;
      R__b >> hjetyell;
      R__b >> hjetlsign;
      R__b >> hjetusign;
      R__b >> hjetsig;
      R__b >> hjetsigblue;
      R__b >> hjetsigyell;
      R__b >> hjetsiglsign;
      R__b >> hjetsigusign;
      R__b >> hjeterr;
      R__b >> hjeterrblue;
      R__b >> hjeterryell;
      R__b >> hjeterrlsign;
      R__b >> hjeterrusign;
      R__b.CheckByteCount(R__s, R__c, MyJetAsym::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetAsym::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hjet;
      R__b << (TObject*)hjetblue;
      R__b << (TObject*)hjetyell;
      R__b << (TObject*)hjetlsign;
      R__b << (TObject*)hjetusign;
      R__b << (TObject*)hjetsig;
      R__b << (TObject*)hjetsigblue;
      R__b << (TObject*)hjetsigyell;
      R__b << (TObject*)hjetsiglsign;
      R__b << (TObject*)hjetsigusign;
      R__b << (TObject*)hjeterr;
      R__b << (TObject*)hjeterrblue;
      R__b << (TObject*)hjeterryell;
      R__b << (TObject*)hjeterrlsign;
      R__b << (TObject*)hjeterrusign;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetAsym::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetAsym.
      TClass *R__cl = ::MyJetAsym::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjet", &hjet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetblue", &hjetblue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetyell", &hjetyell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetlsign", &hjetlsign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetusign", &hjetusign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsig", &hjetsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigblue", &hjetsigblue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigyell", &hjetsigyell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsiglsign", &hjetsiglsign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetsigusign", &hjetsigusign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterr", &hjeterr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterrblue", &hjeterrblue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterryell", &hjeterryell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterrlsign", &hjeterrlsign);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjeterrusign", &hjeterrusign);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetAsym(void *p) {
      return  p ? new(p) ::MyJetAsym : new ::MyJetAsym;
   }
   static void *newArray_MyJetAsym(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetAsym[nElements] : new ::MyJetAsym[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetAsym(void *p) {
      delete ((::MyJetAsym*)p);
   }
   static void deleteArray_MyJetAsym(void *p) {
      delete [] ((::MyJetAsym*)p);
   }
   static void destruct_MyJetAsym(void *p) {
      typedef ::MyJetAsym current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetAsym(TBuffer &buf, void *obj) {
      ((::MyJetAsym*)obj)->::MyJetAsym::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetAsym

//______________________________________________________________________________
void MyJetPtSpin::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetPtSpin.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hptprof[R__i];
      R__b.CheckByteCount(R__s, R__c, MyJetPtSpin::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetPtSpin::IsA(), kTRUE);
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hptprof[R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetPtSpin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetPtSpin.
      TClass *R__cl = ::MyJetPtSpin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptprof[4]", &hptprof);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetPtSpin(void *p) {
      return  p ? new(p) ::MyJetPtSpin : new ::MyJetPtSpin;
   }
   static void *newArray_MyJetPtSpin(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetPtSpin[nElements] : new ::MyJetPtSpin[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetPtSpin(void *p) {
      delete ((::MyJetPtSpin*)p);
   }
   static void deleteArray_MyJetPtSpin(void *p) {
      delete [] ((::MyJetPtSpin*)p);
   }
   static void destruct_MyJetPtSpin(void *p) {
      typedef ::MyJetPtSpin current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetPtSpin(TBuffer &buf, void *obj) {
      ((::MyJetPtSpin*)obj)->::MyJetPtSpin::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetPtSpin

//______________________________________________________________________________
void MyJetPtAsym::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetPtAsym.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hptasym;
      R__b >> hptblueasym;
      R__b >> hptyellasym;
      R__b >> hptlikesignasym;
      R__b >> hptunlikesignasym;
      R__b.CheckByteCount(R__s, R__c, MyJetPtAsym::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetPtAsym::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)hptasym;
      R__b << (TObject*)hptblueasym;
      R__b << (TObject*)hptyellasym;
      R__b << (TObject*)hptlikesignasym;
      R__b << (TObject*)hptunlikesignasym;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetPtAsym::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetPtAsym.
      TClass *R__cl = ::MyJetPtAsym::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptasym", &hptasym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptblueasym", &hptblueasym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptyellasym", &hptyellasym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptlikesignasym", &hptlikesignasym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hptunlikesignasym", &hptunlikesignasym);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetPtAsym(void *p) {
      return  p ? new(p) ::MyJetPtAsym : new ::MyJetPtAsym;
   }
   static void *newArray_MyJetPtAsym(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetPtAsym[nElements] : new ::MyJetPtAsym[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetPtAsym(void *p) {
      delete ((::MyJetPtAsym*)p);
   }
   static void deleteArray_MyJetPtAsym(void *p) {
      delete [] ((::MyJetPtAsym*)p);
   }
   static void destruct_MyJetPtAsym(void *p) {
      typedef ::MyJetPtAsym current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetPtAsym(TBuffer &buf, void *obj) {
      ((::MyJetPtAsym*)obj)->::MyJetPtAsym::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetPtAsym

//______________________________________________________________________________
void MyJetSum::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetSum.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> mAsym;
      R__b >> mPol;
      R__b >> mUnp;
      R__b >> mPtAsym;
      R__b >> mDptAsym;
      R__b >> mMultAsym;
      R__b >> mMultUeAsym;
      R__b >> htwojetpt;
      R__b >> hjetpt;
      R__b.CheckByteCount(R__s, R__c, MyJetSum::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetSum::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << mAsym;
      R__b << mPol;
      R__b << mUnp;
      R__b << mPtAsym;
      R__b << mDptAsym;
      R__b << mMultAsym;
      R__b << mMultUeAsym;
      R__b << (TObject*)htwojetpt;
      R__b << (TObject*)hjetpt;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetSum::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetSum.
      TClass *R__cl = ::MyJetSum::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mAsym", &mAsym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPol", &mPol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mUnp", &mUnp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mPtAsym", &mPtAsym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mDptAsym", &mDptAsym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMultAsym", &mMultAsym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMultUeAsym", &mMultUeAsym);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htwojetpt", &htwojetpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetpt", &hjetpt);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetSum(void *p) {
      return  p ? new(p) ::MyJetSum : new ::MyJetSum;
   }
   static void *newArray_MyJetSum(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetSum[nElements] : new ::MyJetSum[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetSum(void *p) {
      delete ((::MyJetSum*)p);
   }
   static void deleteArray_MyJetSum(void *p) {
      delete [] ((::MyJetSum*)p);
   }
   static void destruct_MyJetSum(void *p) {
      typedef ::MyJetSum current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetSum(TBuffer &buf, void *obj) {
      ((::MyJetSum*)obj)->::MyJetSum::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetSum

//______________________________________________________________________________
void MyJetVtx::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetVtx.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hjetptvtxprof;
      R__b.CheckByteCount(R__s, R__c, MyJetVtx::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetVtx::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << hjetptvtxprof;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetVtx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetVtx.
      TClass *R__cl = ::MyJetVtx::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptvtxprof", &hjetptvtxprof);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetVtx(void *p) {
      return  p ? new(p) ::MyJetVtx : new ::MyJetVtx;
   }
   static void *newArray_MyJetVtx(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetVtx[nElements] : new ::MyJetVtx[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetVtx(void *p) {
      delete ((::MyJetVtx*)p);
   }
   static void deleteArray_MyJetVtx(void *p) {
      delete [] ((::MyJetVtx*)p);
   }
   static void destruct_MyJetVtx(void *p) {
      typedef ::MyJetVtx current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetVtx(TBuffer &buf, void *obj) {
      ((::MyJetVtx*)obj)->::MyJetVtx::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetVtx

//______________________________________________________________________________
void MyJetRes::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetRes.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void MyJetRes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetRes.
      TClass *R__cl = ::MyJetRes::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MyJetRes(void *p) {
      delete ((::MyJetRes*)p);
   }
   static void deleteArray_MyJetRes(void *p) {
      delete [] ((::MyJetRes*)p);
   }
   static void destruct_MyJetRes(void *p) {
      typedef ::MyJetRes current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetRes(TBuffer &buf, void *obj) {
      ((::MyJetRes*)obj)->::MyJetRes::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetRes

//______________________________________________________________________________
void MyJetRes1D::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetRes1D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MyJetRes::Streamer(R__b);
      R__b >> hjetres;
      R__b >> hjetmatchratioprof;
      R__b >> hjetptshiftprof;
      R__b >> hjetptratioprof;
      R__b.CheckByteCount(R__s, R__c, MyJetRes1D::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetRes1D::IsA(), kTRUE);
      MyJetRes::Streamer(R__b);
      R__b << (TObject*)hjetres;
      R__b << hjetmatchratioprof;
      R__b << hjetptshiftprof;
      R__b << hjetptratioprof;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetRes1D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetRes1D.
      TClass *R__cl = ::MyJetRes1D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetres", &hjetres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmatchratioprof", &hjetmatchratioprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptshiftprof", &hjetptshiftprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptratioprof", &hjetptratioprof);
      MyJetRes::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetRes1D(void *p) {
      return  p ? new(p) ::MyJetRes1D : new ::MyJetRes1D;
   }
   static void *newArray_MyJetRes1D(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetRes1D[nElements] : new ::MyJetRes1D[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetRes1D(void *p) {
      delete ((::MyJetRes1D*)p);
   }
   static void deleteArray_MyJetRes1D(void *p) {
      delete [] ((::MyJetRes1D*)p);
   }
   static void destruct_MyJetRes1D(void *p) {
      typedef ::MyJetRes1D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetRes1D(TBuffer &buf, void *obj) {
      ((::MyJetRes1D*)obj)->::MyJetRes1D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetRes1D

//______________________________________________________________________________
void MyJetRes2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyJetRes2D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      MyJetRes::Streamer(R__b);
      R__b >> hjetmatchratioprof;
      R__b >> hjetres;
      R__b >> hjetptshiftprof;
      R__b >> hjetptratioprof;
      R__b.CheckByteCount(R__s, R__c, MyJetRes2D::IsA());
   } else {
      R__c = R__b.WriteVersion(MyJetRes2D::IsA(), kTRUE);
      MyJetRes::Streamer(R__b);
      R__b << hjetmatchratioprof;
      R__b << (TObject*)hjetres;
      R__b << hjetptshiftprof;
      R__b << hjetptratioprof;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MyJetRes2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyJetRes2D.
      TClass *R__cl = ::MyJetRes2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetmatchratioprof", &hjetmatchratioprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetres", &hjetres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptshiftprof", &hjetptshiftprof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hjetptratioprof", &hjetptratioprof);
      MyJetRes::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyJetRes2D(void *p) {
      return  p ? new(p) ::MyJetRes2D : new ::MyJetRes2D;
   }
   static void *newArray_MyJetRes2D(Long_t nElements, void *p) {
      return p ? new(p) ::MyJetRes2D[nElements] : new ::MyJetRes2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyJetRes2D(void *p) {
      delete ((::MyJetRes2D*)p);
   }
   static void deleteArray_MyJetRes2D(void *p) {
      delete [] ((::MyJetRes2D*)p);
   }
   static void destruct_MyJetRes2D(void *p) {
      typedef ::MyJetRes2D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MyJetRes2D(TBuffer &buf, void *obj) {
      ((::MyJetRes2D*)obj)->::MyJetRes2D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MyJetRes2D

namespace ROOTDict {
   void maplEintcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOstringgR_Dictionary();
   static void *new_maplEintcOstringgR(void *p = 0);
   static void *newArray_maplEintcOstringgR(Long_t size, void *p);
   static void delete_maplEintcOstringgR(void *p);
   static void deleteArray_maplEintcOstringgR(void *p);
   static void destruct_maplEintcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,string>*)
   {
      map<int,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,string>", -2, "prec_stl/map", 63,
                  typeid(map<int,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,string>) );
      instance.SetNew(&new_maplEintcOstringgR);
      instance.SetNewArray(&newArray_maplEintcOstringgR);
      instance.SetDelete(&delete_maplEintcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOstringgR);
      instance.SetDestructor(&destruct_maplEintcOstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,string> : new map<int,string>;
   }
   static void *newArray_maplEintcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,string>[nElements] : new map<int,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOstringgR(void *p) {
      delete ((map<int,string>*)p);
   }
   static void deleteArray_maplEintcOstringgR(void *p) {
      delete [] ((map<int,string>*)p);
   }
   static void destruct_maplEintcOstringgR(void *p) {
      typedef map<int,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,string>

namespace ROOTDict {
   void maplEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOfloatgR_Dictionary();
   static void *new_maplEstringcOfloatgR(void *p = 0);
   static void *newArray_maplEstringcOfloatgR(Long_t size, void *p);
   static void delete_maplEstringcOfloatgR(void *p);
   static void deleteArray_maplEstringcOfloatgR(void *p);
   static void destruct_maplEstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,float>*)
   {
      map<string,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,float>", -2, "map.dll", 0,
                  typeid(map<string,float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,float>) );
      instance.SetNew(&new_maplEstringcOfloatgR);
      instance.SetNewArray(&newArray_maplEstringcOfloatgR);
      instance.SetDelete(&delete_maplEstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOfloatgR);
      instance.SetDestructor(&destruct_maplEstringcOfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float> : new map<string,float>;
   }
   static void *newArray_maplEstringcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float>[nElements] : new map<string,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOfloatgR(void *p) {
      delete ((map<string,float>*)p);
   }
   static void deleteArray_maplEstringcOfloatgR(void *p) {
      delete [] ((map<string,float>*)p);
   }
   static void destruct_maplEstringcOfloatgR(void *p) {
      typedef map<string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,float>

namespace ROOTDict {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,int>

/********************************************************
* .sl73_gcc485/obj/StRoot/StMyJetPool/StMyJetSpin/StMyJetSpin_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStMyJetSpin_Cint();

extern "C" void G__set_cpp_environmentStMyJetSpin_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MyJetMC.h");
  G__add_compiledheader("MyJetYield.h");
  G__add_compiledheader("MyJetTest.h");
  G__add_compiledheader("MyEventQA.h");
  G__add_compiledheader("MyJetQA.h");
  G__add_compiledheader("MyTrigQA.h");
  G__add_compiledheader("MyJetSpin.h");
  G__add_compiledheader("MyJetCrs.h");
  G__add_compiledheader("MyJetAsym.h");
  G__add_compiledheader("MyJetPtAsym.h");
  G__add_compiledheader("MyJetSum.h");
  G__add_compiledheader("MyJetVtx.h");
  G__add_compiledheader("MyJetRes.h");
  G__cpp_reset_tagtableStMyJetSpin_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStMyJetSpin_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MyJetMC */
static int G__StMyJetSpin_Cint_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetMC[n];
     } else {
       p = new((void*) gvp) MyJetMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetMC;
     } else {
       p = new((void*) gvp) MyJetMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetMC((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetMC((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetTwoJetMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetPtNoVtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetPtNoVtxProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetXParton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetXgParton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetXParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetXgParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetPartonMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetParticleMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetParticleCrrMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetPartonNoMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetParticleNoMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetPartonNoMatchProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetParticleNoMatchProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetProcessFlavor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetDiffPartonProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetDiffParticleProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetDiffParticleCrrProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetDiffPartonW2Prof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetDiffParticleW2Prof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetJetDiffParticleCrrW2Prof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetALLDetector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetALLDetector2D((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetALLDetectorW2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetPtDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetPtDetectorW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetDPtJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetDPtJet2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetMC*) G__getstructoffset())->GetDPtJetW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetMC*) G__getstructoffset())->FillJetPt((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillXParton((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillXParton((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillXgParton((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillXgParton((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillXParticle((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillXParticle((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillXgParticle((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillXgParticle((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetPtNoVtx((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetMC*) G__getstructoffset())->FillJetPtNoVtx((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillTwoJetPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillTwoJetPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetPartonPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetPartonPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetParticlePt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetParticlePt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetParticlePtCrr((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetParticlePtCrr((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetDiffPartonProf((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetDiffPartonProf((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetDiffParticleProf((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetDiffParticleProf((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetDiffParticleCrrProf((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetDiffParticleCrrProf((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetPartonNoMatch((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetMC*) G__getstructoffset())->FillJetPartonNoMatch((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetParticleNoMatch((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetMC*) G__getstructoffset())->FillJetParticleNoMatch((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetMC*) G__getstructoffset())->FillJetDPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetDPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetMC*) G__getstructoffset())->FillJetDetectorPt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetMC*) G__getstructoffset())->FillJetDetectorPt((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetMC*) G__getstructoffset())->Add((MyJetMC*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetMC*) G__getstructoffset())->Add((MyJetMC*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_228_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_228_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetMC(*(MyJetMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetMC G__TMyJetMC;
static int G__StMyJetSpin_Cint_228_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetMC*) (soff+(sizeof(MyJetMC)*i)))->~G__TMyJetMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetMC*) (soff))->~G__TMyJetMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_228_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetMC* dest = (MyJetMC*) G__getstructoffset();
   *dest = *(MyJetMC*) libp->para[0].ref;
   const MyJetMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetPar */
static int G__StMyJetSpin_Cint_229_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetPar[n];
     } else {
       p = new((void*) gvp) MyJetPar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetPar;
     } else {
       p = new((void*) gvp) MyJetPar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetPar((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetPar((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetALLPar((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetALLPar2D((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetALLParW2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetPtPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetPtParW2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPar*) G__getstructoffset())->GetXg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetPar*) G__getstructoffset())->Add((MyJetPar*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetPar*) G__getstructoffset())->Add((MyJetPar*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_229_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_229_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetPar(*(MyJetPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetPar G__TMyJetPar;
static int G__StMyJetSpin_Cint_229_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetPar*) (soff+(sizeof(MyJetPar)*i)))->~G__TMyJetPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetPar*) (soff))->~G__TMyJetPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_229_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPar* dest = (MyJetPar*) G__getstructoffset();
   *dest = *(MyJetPar*) libp->para[0].ref;
   const MyJetPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetYield */
static int G__StMyJetSpin_Cint_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetYield* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetYield[n];
     } else {
       p = new((void*) gvp) MyJetYield[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetYield;
     } else {
       p = new((void*) gvp) MyJetYield;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetYield* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetYield((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetYield((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetYield*) G__getstructoffset())->Add((MyJetYield*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetYield*) G__getstructoffset())->GetJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetYield*) G__getstructoffset())->GetJetRtProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetYield*) G__getstructoffset())->GetJetTwoJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetYield*) G__getstructoffset())->FillJetTwoJet((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetYield*) G__getstructoffset())->FillJetPtEtaRt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetYield::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetYield::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetYield::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetYield::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetYield*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetYield::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetYield::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetYield::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetYield::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetYield* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetYield(*(MyJetYield*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetYield G__TMyJetYield;
static int G__StMyJetSpin_Cint_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetYield*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetYield*) (soff+(sizeof(MyJetYield)*i)))->~G__TMyJetYield();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetYield*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetYield*) (soff))->~G__TMyJetYield();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetYield* dest = (MyJetYield*) G__getstructoffset();
   *dest = *(MyJetYield*) libp->para[0].ref;
   const MyJetYield& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetYieldPar */
static int G__StMyJetSpin_Cint_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetYieldPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetYieldPar[n];
     } else {
       p = new((void*) gvp) MyJetYieldPar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetYieldPar;
     } else {
       p = new((void*) gvp) MyJetYieldPar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetYieldPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetYieldPar((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetYieldPar((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetYieldPar*) G__getstructoffset())->GetPtEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetYieldPar*) G__getstructoffset())->GetPtRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetYieldPar*) G__getstructoffset())->FillResponse((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetYieldPar*) G__getstructoffset())->Add((MyJetYieldPar*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetYieldPar*) G__getstructoffset())->Add((MyJetYieldPar*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetYieldPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetYieldPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetYieldPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetYieldPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetYieldPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetYieldPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetYieldPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetYieldPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_242_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetYieldPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_242_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetYieldPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetYieldPar(*(MyJetYieldPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetYieldPar G__TMyJetYieldPar;
static int G__StMyJetSpin_Cint_242_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetYieldPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetYieldPar*) (soff+(sizeof(MyJetYieldPar)*i)))->~G__TMyJetYieldPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetYieldPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetYieldPar*) (soff))->~G__TMyJetYieldPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_242_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetYieldPar* dest = (MyJetYieldPar*) G__getstructoffset();
   *dest = *(MyJetYieldPar*) libp->para[0].ref;
   const MyJetYieldPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetTest */
static int G__StMyJetSpin_Cint_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetTest* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetTest[n];
     } else {
       p = new((void*) gvp) MyJetTest[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetTest;
     } else {
       p = new((void*) gvp) MyJetTest;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetTest* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetTest((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetTest((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetTest*) G__getstructoffset())->Add((MyJetTest*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetTest*) G__getstructoffset())->GetJetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetTest*) G__getstructoffset())->GetJetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetTest*) G__getstructoffset())->GetJetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetTest*) G__getstructoffset())->GetTwoJet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetTest::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetTest::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetTest::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetTest::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetTest*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetTest::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetTest::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetTest::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_243_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetTest::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_243_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetTest* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetTest(*(MyJetTest*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetTest G__TMyJetTest;
static int G__StMyJetSpin_Cint_243_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetTest*) (soff+(sizeof(MyJetTest)*i)))->~G__TMyJetTest();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetTest*) (soff))->~G__TMyJetTest();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_243_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetTest* dest = (MyJetTest*) G__getstructoffset();
   *dest = *(MyJetTest*) libp->para[0].ref;
   const MyJetTest& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetTestPar */
static int G__StMyJetSpin_Cint_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetTestPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetTestPar[n];
     } else {
       p = new((void*) gvp) MyJetTestPar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetTestPar;
     } else {
       p = new((void*) gvp) MyJetTestPar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetTestPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetTestPar((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetTestPar((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetTestPar*) G__getstructoffset())->GetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetTestPar*) G__getstructoffset())->Add((MyJetTestPar*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetTestPar*) G__getstructoffset())->Add((MyJetTestPar*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetTestPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetTestPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetTestPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetTestPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetTestPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetTestPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetTestPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetTestPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetTestPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_244_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetTestPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetTestPar(*(MyJetTestPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetTestPar G__TMyJetTestPar;
static int G__StMyJetSpin_Cint_244_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetTestPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetTestPar*) (soff+(sizeof(MyJetTestPar)*i)))->~G__TMyJetTestPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetTestPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetTestPar*) (soff))->~G__TMyJetTestPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_244_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetTestPar* dest = (MyJetTestPar*) G__getstructoffset();
   *dest = *(MyJetTestPar*) libp->para[0].ref;
   const MyJetTestPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyEventQA */
static int G__StMyJetSpin_Cint_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyEventQA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyEventQA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyEventQA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyEventQA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyEventQA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyEventQA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyEventQA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyEventQA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyEventQA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyEventQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyEventQA[n];
     } else {
       p = new((void*) gvp) MyEventQA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyEventQA;
     } else {
       p = new((void*) gvp) MyEventQA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyEventQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyEventQA((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyEventQA((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventQA*) G__getstructoffset())->GetEventWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventQA*) G__getstructoffset())->GetMatchedVx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventQA*) G__getstructoffset())->GetVertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyEventQA*) G__getstructoffset())->GetNPosVtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const MyEventQA*) G__getstructoffset())->FillVertexZ((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const MyEventQA*) G__getstructoffset())->FillVertexZ((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const MyEventQA*) G__getstructoffset())->FillEventWeight((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const MyEventQA*) G__getstructoffset())->FillEventWeight((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const MyEventQA*) G__getstructoffset())->FillMatchedVx((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const MyEventQA*) G__getstructoffset())->FillMatchedVx((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyEventQA*) G__getstructoffset())->Add((MyEventQA*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyEventQA*) G__getstructoffset())->Add((MyEventQA*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyEventQA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyEventQA(*(MyEventQA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyEventQA G__TMyEventQA;
static int G__StMyJetSpin_Cint_245_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyEventQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyEventQA*) (soff+(sizeof(MyEventQA)*i)))->~G__TMyEventQA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyEventQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyEventQA*) (soff))->~G__TMyEventQA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_245_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyEventQA* dest = (MyEventQA*) G__getstructoffset();
   *dest = *(MyEventQA*) libp->para[0].ref;
   const MyEventQA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetQA */
static int G__StMyJetSpin_Cint_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetQA[n];
     } else {
       p = new((void*) gvp) MyJetQA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetQA;
     } else {
       p = new((void*) gvp) MyJetQA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetQA((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetQA((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetPtNoVtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetNPosVtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetVertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((MyJetQA*) G__getstructoffset())->GetJetProf((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((MyJetQA*) G__getstructoffset())->GetJetProf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetRt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetParJt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetParZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetTrkMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetTrkMultProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetTrkPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetTwrPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetTwrMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetTwrMultProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetRtProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetPtProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetUeDpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetUeTwrMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetUeTrkMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeDpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeTrkMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeTwrMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeTrkPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeTwrPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeDpt3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetUeMult3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetAreaVsPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetUeRt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetUeParJt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetUeParZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetQA*) G__getstructoffset())->GetJetRtVsEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetQA*) G__getstructoffset())->FillJetPtEtaPhi((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetQA*) G__getstructoffset())->FillJetPtEtaPhi((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetQA*) G__getstructoffset())->FillJetPtRt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetQA*) G__getstructoffset())->FillJetPtRt((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetQA*) G__getstructoffset())->FillJetMult((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetQA*) G__getstructoffset())->FillJetMult((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetQA*) G__getstructoffset())->FillJetUe((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetQA*) G__getstructoffset())->FillJetUe((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetQA*) G__getstructoffset())->FillJetPtNoVtx((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetQA*) G__getstructoffset())->FillJetPtNoVtx((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetQA*) G__getstructoffset())->FillJetNPosVtx((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetQA*) G__getstructoffset())->FillJetNPosVtx((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetQA*) G__getstructoffset())->FillJetVertexZ((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetQA*) G__getstructoffset())->FillJetVertexZ((float) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetQA*) G__getstructoffset())->Add((MyJetQA*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetQA*) G__getstructoffset())->Add((MyJetQA*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetQA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetQA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetQA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetQA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetQA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetQA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetQA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetQA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_246_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetQA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_246_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetQA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetQA(*(MyJetQA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetQA G__TMyJetQA;
static int G__StMyJetSpin_Cint_246_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetQA*) (soff+(sizeof(MyJetQA)*i)))->~G__TMyJetQA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetQA*) (soff))->~G__TMyJetQA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_246_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetQA* dest = (MyJetQA*) G__getstructoffset();
   *dest = *(MyJetQA*) libp->para[0].ref;
   const MyJetQA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyTrigQA */
static int G__StMyJetSpin_Cint_490_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyTrigQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyTrigQA[n];
     } else {
       p = new((void*) gvp) MyTrigQA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyTrigQA;
     } else {
       p = new((void*) gvp) MyTrigQA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyTrigQA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyTrigQA((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyTrigQA((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,int>* pobj;
         const map<string,int> xobj = ((const MyTrigQA*) G__getstructoffset())->GetTrigEvent();
         pobj = new map<string,int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,float>* pobj;
         const map<string,float> xobj = ((const MyTrigQA*) G__getstructoffset())->GetTrigPrescale();
         pobj = new map<string,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MyTrigQA*) G__getstructoffset())->GetTrigNevnt(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MyTrigQA*) G__getstructoffset())->GetTrigNprescale(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrigQA*) G__getstructoffset())->SetTrigNevnt(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrigQA*) G__getstructoffset())->Count(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrigQA*) G__getstructoffset())->SetTrigPrescale(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MyTrigQA*) G__getstructoffset())->CheckId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((MyTrigQA*) G__getstructoffset())->GetTrigName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrigQA*) G__getstructoffset())->Add((MyTrigQA*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyTrigQA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyTrigQA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyTrigQA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyTrigQA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyTrigQA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyTrigQA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyTrigQA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyTrigQA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_490_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyTrigQA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_490_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyTrigQA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyTrigQA(*(MyTrigQA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyTrigQA G__TMyTrigQA;
static int G__StMyJetSpin_Cint_490_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyTrigQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyTrigQA*) (soff+(sizeof(MyTrigQA)*i)))->~G__TMyTrigQA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyTrigQA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyTrigQA*) (soff))->~G__TMyTrigQA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_490_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyTrigQA* dest = (MyTrigQA*) G__getstructoffset();
   *dest = *(MyTrigQA*) libp->para[0].ref;
   const MyTrigQA& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetSpin */
static int G__StMyJetSpin_Cint_491_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetSpin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetSpin[n];
     } else {
       p = new((void*) gvp) MyJetSpin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetSpin;
     } else {
       p = new((void*) gvp) MyJetSpin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetSpin* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetSpin((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetSpin((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetSpin::SpinIndex((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyJetSpin*) G__getstructoffset())->AddJetSpin((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetSpin*) G__getstructoffset())->AddJetSpin((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetSigSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetSigSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetTwoSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetTwoSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetErrSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetErrSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetMeanPtSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetMeanPtSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetDPtSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetDPtSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetMultSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetMultSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetMultUeSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSpin*) G__getstructoffset())->GetJetMultUeSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetSpin*) G__getstructoffset())->FillJetPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetSpin*) G__getstructoffset())->FillJetPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetSpin*) G__getstructoffset())->FillJetTwoPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetSpin*) G__getstructoffset())->FillJetTwoPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSpin*) G__getstructoffset())->FillJetErrorPt((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetSpin*) G__getstructoffset())->FillJetMeanPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetSpin*) G__getstructoffset())->FillJetMeanPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetSpin*) G__getstructoffset())->FillJetDPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetSpin*) G__getstructoffset())->FillJetDPt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetSpin*) G__getstructoffset())->FillJetMult((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetSpin*) G__getstructoffset())->FillJetMult((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MyJetSpin*) G__getstructoffset())->FillJetMultUe((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetSpin*) G__getstructoffset())->FillJetMultUe((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSpin*) G__getstructoffset())->fill_pt((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSpin*) G__getstructoffset())->fill_twojet_pt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSpin*) G__getstructoffset())->fill_error();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSpin*) G__getstructoffset())->fill_dpt((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetSpin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetSpin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetSpin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetSpin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSpin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetSpin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetSpin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetSpin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_491_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetSpin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_491_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetSpin* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetSpin(*(MyJetSpin*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetSpin G__TMyJetSpin;
static int G__StMyJetSpin_Cint_491_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetSpin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetSpin*) (soff+(sizeof(MyJetSpin)*i)))->~G__TMyJetSpin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetSpin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetSpin*) (soff))->~G__TMyJetSpin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_491_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetSpin* dest = (MyJetSpin*) G__getstructoffset();
   *dest = *(MyJetSpin*) libp->para[0].ref;
   const MyJetSpin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetCrs */
static int G__StMyJetSpin_Cint_492_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetCrs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetCrs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetCrs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetCrs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetCrs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetCrs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetCrs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetCrs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetCrs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetCrs* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetCrs[n];
     } else {
       p = new((void*) gvp) MyJetCrs[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetCrs;
     } else {
       p = new((void*) gvp) MyJetCrs;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetCrs* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetCrs((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetCrs((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetXsection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetBlueXsection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetYellXsection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetLikeSignXsection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetUnlikeSignXsection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetXsectionSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetBlueXsectionSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetYellXsectionSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetLikeSignXsectionSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetUnlikeSignXsectionSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetXsectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetBlueXsectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetYellXsectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetLikeSignXsectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetCrs*) G__getstructoffset())->GetJetUnlikeSignXsectionError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsection((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsection((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsection((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsection((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection(
(MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsection((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetXsectionError((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetBlueXsectionError((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetYellXsectionError((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetLikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError(
(MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetCrs*) G__getstructoffset())->FillJetUnlikeSignXsectionError((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillPolXection((MyJetSpin*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillPolXection((MyJetSpin*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_492_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetCrs*) G__getstructoffset())->FillUnpXection((MyJetSpin*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetCrs*) G__getstructoffset())->FillUnpXection((MyJetSpin*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_492_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetCrs* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetCrs(*(MyJetCrs*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetCrs G__TMyJetCrs;
static int G__StMyJetSpin_Cint_492_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetCrs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetCrs*) (soff+(sizeof(MyJetCrs)*i)))->~G__TMyJetCrs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetCrs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetCrs*) (soff))->~G__TMyJetCrs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_492_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetCrs* dest = (MyJetCrs*) G__getstructoffset();
   *dest = *(MyJetCrs*) libp->para[0].ref;
   const MyJetCrs& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetAsym */
static int G__StMyJetSpin_Cint_493_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetAsym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetAsym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetAsym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetAsym::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetAsym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetAsym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetAsym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetAsym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetAsym* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetAsym[n];
     } else {
       p = new((void*) gvp) MyJetAsym[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetAsym;
     } else {
       p = new((void*) gvp) MyJetAsym;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetAsym* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetAsym((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetAsym((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetBlueAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetYellAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetLikeSignAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetUnlikeSignAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetAsymSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetBlueAsymSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetYellAsymSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetLikeSignAsymSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetUnlikeSignAsymSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetAsymError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetBlueAsymError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetYellAysmError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetLikeSignAsymError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetAsym*) G__getstructoffset())->GetJetUnlikeSignAsymError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetAsym((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetBlueAsym((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetYellAsym((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetLikeSignAsym((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetUnlikeSignAsym((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetAsymError((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetBlueAsymError((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetYellAsymError((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetLikeSignAsymError((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillJetUnlikeSignAsymError((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_493_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetAsym*) G__getstructoffset())->FillAsymmetry((MyJetCrs*) G__int(libp->para[0]), (MyJetCrs*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_493_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetAsym* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetAsym(*(MyJetAsym*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetAsym G__TMyJetAsym;
static int G__StMyJetSpin_Cint_493_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetAsym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetAsym*) (soff+(sizeof(MyJetAsym)*i)))->~G__TMyJetAsym();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetAsym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetAsym*) (soff))->~G__TMyJetAsym();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_493_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetAsym* dest = (MyJetAsym*) G__getstructoffset();
   *dest = *(MyJetAsym*) libp->para[0].ref;
   const MyJetAsym& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetPtSpin */
static int G__StMyJetSpin_Cint_494_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPtSpin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetPtSpin[n];
     } else {
       p = new((void*) gvp) MyJetPtSpin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetPtSpin;
     } else {
       p = new((void*) gvp) MyJetPtSpin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPtSpin* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetPtSpin((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetPtSpin((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtSpin*) G__getstructoffset())->AddProfiles((TProfile**) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtSpin*) G__getstructoffset())->AddMeanPt((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtSpin*) G__getstructoffset())->AddDPt((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtSpin*) G__getstructoffset())->AddMult((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtSpin*) G__getstructoffset())->AddMultUe((MyJetSpin*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtSpin*) G__getstructoffset())->GetJetPtProfile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtSpin*) G__getstructoffset())->GetJetPtProfileSpin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetPtSpin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPtSpin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetPtSpin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetPtSpin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtSpin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPtSpin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetPtSpin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPtSpin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_494_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetPtSpin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_494_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetPtSpin* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetPtSpin(*(MyJetPtSpin*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetPtSpin G__TMyJetPtSpin;
static int G__StMyJetSpin_Cint_494_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetPtSpin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetPtSpin*) (soff+(sizeof(MyJetPtSpin)*i)))->~G__TMyJetPtSpin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetPtSpin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetPtSpin*) (soff))->~G__TMyJetPtSpin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_494_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPtSpin* dest = (MyJetPtSpin*) G__getstructoffset();
   *dest = *(MyJetPtSpin*) libp->para[0].ref;
   const MyJetPtSpin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetPtAsym */
static int G__StMyJetSpin_Cint_495_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPtAsym* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetPtAsym[n];
     } else {
       p = new((void*) gvp) MyJetPtAsym[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetPtAsym;
     } else {
       p = new((void*) gvp) MyJetPtAsym;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPtAsym* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetPtAsym((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetPtAsym((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetPtAsym*) G__getstructoffset())->FillJetPtAsym((TProfile* *const) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetPtAsym*) G__getstructoffset())->FillJetPtAsym((TProfile* *const) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetPtAsym*) G__getstructoffset())->FillJetPtAsym((TProfile* *const) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetPtAsym*) G__getstructoffset())->FillJetPtAsym((MyJetPtSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetPtAsym*) G__getstructoffset())->FillJetPtAsym((MyJetPtSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetPtAsym*) G__getstructoffset())->FillJetPtAsym((MyJetPtSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtAsym*) G__getstructoffset())->AddAsymmetry((MyJetPtAsym*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtAsym*) G__getstructoffset())->GetPtAsymmetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtAsym*) G__getstructoffset())->GetPtBlueAsymmetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtAsym*) G__getstructoffset())->GetPtYellowAsymmetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtAsym*) G__getstructoffset())->GetPtLikeSignAsymmetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetPtAsym*) G__getstructoffset())->GetPtUnlikeSignAsymmetry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetPtAsym::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPtAsym::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetPtAsym::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetPtAsym::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetPtAsym*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPtAsym::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetPtAsym::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetPtAsym::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_495_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetPtAsym::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_495_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetPtAsym* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetPtAsym(*(MyJetPtAsym*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetPtAsym G__TMyJetPtAsym;
static int G__StMyJetSpin_Cint_495_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetPtAsym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetPtAsym*) (soff+(sizeof(MyJetPtAsym)*i)))->~G__TMyJetPtAsym();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetPtAsym*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetPtAsym*) (soff))->~G__TMyJetPtAsym();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_495_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetPtAsym* dest = (MyJetPtAsym*) G__getstructoffset();
   *dest = *(MyJetPtAsym*) libp->para[0].ref;
   const MyJetPtAsym& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetSum */
static int G__StMyJetSpin_Cint_496_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetSum* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetSum[n];
     } else {
       p = new((void*) gvp) MyJetSum[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetSum;
     } else {
       p = new((void*) gvp) MyJetSum;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetSum* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetSum((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetSum((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetPol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetUnp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetPtAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetDptAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetMultAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetSum*) G__getstructoffset())->GetMultUeAsym());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MyJetSum*) G__getstructoffset())->FillJetSpin((MyJetSpin*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MyJetSum*) G__getstructoffset())->FillJetSpin((MyJetSpin*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetSum*) G__getstructoffset())->FillJetPtSpin((MyJetPtSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetSum*) G__getstructoffset())->FillJetPtSpin((MyJetPtSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetSum*) G__getstructoffset())->FillJetPtSpin((MyJetPtSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MyJetSum*) G__getstructoffset())->FillJetDPtSpin((MyJetPtSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MyJetSum*) G__getstructoffset())->FillJetDPtSpin((MyJetPtSpin*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyJetSum*) G__getstructoffset())->FillJetDPtSpin((MyJetPtSpin*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSum*) G__getstructoffset())->FillAsym();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetSum::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetSum::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetSum::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetSum::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetSum*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetSum::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetSum::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetSum::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_496_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetSum::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_496_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetSum* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetSum(*(MyJetSum*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetSum G__TMyJetSum;
static int G__StMyJetSpin_Cint_496_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetSum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetSum*) (soff+(sizeof(MyJetSum)*i)))->~G__TMyJetSum();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetSum*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetSum*) (soff))->~G__TMyJetSum();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_496_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetSum* dest = (MyJetSum*) G__getstructoffset();
   *dest = *(MyJetSum*) libp->para[0].ref;
   const MyJetSum& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetVtx */
static int G__StMyJetSpin_Cint_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetVtx[n];
     } else {
       p = new((void*) gvp) MyJetVtx[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetVtx;
     } else {
       p = new((void*) gvp) MyJetVtx;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetVtx* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetVtx((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetVtx((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetVtx*) G__getstructoffset())->GetJetVertexProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetVtx*) G__getstructoffset())->Add((MyJetVtx*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetVtx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetVtx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetVtx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetVtx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetVtx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetVtx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetVtx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetVtx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_497_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetVtx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_497_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetVtx* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetVtx(*(MyJetVtx*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetVtx G__TMyJetVtx;
static int G__StMyJetSpin_Cint_497_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetVtx*) (soff+(sizeof(MyJetVtx)*i)))->~G__TMyJetVtx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetVtx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetVtx*) (soff))->~G__TMyJetVtx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_497_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetVtx* dest = (MyJetVtx*) G__getstructoffset();
   *dest = *(MyJetVtx*) libp->para[0].ref;
   const MyJetVtx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetRes */
static int G__StMyJetSpin_Cint_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetRes*) G__getstructoffset())->GetJetRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetRes*) G__getstructoffset())->GetJetMatchRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetRes*) G__getstructoffset())->GetJetPtScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyJetRes*) G__getstructoffset())->GetJetPtShift());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetRes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetRes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetRes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetRes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_498_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetRes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetRes G__TMyJetRes;
static int G__StMyJetSpin_Cint_498_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetRes*) (soff+(sizeof(MyJetRes)*i)))->~G__TMyJetRes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetRes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetRes*) (soff))->~G__TMyJetRes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_498_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes* dest = (MyJetRes*) G__getstructoffset();
   *dest = *(MyJetRes*) libp->para[0].ref;
   const MyJetRes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetRes2D */
static int G__StMyJetSpin_Cint_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetRes2D[n];
     } else {
       p = new((void*) gvp) MyJetRes2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetRes2D;
     } else {
       p = new((void*) gvp) MyJetRes2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetRes2D((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetRes2D((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes2D*) G__getstructoffset())->Add((MyJetRes2D*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes2D*) G__getstructoffset())->FillJetMatchRatio((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes2D*) G__getstructoffset())->FillResponse((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetRes2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetRes2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetRes2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetRes2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_499_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetRes2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_499_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetRes2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetRes2D(*(MyJetRes2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetRes2D G__TMyJetRes2D;
static int G__StMyJetSpin_Cint_499_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetRes2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetRes2D*) (soff+(sizeof(MyJetRes2D)*i)))->~G__TMyJetRes2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetRes2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetRes2D*) (soff))->~G__TMyJetRes2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_499_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes2D* dest = (MyJetRes2D*) G__getstructoffset();
   *dest = *(MyJetRes2D*) libp->para[0].ref;
   const MyJetRes2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyJetRes1D */
static int G__StMyJetSpin_Cint_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetRes1D[n];
     } else {
       p = new((void*) gvp) MyJetRes1D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyJetRes1D;
     } else {
       p = new((void*) gvp) MyJetRes1D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes1D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyJetRes1D((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyJetRes1D((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes1D*) G__getstructoffset())->Add((MyJetRes1D*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes1D*) G__getstructoffset())->FillResponse((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyJetRes1D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes1D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyJetRes1D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyJetRes1D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyJetRes1D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes1D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetRes1D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyJetRes1D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyJetSpin_Cint_500_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyJetRes1D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyJetSpin_Cint_500_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyJetRes1D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyJetRes1D(*(MyJetRes1D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyJetRes1D G__TMyJetRes1D;
static int G__StMyJetSpin_Cint_500_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyJetRes1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyJetRes1D*) (soff+(sizeof(MyJetRes1D)*i)))->~G__TMyJetRes1D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyJetRes1D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyJetRes1D*) (soff))->~G__TMyJetRes1D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyJetSpin_Cint_500_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyJetRes1D* dest = (MyJetRes1D*) G__getstructoffset();
   *dest = *(MyJetRes1D*) libp->para[0].ref;
   const MyJetRes1D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MyJetMC */

/* MyJetPar */

/* MyJetYield */

/* MyJetYieldPar */

/* MyJetTest */

/* MyJetTestPar */

/* MyEventQA */

/* MyJetQA */

/* MyTrigQA */

/* MyJetSpin */

/* MyJetCrs */

/* MyJetAsym */

/* MyJetPtSpin */

/* MyJetPtAsym */

/* MyJetSum */

/* MyJetVtx */

/* MyJetRes */

/* MyJetRes2D */

/* MyJetRes1D */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStMyJetSpin_Cint {
 public:
  G__Sizep2memfuncStMyJetSpin_Cint(): p(&G__Sizep2memfuncStMyJetSpin_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStMyJetSpin_Cint::*p)();
};

size_t G__get_sizep2memfuncStMyJetSpin_Cint()
{
  G__Sizep2memfuncStMyJetSpin_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStMyJetSpin_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC))) {
     MyJetMC *G__Lderived;
     G__Lderived=(MyJetMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar))) {
     MyJetPar *G__Lderived;
     G__Lderived=(MyJetPar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield))) {
     MyJetYield *G__Lderived;
     G__Lderived=(MyJetYield*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar))) {
     MyJetYieldPar *G__Lderived;
     G__Lderived=(MyJetYieldPar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest))) {
     MyJetTest *G__Lderived;
     G__Lderived=(MyJetTest*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar))) {
     MyJetTestPar *G__Lderived;
     G__Lderived=(MyJetTestPar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA))) {
     MyEventQA *G__Lderived;
     G__Lderived=(MyEventQA*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA))) {
     MyJetQA *G__Lderived;
     G__Lderived=(MyJetQA*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA))) {
     MyTrigQA *G__Lderived;
     G__Lderived=(MyTrigQA*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin))) {
     MyJetSpin *G__Lderived;
     G__Lderived=(MyJetSpin*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs))) {
     MyJetCrs *G__Lderived;
     G__Lderived=(MyJetCrs*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym))) {
     MyJetAsym *G__Lderived;
     G__Lderived=(MyJetAsym*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin))) {
     MyJetPtSpin *G__Lderived;
     G__Lderived=(MyJetPtSpin*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym))) {
     MyJetPtAsym *G__Lderived;
     G__Lderived=(MyJetPtAsym*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum))) {
     MyJetSum *G__Lderived;
     G__Lderived=(MyJetSum*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx))) {
     MyJetVtx *G__Lderived;
     G__Lderived=(MyJetVtx*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes))) {
     MyJetRes *G__Lderived;
     G__Lderived=(MyJetRes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D))) {
     MyJetRes2D *G__Lderived;
     G__Lderived=(MyJetRes2D*)0x1000;
     {
       MyJetRes *G__Lpbase=(MyJetRes*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D))) {
     MyJetRes1D *G__Lderived;
     G__Lderived=(MyJetRes1D*)0x1000;
     {
       MyJetRes *G__Lpbase=(MyJetRes*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D),G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStMyJetSpin_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MyJetMC */
static void G__setup_memvarMyJetMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC));
   { MyJetMC *p; p=(MyJetMC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("NMod=%lldLL",(long long)MyJetMC::NMod).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetptnovtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetptnovtxprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hxparton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hxgparton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hxparticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hxgparticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hproc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"htwojetpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetptparton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetptparticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetptparticlecrr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hdptparton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hdptparticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hdptparticlecrr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hdptpartonw2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hdptparticlew2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hdptparticlecrrw2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetpartonN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetparticleN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetpartonNprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetparticleNprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetdpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetdpt2d=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetdptw2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptdetector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptdetectorw2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"haLLdetector[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"haLLdetector2d[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"haLLdetectorw2[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetPar */
static void G__setup_memvarMyJetPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar));
   { MyJetPar *p; p=(MyJetPar*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("NMod=%lldLL",(long long)MyJetPar::NMod).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hxg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptpar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptparw2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"haLLpar[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"haLLpar2d[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"haLLparw2[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetYield */
static void G__setup_memvarMyJetYield(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield));
   { MyJetYield *p; p=(MyJetYield*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile2D),-1,-1,4,"hjetptrtprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjettwojet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetdetector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetYieldPar */
static void G__setup_memvarMyJetYieldPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar));
   { MyJetYieldPar *p; p=(MyJetYieldPar*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("NMod=%lldLL",(long long)MyJetYieldPar::NMod).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hpteta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetptres=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetTest */
static void G__setup_memvarMyJetTest(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest));
   { MyJetTest *p; p=(MyJetTest*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjeteta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetphi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjettwo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetTestPar */
static void G__setup_memvarMyJetTestPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar));
   { MyJetTestPar *p; p=(MyJetTestPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyEventQA */
static void G__setup_memvarMyEventQA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA));
   { MyEventQA *p; p=(MyEventQA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hweight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hmatchedVx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hvertexz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hnposvtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetQA */
static void G__setup_memvarMyJetQA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA));
   { MyJetQA *p; p=(MyJetQA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetptnovtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetnposvtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetvertexz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjeteta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetphi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetrt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetmult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetparjt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetparz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjettrkmult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjettrkpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjettwrmult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjettwrpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetrtprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetptprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjettrkmultprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjettwrmultprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetptarea=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetdptue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjettrkmultue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjettwrmultue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hdptue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hmultue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetuert=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetueparjt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjetueparz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"htrkmultue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"htwrmultue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"htrkptue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"htwrptue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH3F),-1,-1,4,"hdpt3due=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH3F),-1,-1,4,"hmult3due=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetprof[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetetart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyTrigQA */
static void G__setup_memvarMyTrigQA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA));
   { MyTrigQA *p; p=(MyTrigQA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<string,int>"),-1,4,"trigNevnt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<string,float>"),-1,4,"trigPrescale=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),G__defined_typename("map<int,string>"),-1,4,"trigIdmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetSpin */
static void G__setup_memvarMyJetSpin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin));
   { MyJetSpin *p; p=(MyJetSpin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetpt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjettwopt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigpt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetmeanpt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetdpt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetmult[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hjetmultue[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetCrs */
static void G__setup_memvarMyJetCrs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs));
   { MyJetCrs *p; p=(MyJetCrs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetblue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetyell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetlsign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetusign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigblue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigyell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsiglsign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigusign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterrblue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterryell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterrlsign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterrusign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetAsym */
static void G__setup_memvarMyJetAsym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym));
   { MyJetAsym *p; p=(MyJetAsym*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetblue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetyell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetlsign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetusign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigblue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigyell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsiglsign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetsigusign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterrblue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterryell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterrlsign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"hjeterrusign=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetPtSpin */
static void G__setup_memvarMyJetPtSpin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin));
   { MyJetPtSpin *p; p=(MyJetPtSpin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptprof[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetPtAsym */
static void G__setup_memvarMyJetPtAsym(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym));
   { MyJetPtAsym *p; p=(MyJetPtAsym*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptblueasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptyellasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptlikesignasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile),-1,-1,4,"hptunlikesignasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetSum */
static void G__setup_memvarMyJetSum(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum));
   { MyJetSum *p; p=(MyJetSum*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym),-1,-1,4,"mAsym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs),-1,-1,4,"mPol=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs),-1,-1,4,"mUnp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym),-1,-1,4,"mPtAsym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym),-1,-1,4,"mDptAsym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym),-1,-1,4,"mMultAsym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym),-1,-1,4,"mMultUeAsym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F),-1,-1,4,"htwojetpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F),-1,-1,4,"hjetpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetVtx */
static void G__setup_memvarMyJetVtx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx));
   { MyJetVtx *p; p=(MyJetVtx*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile2D),-1,-1,4,"hjetptvtxprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetRes */
static void G__setup_memvarMyJetRes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes));
   { MyJetRes *p; p=(MyJetRes*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetRes2D */
static void G__setup_memvarMyJetRes2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D));
   { MyJetRes2D *p; p=(MyJetRes2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile),-1,-1,4,"hjetmatchratioprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2D),-1,-1,4,"hjetres=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile),-1,-1,4,"hjetptshiftprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile),-1,-1,4,"hjetptratioprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyJetRes1D */
static void G__setup_memvarMyJetRes1D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D));
   { MyJetRes1D *p; p=(MyJetRes1D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2D),-1,-1,4,"hjetres=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile),-1,-1,4,"hjetmatchratioprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile),-1,-1,4,"hjetptshiftprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile),-1,-1,4,"hjetptratioprof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStMyJetSpin_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMyJetMC(void) {
   /* MyJetMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC));
   G__memfunc_setup("MyJetMC",633,G__StMyJetSpin_Cint_228_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetMC",633,G__StMyJetSpin_Cint_228_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMC",723,G__StMyJetSpin_Cint_228_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTwoJetMC",1037,G__StMyJetSpin_Cint_228_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPtNoVtx",1286,G__StMyJetSpin_Cint_228_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPtNoVtxProf",1693,G__StMyJetSpin_Cint_228_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXParton",1004,G__StMyJetSpin_Cint_228_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXgParton",1107,G__StMyJetSpin_Cint_228_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXParticle",1196,G__StMyJetSpin_Cint_228_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXgParticle",1299,G__StMyJetSpin_Cint_228_0_10, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPartonMC",1351,G__StMyJetSpin_Cint_228_0_11, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetParticleMC",1543,G__StMyJetSpin_Cint_228_0_12, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetParticleCrrMC",1838,G__StMyJetSpin_Cint_228_0_13, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPartonNoMatch",1889,G__StMyJetSpin_Cint_228_0_14, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetParticleNoMatch",2081,G__StMyJetSpin_Cint_228_0_15, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPartonNoMatchProf",2296,G__StMyJetSpin_Cint_228_0_16, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetParticleNoMatchProf",2488,G__StMyJetSpin_Cint_228_0_17, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessFlavor",1641,G__StMyJetSpin_Cint_228_0_18, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDiffPartonProf",1991,G__StMyJetSpin_Cint_228_0_19, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDiffParticleProf",2183,G__StMyJetSpin_Cint_228_0_20, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDiffParticleCrrProf",2478,G__StMyJetSpin_Cint_228_0_21, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDiffPartonW2Prof",2128,G__StMyJetSpin_Cint_228_0_22, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDiffParticleW2Prof",2320,G__StMyJetSpin_Cint_228_0_23, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDiffParticleCrrW2Prof",2615,G__StMyJetSpin_Cint_228_0_24, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetALLDetector",1331,G__StMyJetSpin_Cint_228_0_25, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetALLDetector2D",1449,G__StMyJetSpin_Cint_228_0_26, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 1, 1, 1, 8, "i - - 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetALLDetectorW2",1468,G__StMyJetSpin_Cint_228_0_27, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtDetector",1310,G__StMyJetSpin_Cint_228_0_28, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtDetectorW2",1447,G__StMyJetSpin_Cint_228_0_29, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPtJet",843,G__StMyJetSpin_Cint_228_0_30, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPtJet2D",961,G__StMyJetSpin_Cint_228_0_31, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPtJetW2",980,G__StMyJetSpin_Cint_228_0_32, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPt",878,G__StMyJetSpin_Cint_228_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - pt f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillXParton",1107,G__StMyJetSpin_Cint_228_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - x f - - 0 - pt "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillXgParton",1210,G__StMyJetSpin_Cint_228_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - xg f - - 0 - pt "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillXParticle",1299,G__StMyJetSpin_Cint_228_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - x f - - 0 - pt "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillXgParticle",1402,G__StMyJetSpin_Cint_228_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - xg f - - 0 - pt "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtNoVtx",1389,G__StMyJetSpin_Cint_228_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - pt f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTwoJetPt",1192,G__StMyJetSpin_Cint_228_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - pt2 "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPartonPt",1506,G__StMyJetSpin_Cint_228_0_40, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - ptpar "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetParticlePt",1698,G__StMyJetSpin_Cint_228_0_41, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - ptpar "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetParticlePtCrr",1993,G__StMyJetSpin_Cint_228_0_42, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - ptpar "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDiffPartonProf",2094,G__StMyJetSpin_Cint_228_0_43, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - ptpar "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDiffParticleProf",2286,G__StMyJetSpin_Cint_228_0_44, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - ptpar "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDiffParticleCrrProf",2581,G__StMyJetSpin_Cint_228_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - ptpar "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPartonNoMatch",1992,G__StMyJetSpin_Cint_228_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - pt f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetParticleNoMatch",2184,G__StMyJetSpin_Cint_228_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - pt f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDPt",946,G__StMyJetSpin_Cint_228_0_48, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - dpt "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDetectorPt",1704,G__StMyJetSpin_Cint_228_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - pt f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_228_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetMC' - 0 - jetmc f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_228_0_51, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_228_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_228_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_228_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_228_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_228_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_228_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_228_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_228_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetMC", 633, G__StMyJetSpin_Cint_228_0_63, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC), -1, 0, 1, 1, 1, 0, "u 'MyJetMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetMC", 759, G__StMyJetSpin_Cint_228_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_228_0_65, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetMC), -1, 1, 1, 1, 1, 0, "u 'MyJetMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetPar(void) {
   /* MyJetPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar));
   G__memfunc_setup("MyJetPar",780,G__StMyJetSpin_Cint_229_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetPar",780,G__StMyJetSpin_Cint_229_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetALLPar",796,G__StMyJetSpin_Cint_229_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetALLPar2D",914,G__StMyJetSpin_Cint_229_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 1, 1, 1, 8, "i - - 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetALLParW2",933,G__StMyJetSpin_Cint_229_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtPar",775,G__StMyJetSpin_Cint_229_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtParW2",912,G__StMyJetSpin_Cint_229_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__StMyJetSpin_Cint_229_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXg",479,G__StMyJetSpin_Cint_229_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_229_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetPar' - 0 - jetmc f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_229_0_11, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_229_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_229_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_229_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_229_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_229_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_229_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_229_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_229_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetPar", 780, G__StMyJetSpin_Cint_229_0_23, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar), -1, 0, 1, 1, 1, 0, "u 'MyJetPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetPar", 906, G__StMyJetSpin_Cint_229_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_229_0_25, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPar), -1, 1, 1, 1, 1, 0, "u 'MyJetPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetYield(void) {
   /* MyJetYield */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield));
   G__memfunc_setup("MyJetYield",992,G__StMyJetSpin_Cint_241_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetYield",992,G__StMyJetSpin_Cint_241_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_241_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetYield' - 0 - jetyield f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJet",579,G__StMyJetSpin_Cint_241_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRtProf",1184,G__StMyJetSpin_Cint_241_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTwoJet",1184,G__StMyJetSpin_Cint_241_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetTwoJet",1287,G__StMyJetSpin_Cint_241_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - eta1 "
"f - - 0 - pt2 f - - 0 - eta2 "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtEtaRt",1358,G__StMyJetSpin_Cint_241_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - pt f - - 0 - eta "
"f - - 0 - rt f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_241_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetYield::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_241_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetYield::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_241_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetYield::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_241_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetYield::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_241_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_241_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetYield::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_241_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetYield::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_241_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetYield::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_241_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetYield::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetYield", 992, G__StMyJetSpin_Cint_241_0_21, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield), -1, 0, 1, 1, 1, 0, "u 'MyJetYield' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetYield", 1118, G__StMyJetSpin_Cint_241_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_241_0_23, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYield), -1, 1, 1, 1, 1, 0, "u 'MyJetYield' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetYieldPar(void) {
   /* MyJetYieldPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar));
   G__memfunc_setup("MyJetYieldPar",1283,G__StMyJetSpin_Cint_242_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetYieldPar",1283,G__StMyJetSpin_Cint_242_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtEta",766,G__StMyJetSpin_Cint_242_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtRes",782,G__StMyJetSpin_Cint_242_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillResponse",1238,G__StMyJetSpin_Cint_242_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - eta1 "
"f - - 0 - pt2 f - - 0 - eta2 "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_242_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetYieldPar' - 0 - par f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_242_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetYieldPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_242_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetYieldPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_242_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetYieldPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_242_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetYieldPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_242_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_242_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetYieldPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_242_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetYieldPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_242_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetYieldPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_242_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetYieldPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetYieldPar", 1283, G__StMyJetSpin_Cint_242_0_19, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar), -1, 0, 1, 1, 1, 0, "u 'MyJetYieldPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetYieldPar", 1409, G__StMyJetSpin_Cint_242_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_242_0_21, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetYieldPar), -1, 1, 1, 1, 1, 0, "u 'MyJetYieldPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetTest(void) {
   /* MyJetTest */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest));
   G__memfunc_setup("MyJetTest",905,G__StMyJetSpin_Cint_243_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetTest",905,G__StMyJetSpin_Cint_243_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_243_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetTest' - 0 - jetyield f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPt",775,G__StMyJetSpin_Cint_243_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetEta",861,G__StMyJetSpin_Cint_243_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPhi",868,G__StMyJetSpin_Cint_243_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTwoJet",893,G__StMyJetSpin_Cint_243_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_243_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetTest::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_243_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetTest::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_243_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetTest::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_243_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetTest::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_243_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_243_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetTest::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_243_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetTest::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_243_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetTest::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_243_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetTest::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetTest", 905, G__StMyJetSpin_Cint_243_0_20, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest), -1, 0, 1, 1, 1, 0, "u 'MyJetTest' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetTest", 1031, G__StMyJetSpin_Cint_243_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_243_0_22, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTest), -1, 1, 1, 1, 1, 0, "u 'MyJetTest' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetTestPar(void) {
   /* MyJetTestPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar));
   G__memfunc_setup("MyJetTestPar",1196,G__StMyJetSpin_Cint_244_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetTestPar",1196,G__StMyJetSpin_Cint_244_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPt",484,G__StMyJetSpin_Cint_244_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_244_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetTestPar' - 0 - par f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_244_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetTestPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_244_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetTestPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_244_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetTestPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_244_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetTestPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_244_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_244_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetTestPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_244_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetTestPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_244_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetTestPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_244_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetTestPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetTestPar", 1196, G__StMyJetSpin_Cint_244_0_17, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar), -1, 0, 1, 1, 1, 0, "u 'MyJetTestPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetTestPar", 1322, G__StMyJetSpin_Cint_244_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_244_0_19, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetTestPar), -1, 1, 1, 1, 1, 0, "u 'MyJetTestPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyEventQA(void) {
   /* MyEventQA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA));
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_245_0_1, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyEventQA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_245_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyEventQA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_245_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyEventQA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_245_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyEventQA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_245_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_245_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyEventQA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_245_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyEventQA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_245_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyEventQA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_245_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyEventQA::DeclFileLine) ), 0);
   G__memfunc_setup("MyEventQA",858,G__StMyJetSpin_Cint_245_0_13, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyEventQA",858,G__StMyJetSpin_Cint_245_0_14, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventWeight",1418,G__StMyJetSpin_Cint_245_0_15, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchedVx",1188,G__StMyJetSpin_Cint_245_0_16, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertexZ",1016,G__StMyJetSpin_Cint_245_0_17, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPosVtx",994,G__StMyJetSpin_Cint_245_0_18, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillVertexZ",1119,G__StMyJetSpin_Cint_245_0_19, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - - 0 - v f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEventWeight",1521,G__StMyJetSpin_Cint_245_0_20, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - - 0 - v f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillMatchedVx",1291,G__StMyJetSpin_Cint_245_0_21, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - - 0 - v f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_245_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyEventQA' - 0 - event f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MyEventQA", 858, G__StMyJetSpin_Cint_245_0_23, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA), -1, 0, 1, 1, 1, 0, "u 'MyEventQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyEventQA", 984, G__StMyJetSpin_Cint_245_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_245_0_25, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyEventQA), -1, 1, 1, 1, 1, 0, "u 'MyEventQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetQA(void) {
   /* MyJetQA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA));
   G__memfunc_setup("MyJetQA",635,G__StMyJetSpin_Cint_246_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetQA",635,G__StMyJetSpin_Cint_246_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPtNoVtx",1286,G__StMyJetSpin_Cint_246_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetNPosVtx",1285,G__StMyJetSpin_Cint_246_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetVertexZ",1307,G__StMyJetSpin_Cint_246_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPt",775,G__StMyJetSpin_Cint_246_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetProf",986,G__StMyJetSpin_Cint_246_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetEta",861,G__StMyJetSpin_Cint_246_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPhi",868,G__StMyJetSpin_Cint_246_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRt",777,G__StMyJetSpin_Cint_246_0_10, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetParJt",1060,G__StMyJetSpin_Cint_246_0_11, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetParZ",960,G__StMyJetSpin_Cint_246_0_12, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMult",997,G__StMyJetSpin_Cint_246_0_13, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTrkMult",1302,G__StMyJetSpin_Cint_246_0_14, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTrkMultProf",1709,G__StMyJetSpin_Cint_246_0_15, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTrkPt",1080,G__StMyJetSpin_Cint_246_0_16, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTwrPt",1092,G__StMyJetSpin_Cint_246_0_17, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTwrMult",1314,G__StMyJetSpin_Cint_246_0_18, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTwrMultProf",1721,G__StMyJetSpin_Cint_246_0_19, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRtProf",1184,G__StMyJetSpin_Cint_246_0_20, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPtProf",1182,G__StMyJetSpin_Cint_246_0_21, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUeDpt",1061,G__StMyJetSpin_Cint_246_0_22, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUeTwrMult",1500,G__StMyJetSpin_Cint_246_0_23, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUeTrkMult",1488,G__StMyJetSpin_Cint_246_0_24, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeDpt",770,G__StMyJetSpin_Cint_246_0_25, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeMult",892,G__StMyJetSpin_Cint_246_0_26, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeTrkMult",1197,G__StMyJetSpin_Cint_246_0_27, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeTwrMult",1209,G__StMyJetSpin_Cint_246_0_28, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeTrkPt",975,G__StMyJetSpin_Cint_246_0_29, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeTwrPt",987,G__StMyJetSpin_Cint_246_0_30, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeDpt3D",889,G__StMyJetSpin_Cint_246_0_31, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH3F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUeMult3D",1011,G__StMyJetSpin_Cint_246_0_32, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH3F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetAreaVsPt",1353,G__StMyJetSpin_Cint_246_0_33, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUeRt",963,G__StMyJetSpin_Cint_246_0_34, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUeParJt",1246,G__StMyJetSpin_Cint_246_0_35, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUeParZ",1146,G__StMyJetSpin_Cint_246_0_36, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRtVsEta",1260,G__StMyJetSpin_Cint_246_0_37, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtEtaPhi",1449,G__StMyJetSpin_Cint_246_0_38, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - pt f - - 0 - eta "
"f - - 0 - phi f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtRt",1076,G__StMyJetSpin_Cint_246_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - rt "
"f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetMult",1100,G__StMyJetSpin_Cint_246_0_40, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - pt f - - 0 - twrmult "
"f - - 0 - trkmult f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetUe",868,G__StMyJetSpin_Cint_246_0_41, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - pt f - - 0 - dpt "
"f - - 0 - twrmult f - - 0 - trkmult "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtNoVtx",1389,G__StMyJetSpin_Cint_246_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - pt f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetNPosVtx",1388,G__StMyJetSpin_Cint_246_0_43, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - npos "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetVertexZ",1410,G__StMyJetSpin_Cint_246_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - vz f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_246_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetQA' - 0 - jetqa f - - 0 '1.' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_246_0_46, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetQA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_246_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetQA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_246_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetQA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_246_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetQA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_246_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_246_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetQA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_246_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetQA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_246_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetQA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_246_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetQA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetQA", 635, G__StMyJetSpin_Cint_246_0_58, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA), -1, 0, 1, 1, 1, 0, "u 'MyJetQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetQA", 761, G__StMyJetSpin_Cint_246_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_246_0_60, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetQA), -1, 1, 1, 1, 1, 0, "u 'MyJetQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyTrigQA(void) {
   /* MyTrigQA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA));
   G__memfunc_setup("MyTrigQA",750,G__StMyJetSpin_Cint_490_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyTrigQA",750,G__StMyJetSpin_Cint_490_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA), -1, 0, 1, 1, 1, 0, "C - - 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigEvent",1208,G__StMyJetSpin_Cint_490_0_3, 117, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR), G__defined_typename("map<string,int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigPrescale",1509,G__StMyJetSpin_Cint_490_0_4, 117, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR), G__defined_typename("map<string,float>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigNevnt",1217,G__StMyJetSpin_Cint_490_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigNprescale",1619,G__StMyJetSpin_Cint_490_0_6, 102, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrigNevnt",1229,G__StMyJetSpin_Cint_490_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - id i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Count",521,G__StMyJetSpin_Cint_490_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrigPrescale",1521,G__StMyJetSpin_Cint_490_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - id f - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckId",651,G__StMyJetSpin_Cint_490_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigName",1079,G__StMyJetSpin_Cint_490_0_11, 117, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_490_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MyTrigQA' - 0 - trigQA", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_490_0_13, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyTrigQA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_490_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyTrigQA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_490_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyTrigQA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_490_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyTrigQA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_490_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_490_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyTrigQA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_490_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyTrigQA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_490_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyTrigQA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_490_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyTrigQA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyTrigQA", 750, G__StMyJetSpin_Cint_490_0_25, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA), -1, 0, 1, 1, 1, 0, "u 'MyTrigQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyTrigQA", 876, G__StMyJetSpin_Cint_490_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_490_0_27, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyTrigQA), -1, 1, 1, 1, 1, 0, "u 'MyTrigQA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetSpin(void) {
   /* MyJetSpin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin));
   G__memfunc_setup("MyJetSpin",899,G__StMyJetSpin_Cint_491_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetSpin",899,G__StMyJetSpin_Cint_491_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin), -1, 0, 1, 1, 1, 0, "C - - 10 - myjetname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpinIndex",914,G__StMyJetSpin_Cint_491_0_3, 105, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - spin", (char*)NULL, (void*) G__func2void( (int (*)(int))(&MyJetSpin::SpinIndex) ), 0);
   G__memfunc_setup("AddJetSpin",966,G__StMyJetSpin_Cint_491_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetSpin",989,G__StMyJetSpin_Cint_491_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetSpin",989,G__StMyJetSpin_Cint_491_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetSigSpin",1280,G__StMyJetSpin_Cint_491_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetSigSpin",1280,G__StMyJetSpin_Cint_491_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTwoSpin",1303,G__StMyJetSpin_Cint_491_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetTwoSpin",1303,G__StMyJetSpin_Cint_491_0_10, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetErrSpin",1286,G__StMyJetSpin_Cint_491_0_11, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetErrSpin",1286,G__StMyJetSpin_Cint_491_0_12, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMeanPtSpin",1570,G__StMyJetSpin_Cint_491_0_13, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMeanPtSpin",1570,G__StMyJetSpin_Cint_491_0_14, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDPtSpin",1253,G__StMyJetSpin_Cint_491_0_15, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetDPtSpin",1253,G__StMyJetSpin_Cint_491_0_16, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMultSpin",1407,G__StMyJetSpin_Cint_491_0_17, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMultSpin",1407,G__StMyJetSpin_Cint_491_0_18, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMultUeSpin",1593,G__StMyJetSpin_Cint_491_0_19, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetMultUeSpin",1593,G__StMyJetSpin_Cint_491_0_20, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPt",878,G__StMyJetSpin_Cint_491_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - spin f - - 0 - pt "
"f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetTwoPt",1192,G__StMyJetSpin_Cint_491_0_22, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - spin f - - 0 - pt1 "
"f - - 0 - pt2 f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetErrorPt",1400,G__StMyJetSpin_Cint_491_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetMeanPt",1263,G__StMyJetSpin_Cint_491_0_24, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - spin f - - 0 - pt1 "
"f - - 0 - pt2 f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDPt",946,G__StMyJetSpin_Cint_491_0_25, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - spin f - - 0 - pt1 "
"f - - 0 - pt2 f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetMult",1100,G__StMyJetSpin_Cint_491_0_26, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - spin f - - 0 - pt1 "
"f - - 0 - mult f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetMultUe",1286,G__StMyJetSpin_Cint_491_0_27, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - spin f - - 0 - pt1 "
"f - - 0 - mult f - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill_pt",746,G__StMyJetSpin_Cint_491_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - spinbit f - - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill_twojet_pt",1510,G__StMyJetSpin_Cint_491_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - spinbit f - - 0 - pta "
"f - - 0 - ptb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill_error",1072,G__StMyJetSpin_Cint_491_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill_dpt",846,G__StMyJetSpin_Cint_491_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - spinbit f - - 0 - pt "
"f - - 0 - dpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_491_0_32, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetSpin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_491_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetSpin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_491_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetSpin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_491_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetSpin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_491_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_491_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetSpin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_491_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetSpin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_491_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetSpin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_491_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetSpin::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetSpin", 899, G__StMyJetSpin_Cint_491_0_44, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin), -1, 0, 1, 1, 1, 0, "u 'MyJetSpin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetSpin", 1025, G__StMyJetSpin_Cint_491_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_491_0_46, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSpin), -1, 1, 1, 1, 1, 0, "u 'MyJetSpin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetCrs(void) {
   /* MyJetCrs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs));
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_492_0_1, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetCrs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_492_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetCrs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_492_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetCrs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_492_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetCrs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_492_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_492_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetCrs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_492_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetCrs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_492_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetCrs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_492_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetCrs::DeclFileLine) ), 0);
   G__memfunc_setup("MyJetCrs",785,G__StMyJetSpin_Cint_492_0_13, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetCrs",785,G__StMyJetSpin_Cint_492_0_14, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs), -1, 0, 1, 1, 1, 0, "C - - 10 - myjetname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetXsection",1424,G__StMyJetSpin_Cint_492_0_15, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetBlueXsection",1816,G__StMyJetSpin_Cint_492_0_16, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetYellXsection",1830,G__StMyJetSpin_Cint_492_0_17, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetLikeSignXsection",2214,G__StMyJetSpin_Cint_492_0_18, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUnlikeSignXsection",2441,G__StMyJetSpin_Cint_492_0_19, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetXsectionSigma",1921,G__StMyJetSpin_Cint_492_0_20, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetBlueXsectionSigma",2313,G__StMyJetSpin_Cint_492_0_21, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetYellXsectionSigma",2327,G__StMyJetSpin_Cint_492_0_22, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetLikeSignXsectionSigma",2711,G__StMyJetSpin_Cint_492_0_23, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUnlikeSignXsectionSigma",2938,G__StMyJetSpin_Cint_492_0_24, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetXsectionError",1946,G__StMyJetSpin_Cint_492_0_25, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetBlueXsectionError",2338,G__StMyJetSpin_Cint_492_0_26, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetYellXsectionError",2352,G__StMyJetSpin_Cint_492_0_27, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetLikeSignXsectionError",2736,G__StMyJetSpin_Cint_492_0_28, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUnlikeSignXsectionError",2963,G__StMyJetSpin_Cint_492_0_29, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetXsection",1527,G__StMyJetSpin_Cint_492_0_30, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '-1.0' pol "
"f - - 0 '1.0' r3 f - - 0 '0.55' pb "
"f - - 0 '0.55' py f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetBlueXsection",1919,G__StMyJetSpin_Cint_492_0_31, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '-1.0' pol "
"f - - 0 '1.0' r2 f - - 0 '0.55' pb "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetYellXsection",1933,G__StMyJetSpin_Cint_492_0_32, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '-1.0' pol "
"f - - 0 '1.0' r1 f - - 0 '0.55' py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetLikeSignXsection",2317,G__StMyJetSpin_Cint_492_0_33, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '-1.0' pol "
"f - - 0 '1.0' r4 f - - 0 '0.55' pb "
"f - - 0 '0.55' py f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetUnlikeSignXsection",2544,G__StMyJetSpin_Cint_492_0_34, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '-1.0' pol "
"f - - 0 '1.0' r5 f - - 0 '1.0' r6 "
"f - - 0 '0.55' pb f - - 0 '0.55' py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetXsectionError",2049,G__StMyJetSpin_Cint_492_0_35, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '1.0' pol "
"f - - 0 '1.0' r3 f - - 0 '0.55' pb "
"f - - 0 '0.55' py f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetBlueXsectionError",2441,G__StMyJetSpin_Cint_492_0_36, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '1.0' pol "
"f - - 0 '1.0' r2 f - - 0 '0.55' pb "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetYellXsectionError",2455,G__StMyJetSpin_Cint_492_0_37, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '1.0' pol "
"f - - 0 '1.0' r1 f - - 0 '0.55' py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetLikeSignXsectionError",2839,G__StMyJetSpin_Cint_492_0_38, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '1.0' pol "
"f - - 0 '1.0' r4 f - - 0 '0.55' pb "
"f - - 0 '0.55' py f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetUnlikeSignXsectionError",3066,G__StMyJetSpin_Cint_492_0_39, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin f - - 0 '1.0' pol "
"f - - 0 '1.0' r5 f - - 0 '1.0' r6 "
"f - - 0 '0.55' pb f - - 0 '0.55' py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPolXection",1420,G__StMyJetSpin_Cint_492_0_40, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin F - - 0 - rel "
"f - - 0 - pb f - - 0 - py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillUnpXection",1428,G__StMyJetSpin_Cint_492_0_41, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin F - - 0 - rel "
"f - - 0 - pb f - - 0 - py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetCrs", 785, G__StMyJetSpin_Cint_492_0_42, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs), -1, 0, 1, 1, 1, 0, "u 'MyJetCrs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetCrs", 911, G__StMyJetSpin_Cint_492_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_492_0_44, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs), -1, 1, 1, 1, 1, 0, "u 'MyJetCrs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetAsym(void) {
   /* MyJetAsym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym));
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_493_0_1, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetAsym::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_493_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetAsym::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_493_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetAsym::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_493_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetAsym::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_493_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_493_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetAsym::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_493_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetAsym::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_493_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetAsym::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_493_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetAsym::DeclFileLine) ), 0);
   G__memfunc_setup("MyJetAsym",899,G__StMyJetSpin_Cint_493_0_13, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetAsym",899,G__StMyJetSpin_Cint_493_0_14, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym), -1, 0, 1, 1, 1, 0, "C - - 10 - myjetname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetAsym",989,G__StMyJetSpin_Cint_493_0_15, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetBlueAsym",1381,G__StMyJetSpin_Cint_493_0_16, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetYellAsym",1395,G__StMyJetSpin_Cint_493_0_17, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetLikeSignAsym",1779,G__StMyJetSpin_Cint_493_0_18, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUnlikeSignAsym",2006,G__StMyJetSpin_Cint_493_0_19, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetAsymSigma",1486,G__StMyJetSpin_Cint_493_0_20, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetBlueAsymSigma",1878,G__StMyJetSpin_Cint_493_0_21, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetYellAsymSigma",1892,G__StMyJetSpin_Cint_493_0_22, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetLikeSignAsymSigma",2276,G__StMyJetSpin_Cint_493_0_23, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUnlikeSignAsymSigma",2503,G__StMyJetSpin_Cint_493_0_24, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH1F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetAsymError",1511,G__StMyJetSpin_Cint_493_0_25, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetBlueAsymError",1903,G__StMyJetSpin_Cint_493_0_26, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetYellAysmError",1917,G__StMyJetSpin_Cint_493_0_27, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetLikeSignAsymError",2301,G__StMyJetSpin_Cint_493_0_28, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetUnlikeSignAsymError",2528,G__StMyJetSpin_Cint_493_0_29, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2F), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetAsym",1092,G__StMyJetSpin_Cint_493_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetBlueAsym",1484,G__StMyJetSpin_Cint_493_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetYellAsym",1498,G__StMyJetSpin_Cint_493_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetLikeSignAsym",1882,G__StMyJetSpin_Cint_493_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetUnlikeSignAsym",2109,G__StMyJetSpin_Cint_493_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetAsymError",1614,G__StMyJetSpin_Cint_493_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetBlueAsymError",2006,G__StMyJetSpin_Cint_493_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetYellAsymError",2020,G__StMyJetSpin_Cint_493_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetLikeSignAsymError",2404,G__StMyJetSpin_Cint_493_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetUnlikeSignAsymError",2631,G__StMyJetSpin_Cint_493_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - pol U 'MyJetCrs' - 0 - unp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillAsymmetry",1362,G__StMyJetSpin_Cint_493_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetCrs' - 0 - jetpol U 'MyJetCrs' - 0 - jetunp", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetAsym", 899, G__StMyJetSpin_Cint_493_0_41, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym), -1, 0, 1, 1, 1, 0, "u 'MyJetAsym' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetAsym", 1025, G__StMyJetSpin_Cint_493_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_493_0_43, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym), -1, 1, 1, 1, 1, 0, "u 'MyJetAsym' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetPtSpin(void) {
   /* MyJetPtSpin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin));
   G__memfunc_setup("MyJetPtSpin",1095,G__StMyJetSpin_Cint_494_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetPtSpin",1095,G__StMyJetSpin_Cint_494_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProfiles",1101,G__StMyJetSpin_Cint_494_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TProfile' - 2 - hh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMeanPt",846,G__StMyJetSpin_Cint_494_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MyJetSpin' - 0 - jetspin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDPt",529,G__StMyJetSpin_Cint_494_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MyJetSpin' - 0 - jetspin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMult",683,G__StMyJetSpin_Cint_494_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MyJetSpin' - 0 - jetspin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddMultUe",869,G__StMyJetSpin_Cint_494_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MyJetSpin' - 0 - jetspin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPtProfile",1496,G__StMyJetSpin_Cint_494_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 2, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetPtProfileSpin",1906,G__StMyJetSpin_Cint_494_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 1, 1, 1, 8, "i - - 0 - spin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_494_0_10, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetPtSpin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_494_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPtSpin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_494_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetPtSpin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_494_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetPtSpin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_494_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_494_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPtSpin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_494_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetPtSpin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_494_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPtSpin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_494_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetPtSpin::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetPtSpin", 1095, G__StMyJetSpin_Cint_494_0_22, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin), -1, 0, 1, 1, 1, 0, "u 'MyJetPtSpin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetPtSpin", 1221, G__StMyJetSpin_Cint_494_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_494_0_24, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtSpin), -1, 1, 1, 1, 1, 0, "u 'MyJetPtSpin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetPtAsym(void) {
   /* MyJetPtAsym */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym));
   G__memfunc_setup("MyJetPtAsym",1095,G__StMyJetSpin_Cint_495_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetPtAsym",1095,G__StMyJetSpin_Cint_495_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtAsym",1288,G__StMyJetSpin_Cint_495_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TProfile' - 42 - h f - - 0 '0.55' pb "
"f - - 0 '0.55' py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtAsym",1288,G__StMyJetSpin_Cint_495_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'MyJetPtSpin' - 0 - jetptspin f - - 0 '0.55' pb "
"f - - 0 '0.55' py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAsymmetry",1236,G__StMyJetSpin_Cint_495_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MyJetPtAsym' - 0 - asym", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtAsymmetry",1455,G__StMyJetSpin_Cint_495_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtBlueAsymmetry",1847,G__StMyJetSpin_Cint_495_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtYellowAsymmetry",2091,G__StMyJetSpin_Cint_495_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtLikeSignAsymmetry",2245,G__StMyJetSpin_Cint_495_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtUnlikeSignAsymmetry",2472,G__StMyJetSpin_Cint_495_0_10, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillBinAsymmetry",1643,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"U 'TProfile' - 0 - hprof i - - 0 - bin "
"f - - 0 - num f - - 0 - num_err "
"f - - 0 - den f - - 0 '0.55' pb "
"f - - 0 '0.55' py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_495_0_12, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetPtAsym::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_495_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPtAsym::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_495_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetPtAsym::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_495_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetPtAsym::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_495_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_495_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPtAsym::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_495_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetPtAsym::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_495_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetPtAsym::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_495_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetPtAsym::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetPtAsym", 1095, G__StMyJetSpin_Cint_495_0_24, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 1, 1, 1, 0, "u 'MyJetPtAsym' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetPtAsym", 1221, G__StMyJetSpin_Cint_495_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_495_0_26, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 1, 1, 1, 1, 0, "u 'MyJetPtAsym' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetSum(void) {
   /* MyJetSum */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum));
   G__memfunc_setup("MyJetSum",798,G__StMyJetSpin_Cint_496_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetSum",798,G__StMyJetSpin_Cint_496_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsym",698,G__StMyJetSpin_Cint_496_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetAsym), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPol",587,G__StMyJetSpin_Cint_496_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnp",595,G__StMyJetSpin_Cint_496_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetCrs), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtAsym",894,G__StMyJetSpin_Cint_496_0_6, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDptAsym",994,G__StMyJetSpin_Cint_496_0_7, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultAsym",1116,G__StMyJetSpin_Cint_496_0_8, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultUeAsym",1302,G__StMyJetSpin_Cint_496_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetPtAsym), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetSpin",1092,G__StMyJetSpin_Cint_496_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'MyJetSpin' - 0 - jetspin F - - 0 - rel "
"f - - 0 - pb f - - 0 - py "
"f - - 0 '1.0' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetPtSpin",1288,G__StMyJetSpin_Cint_496_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'MyJetPtSpin' - 0 - jetptspin f - - 0 '0.55' pb "
"f - - 0 '0.55' py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillJetDPtSpin",1356,G__StMyJetSpin_Cint_496_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'MyJetPtSpin' - 0 - jetptspin f - - 0 '0.55' pb "
"f - - 0 '0.55' py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillAsym",801,G__StMyJetSpin_Cint_496_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_496_0_14, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetSum::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_496_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetSum::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_496_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetSum::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_496_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetSum::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_496_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_496_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetSum::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_496_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetSum::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_496_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetSum::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_496_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetSum::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetSum", 798, G__StMyJetSpin_Cint_496_0_26, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum), -1, 0, 1, 1, 1, 0, "u 'MyJetSum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetSum", 924, G__StMyJetSpin_Cint_496_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_496_0_28, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetSum), -1, 1, 1, 1, 1, 0, "u 'MyJetSum' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetVtx(void) {
   /* MyJetVtx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx));
   G__memfunc_setup("MyJetVtx",811,G__StMyJetSpin_Cint_497_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetVtx",811,G__StMyJetSpin_Cint_497_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetVertexProf",1624,G__StMyJetSpin_Cint_497_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_497_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetVtx' - 0 - jetvtx f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_497_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetVtx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_497_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetVtx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_497_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetVtx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_497_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetVtx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_497_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_497_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetVtx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_497_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetVtx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_497_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetVtx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_497_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetVtx::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetVtx", 811, G__StMyJetSpin_Cint_497_0_17, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx), -1, 0, 1, 1, 1, 0, "u 'MyJetVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetVtx", 937, G__StMyJetSpin_Cint_497_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_497_0_19, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetVtx), -1, 1, 1, 1, 1, 0, "u 'MyJetVtx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetRes(void) {
   /* MyJetRes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes));
   G__memfunc_setup("GetJetRes",877,G__StMyJetSpin_Cint_498_0_1, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetJetMatchRatio",1583,G__StMyJetSpin_Cint_498_0_2, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetJetPtScale",1263,G__StMyJetSpin_Cint_498_0_3, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetJetPtShift",1285,G__StMyJetSpin_Cint_498_0_4, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_498_0_5, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetRes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_498_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_498_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetRes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_498_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetRes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_498_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_498_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_498_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetRes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_498_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_498_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetRes::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MyJetRes", 913, G__StMyJetSpin_Cint_498_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_498_0_18, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes), -1, 1, 1, 1, 1, 0, "u 'MyJetRes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetRes2D(void) {
   /* MyJetRes2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D));
   G__memfunc_setup("MyJetRes2D",905,G__StMyJetSpin_Cint_499_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetRes2D",905,G__StMyJetSpin_Cint_499_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_499_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetRes2D' - 0 - jetyield f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRes",877,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetMatchRatio",1583,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtScale",1263,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtShift",1285,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillJetMatchRatio",1686,G__StMyJetSpin_Cint_499_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - pt d - - 0 - eta "
"g - - 0 - match d - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillResponse",1238,G__StMyJetSpin_Cint_499_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - eta1 "
"f - - 0 - pt2 f - - 0 - eta2 "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_499_0_10, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetRes2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_499_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_499_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetRes2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_499_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetRes2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_499_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_499_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_499_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetRes2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_499_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_499_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetRes2D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetRes2D", 905, G__StMyJetSpin_Cint_499_0_22, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D), -1, 0, 1, 1, 1, 0, "u 'MyJetRes2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetRes2D", 1031, G__StMyJetSpin_Cint_499_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_499_0_24, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes2D), -1, 1, 1, 1, 1, 0, "u 'MyJetRes2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyJetRes1D(void) {
   /* MyJetRes1D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D));
   G__memfunc_setup("MyJetRes1D",904,G__StMyJetSpin_Cint_500_0_1, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyJetRes1D",904,G__StMyJetSpin_Cint_500_0_2, 105, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyJetSpin_Cint_500_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MyJetRes1D' - 0 - jetyield f - - 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJetRes",877,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetMatchRatio",1583,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtScale",1263,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetJetPtShift",1285,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_StMyProfile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FillResponse",1238,G__StMyJetSpin_Cint_500_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt1 f - - 0 - pt2 "
"f - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyJetSpin_Cint_500_0_9, 85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyJetRes1D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyJetSpin_Cint_500_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes1D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyJetSpin_Cint_500_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyJetRes1D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyJetSpin_Cint_500_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyJetRes1D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyJetSpin_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyJetSpin_Cint_500_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyJetSpin_Cint_500_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes1D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyJetSpin_Cint_500_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetRes1D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyJetSpin_Cint_500_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyJetRes1D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyJetSpin_Cint_500_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyJetRes1D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyJetRes1D", 904, G__StMyJetSpin_Cint_500_0_21, (int) ('i'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D), -1, 0, 1, 1, 1, 0, "u 'MyJetRes1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyJetRes1D", 1030, G__StMyJetSpin_Cint_500_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyJetSpin_Cint_500_0_23, (int) ('u'), G__get_linked_tagnum(&G__StMyJetSpin_CintLN_MyJetRes1D), -1, 1, 1, 1, 1, 0, "u 'MyJetRes1D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStMyJetSpin_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStMyJetSpin_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStMyJetSpin_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StMyJetSpin_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetMC = { "MyJetMC" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetPar = { "MyJetPar" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_TH3F = { "TH3F" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_StMyProfile = { "StMyProfile" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_StMyProfile2D = { "StMyProfile2D" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetYield = { "MyJetYield" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetYieldPar = { "MyJetYieldPar" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetTest = { "MyJetTest" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetTestPar = { "MyJetTestPar" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyEventQA = { "MyEventQA" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetQA = { "MyJetQA" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyTrigQA = { "MyTrigQA" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetSpin = { "MyJetSpin" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetCrs = { "MyJetCrs" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetAsym = { "MyJetAsym" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetPtSpin = { "MyJetPtSpin" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetPtAsym = { "MyJetPtAsym" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetSum = { "MyJetSum" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetVtx = { "MyJetVtx" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetRes = { "MyJetRes" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetRes2D = { "MyJetRes2D" , 99 , -1 };
G__linked_taginfo G__StMyJetSpin_CintLN_MyJetRes1D = { "MyJetRes1D" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStMyJetSpin_Cint() {
  G__StMyJetSpin_CintLN_TClass.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TBuffer.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TMemberInspector.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TObject.tagnum = -1 ;
  G__StMyJetSpin_CintLN_string.tagnum = -1 ;
  G__StMyJetSpin_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TH1F.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TProfile.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TH2F.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TH2D.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetMC.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetPar.tagnum = -1 ;
  G__StMyJetSpin_CintLN_TH3F.tagnum = -1 ;
  G__StMyJetSpin_CintLN_StMyProfile.tagnum = -1 ;
  G__StMyJetSpin_CintLN_StMyProfile2D.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetYield.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetYieldPar.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetTest.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetTestPar.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyEventQA.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetQA.tagnum = -1 ;
  G__StMyJetSpin_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyTrigQA.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetSpin.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetCrs.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetAsym.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetPtSpin.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetPtAsym.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetSum.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetVtx.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetRes.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetRes2D.tagnum = -1 ;
  G__StMyJetSpin_CintLN_MyJetRes1D.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStMyJetSpin_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetMC),sizeof(MyJetMC),-1,62720,(char*)NULL,G__setup_memvarMyJetMC,G__setup_memfuncMyJetMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetPar),sizeof(MyJetPar),-1,62720,(char*)NULL,G__setup_memvarMyJetPar,G__setup_memfuncMyJetPar);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_TH3F);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_StMyProfile);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_StMyProfile2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetYield),sizeof(MyJetYield),-1,62720,(char*)NULL,G__setup_memvarMyJetYield,G__setup_memfuncMyJetYield);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetYieldPar),sizeof(MyJetYieldPar),-1,62720,(char*)NULL,G__setup_memvarMyJetYieldPar,G__setup_memfuncMyJetYieldPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetTest),sizeof(MyJetTest),-1,62720,(char*)NULL,G__setup_memvarMyJetTest,G__setup_memfuncMyJetTest);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetTestPar),sizeof(MyJetTestPar),-1,62720,(char*)NULL,G__setup_memvarMyJetTestPar,G__setup_memfuncMyJetTestPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyEventQA),sizeof(MyEventQA),-1,62720,(char*)NULL,G__setup_memvarMyEventQA,G__setup_memfuncMyEventQA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetQA),sizeof(MyJetQA),-1,62720,(char*)NULL,G__setup_memvarMyJetQA,G__setup_memfuncMyJetQA);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyTrigQA),sizeof(MyTrigQA),-1,61696,(char*)NULL,G__setup_memvarMyTrigQA,G__setup_memfuncMyTrigQA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetSpin),sizeof(MyJetSpin),-1,62720,(char*)NULL,G__setup_memvarMyJetSpin,G__setup_memfuncMyJetSpin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetCrs),sizeof(MyJetCrs),-1,62720,(char*)NULL,G__setup_memvarMyJetCrs,G__setup_memfuncMyJetCrs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetAsym),sizeof(MyJetAsym),-1,62720,(char*)NULL,G__setup_memvarMyJetAsym,G__setup_memfuncMyJetAsym);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetPtSpin),sizeof(MyJetPtSpin),-1,62720,(char*)NULL,G__setup_memvarMyJetPtSpin,G__setup_memfuncMyJetPtSpin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetPtAsym),sizeof(MyJetPtAsym),-1,62720,(char*)NULL,G__setup_memvarMyJetPtAsym,G__setup_memfuncMyJetPtAsym);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetSum),sizeof(MyJetSum),-1,61696,(char*)NULL,G__setup_memvarMyJetSum,G__setup_memfuncMyJetSum);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetVtx),sizeof(MyJetVtx),-1,62720,(char*)NULL,G__setup_memvarMyJetVtx,G__setup_memfuncMyJetVtx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetRes),sizeof(MyJetRes),-1,28676,(char*)NULL,G__setup_memvarMyJetRes,G__setup_memfuncMyJetRes);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetRes2D),sizeof(MyJetRes2D),-1,62720,(char*)NULL,G__setup_memvarMyJetRes2D,G__setup_memfuncMyJetRes2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyJetSpin_CintLN_MyJetRes1D),sizeof(MyJetRes1D),-1,62720,(char*)NULL,G__setup_memvarMyJetRes1D,G__setup_memfuncMyJetRes1D);
}
extern "C" void G__cpp_setupStMyJetSpin_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStMyJetSpin_Cint()");
  G__set_cpp_environmentStMyJetSpin_Cint();
  G__cpp_setup_tagtableStMyJetSpin_Cint();

  G__cpp_setup_inheritanceStMyJetSpin_Cint();

  G__cpp_setup_typetableStMyJetSpin_Cint();

  G__cpp_setup_memvarStMyJetSpin_Cint();

  G__cpp_setup_memfuncStMyJetSpin_Cint();
  G__cpp_setup_globalStMyJetSpin_Cint();
  G__cpp_setup_funcStMyJetSpin_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStMyJetSpin_Cint();
  return;
}
class G__cpp_setup_initStMyJetSpin_Cint {
  public:
    G__cpp_setup_initStMyJetSpin_Cint() { G__add_setup_func("StMyJetSpin_Cint",(G__incsetup)(&G__cpp_setupStMyJetSpin_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStMyJetSpin_Cint() { G__remove_setup_func("StMyJetSpin_Cint"); }
};
G__cpp_setup_initStMyJetSpin_Cint G__cpp_setup_initializerStMyJetSpin_Cint;

