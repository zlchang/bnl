//
// File generated by rootcint at Fri Nov 30 13:53:21 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStMyHistUtildIStMyHistUtil_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StMyHistUtil_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StMyHist2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyHist2D(void *p = 0);
   static void *newArray_StMyHist2D(Long_t size, void *p);
   static void delete_StMyHist2D(void *p);
   static void deleteArray_StMyHist2D(void *p);
   static void destruct_StMyHist2D(void *p);
   static void streamer_StMyHist2D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyHist2D*)
   {
      ::StMyHist2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyHist2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyHist2D", ::StMyHist2D::Class_Version(), "StRoot/StMyHistUtil/StMyHist.h", 10,
                  typeid(::StMyHist2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyHist2D::Dictionary, isa_proxy, 0,
                  sizeof(::StMyHist2D) );
      instance.SetNew(&new_StMyHist2D);
      instance.SetNewArray(&newArray_StMyHist2D);
      instance.SetDelete(&delete_StMyHist2D);
      instance.SetDeleteArray(&deleteArray_StMyHist2D);
      instance.SetDestructor(&destruct_StMyHist2D);
      instance.SetStreamerFunc(&streamer_StMyHist2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyHist2D*)
   {
      return GenerateInitInstanceLocal((::StMyHist2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyHist2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyProfile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyProfile(void *p = 0);
   static void *newArray_StMyProfile(Long_t size, void *p);
   static void delete_StMyProfile(void *p);
   static void deleteArray_StMyProfile(void *p);
   static void destruct_StMyProfile(void *p);
   static void streamer_StMyProfile(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyProfile*)
   {
      ::StMyProfile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyProfile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyProfile", ::StMyProfile::Class_Version(), "StRoot/StMyHistUtil/StMyHist.h", 41,
                  typeid(::StMyProfile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyProfile::Dictionary, isa_proxy, 0,
                  sizeof(::StMyProfile) );
      instance.SetNew(&new_StMyProfile);
      instance.SetNewArray(&newArray_StMyProfile);
      instance.SetDelete(&delete_StMyProfile);
      instance.SetDeleteArray(&deleteArray_StMyProfile);
      instance.SetDestructor(&destruct_StMyProfile);
      instance.SetStreamerFunc(&streamer_StMyProfile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyProfile*)
   {
      return GenerateInitInstanceLocal((::StMyProfile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyProfile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMyProfile2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StMyProfile2D(void *p = 0);
   static void *newArray_StMyProfile2D(Long_t size, void *p);
   static void delete_StMyProfile2D(void *p);
   static void deleteArray_StMyProfile2D(void *p);
   static void destruct_StMyProfile2D(void *p);
   static void streamer_StMyProfile2D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMyProfile2D*)
   {
      ::StMyProfile2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMyProfile2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMyProfile2D", ::StMyProfile2D::Class_Version(), "StRoot/StMyHistUtil/StMyHist.h", 72,
                  typeid(::StMyProfile2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMyProfile2D::Dictionary, isa_proxy, 0,
                  sizeof(::StMyProfile2D) );
      instance.SetNew(&new_StMyProfile2D);
      instance.SetNewArray(&newArray_StMyProfile2D);
      instance.SetDelete(&delete_StMyProfile2D);
      instance.SetDeleteArray(&deleteArray_StMyProfile2D);
      instance.SetDestructor(&destruct_StMyProfile2D);
      instance.SetStreamerFunc(&streamer_StMyProfile2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMyProfile2D*)
   {
      return GenerateInitInstanceLocal((::StMyProfile2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMyProfile2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyDrawObj_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyDrawObj(void *p = 0);
   static void *newArray_MyDrawObj(Long_t size, void *p);
   static void delete_MyDrawObj(void *p);
   static void deleteArray_MyDrawObj(void *p);
   static void destruct_MyDrawObj(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyDrawObj*)
   {
      ::MyDrawObj *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyDrawObj >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyDrawObj", ::MyDrawObj::Class_Version(), ".sl73_gcc485/obj/StRoot/StMyHistUtil/StMyDrawObj.h", 6,
                  typeid(::MyDrawObj), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyDrawObj::Dictionary, isa_proxy, 4,
                  sizeof(::MyDrawObj) );
      instance.SetNew(&new_MyDrawObj);
      instance.SetNewArray(&newArray_MyDrawObj);
      instance.SetDelete(&delete_MyDrawObj);
      instance.SetDeleteArray(&deleteArray_MyDrawObj);
      instance.SetDestructor(&destruct_MyDrawObj);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyDrawObj*)
   {
      return GenerateInitInstanceLocal((::MyDrawObj*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyDrawObj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StMyHist2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyHist2D::Class_Name()
{
   return "StMyHist2D";
}

//______________________________________________________________________________
const char *StMyHist2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyHist2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyHist2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyHist2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyHist2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyHist2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyHist2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyHist2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyProfile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyProfile::Class_Name()
{
   return "StMyProfile";
}

//______________________________________________________________________________
const char *StMyProfile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyProfile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyProfile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyProfile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMyProfile2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMyProfile2D::Class_Name()
{
   return "StMyProfile2D";
}

//______________________________________________________________________________
const char *StMyProfile2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMyProfile2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMyProfile2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMyProfile2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMyProfile2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyDrawObj::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyDrawObj::Class_Name()
{
   return "MyDrawObj";
}

//______________________________________________________________________________
const char *MyDrawObj::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyDrawObj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyDrawObj::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyDrawObj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyDrawObj::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyDrawObj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyDrawObj::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyDrawObj*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StMyHist2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyHist2D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> mProfile;
      R__b >> mProfileW2;
      R__b >> mScatter;
      R__b.CheckByteCount(R__s, R__c, StMyHist2D::IsA());
   } else {
      R__c = R__b.WriteVersion(StMyHist2D::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)mProfile;
      R__b << (TObject*)mProfileW2;
      R__b << (TObject*)mScatter;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StMyHist2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyHist2D.
      TClass *R__cl = ::StMyHist2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mProfile", &mProfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mProfileW2", &mProfileW2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mScatter", &mScatter);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyHist2D(void *p) {
      return  p ? new(p) ::StMyHist2D : new ::StMyHist2D;
   }
   static void *newArray_StMyHist2D(Long_t nElements, void *p) {
      return p ? new(p) ::StMyHist2D[nElements] : new ::StMyHist2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyHist2D(void *p) {
      delete ((::StMyHist2D*)p);
   }
   static void deleteArray_StMyHist2D(void *p) {
      delete [] ((::StMyHist2D*)p);
   }
   static void destruct_StMyHist2D(void *p) {
      typedef ::StMyHist2D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StMyHist2D(TBuffer &buf, void *obj) {
      ((::StMyHist2D*)obj)->::StMyHist2D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StMyHist2D

//______________________________________________________________________________
void StMyProfile::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyProfile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> mProfile;
      R__b >> mProfileW2;
      R__b.CheckByteCount(R__s, R__c, StMyProfile::IsA());
   } else {
      R__c = R__b.WriteVersion(StMyProfile::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)mProfile;
      R__b << (TObject*)mProfileW2;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StMyProfile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyProfile.
      TClass *R__cl = ::StMyProfile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mProfile", &mProfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mProfileW2", &mProfileW2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyProfile(void *p) {
      return  p ? new(p) ::StMyProfile : new ::StMyProfile;
   }
   static void *newArray_StMyProfile(Long_t nElements, void *p) {
      return p ? new(p) ::StMyProfile[nElements] : new ::StMyProfile[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyProfile(void *p) {
      delete ((::StMyProfile*)p);
   }
   static void deleteArray_StMyProfile(void *p) {
      delete [] ((::StMyProfile*)p);
   }
   static void destruct_StMyProfile(void *p) {
      typedef ::StMyProfile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StMyProfile(TBuffer &buf, void *obj) {
      ((::StMyProfile*)obj)->::StMyProfile::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StMyProfile

//______________________________________________________________________________
void StMyProfile2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMyProfile2D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> mProfile;
      R__b >> mProfileW2;
      R__b.CheckByteCount(R__s, R__c, StMyProfile2D::IsA());
   } else {
      R__c = R__b.WriteVersion(StMyProfile2D::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (TObject*)mProfile;
      R__b << (TObject*)mProfileW2;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StMyProfile2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMyProfile2D.
      TClass *R__cl = ::StMyProfile2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mProfile", &mProfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mProfileW2", &mProfileW2);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMyProfile2D(void *p) {
      return  p ? new(p) ::StMyProfile2D : new ::StMyProfile2D;
   }
   static void *newArray_StMyProfile2D(Long_t nElements, void *p) {
      return p ? new(p) ::StMyProfile2D[nElements] : new ::StMyProfile2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMyProfile2D(void *p) {
      delete ((::StMyProfile2D*)p);
   }
   static void deleteArray_StMyProfile2D(void *p) {
      delete [] ((::StMyProfile2D*)p);
   }
   static void destruct_StMyProfile2D(void *p) {
      typedef ::StMyProfile2D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StMyProfile2D(TBuffer &buf, void *obj) {
      ((::StMyProfile2D*)obj)->::StMyProfile2D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StMyProfile2D

//______________________________________________________________________________
void MyDrawObj::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyDrawObj.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyDrawObj::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyDrawObj::Class(),this);
   }
}

//______________________________________________________________________________
void MyDrawObj::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyDrawObj.
      TClass *R__cl = ::MyDrawObj::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymin", &ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymax", &ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lx1", &lx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ly1", &ly1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lx2", &lx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ly2", &ly2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logy", &logy);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyDrawObj(void *p) {
      return  p ? new(p) ::MyDrawObj : new ::MyDrawObj;
   }
   static void *newArray_MyDrawObj(Long_t nElements, void *p) {
      return p ? new(p) ::MyDrawObj[nElements] : new ::MyDrawObj[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyDrawObj(void *p) {
      delete ((::MyDrawObj*)p);
   }
   static void deleteArray_MyDrawObj(void *p) {
      delete [] ((::MyDrawObj*)p);
   }
   static void destruct_MyDrawObj(void *p) {
      typedef ::MyDrawObj current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyDrawObj

/********************************************************
* .sl73_gcc485/obj/StRoot/StMyHistUtil/StMyHistUtil_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStMyHistUtil_Cint();

extern "C" void G__set_cpp_environmentStMyHistUtil_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StMyHistUtil/histUtilities.h");
  G__add_compiledheader("StMyHistUtil/profileUtilities.h");
  G__add_compiledheader("StMyHistUtil/StMyHist.h");
  G__add_compiledheader("StMyHist.h");
  G__add_compiledheader("StMyDrawObj.h");
  G__cpp_reset_tagtableStMyHistUtil_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStMyHistUtil_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StMyHist2D */
static int G__StMyHistUtil_Cint_231_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyHist2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyHist2D[n];
     } else {
       p = new((void*) gvp) StMyHist2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyHist2D;
     } else {
       p = new((void*) gvp) StMyHist2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyHist2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) StMyHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StMyHist2D*) G__getstructoffset())->Fill((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StMyHist2D*) G__getstructoffset())->Fill((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StMyHist2D*) G__getstructoffset())->Add((StMyHist2D*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StMyHist2D*) G__getstructoffset())->Add((StMyHist2D*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyHist2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyHist2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyHist2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyHist2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyHist2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyHist2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyHist2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyHist2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_231_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyHist2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyHistUtil_Cint_231_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyHist2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyHist2D(*(StMyHist2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyHist2D G__TStMyHist2D;
static int G__StMyHistUtil_Cint_231_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyHist2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyHist2D*) (soff+(sizeof(StMyHist2D)*i)))->~G__TStMyHist2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyHist2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyHist2D*) (soff))->~G__TStMyHist2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyHistUtil_Cint_231_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyHist2D* dest = (StMyHist2D*) G__getstructoffset();
   *dest = *(StMyHist2D*) libp->para[0].ref;
   const StMyHist2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyProfile */
static int G__StMyHistUtil_Cint_232_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyProfile[n];
     } else {
       p = new((void*) gvp) StMyProfile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyProfile;
     } else {
       p = new((void*) gvp) StMyProfile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) StMyProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StMyProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StMyProfile*) G__getstructoffset())->Fill((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StMyProfile*) G__getstructoffset())->Fill((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StMyProfile*) G__getstructoffset())->Add((StMyProfile*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StMyProfile*) G__getstructoffset())->Add((StMyProfile*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyProfile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyProfile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyProfile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyProfile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyProfile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyProfile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyProfile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyProfile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_232_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyProfile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyHistUtil_Cint_232_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyProfile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyProfile(*(StMyProfile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyProfile G__TStMyProfile;
static int G__StMyHistUtil_Cint_232_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyProfile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyProfile*) (soff+(sizeof(StMyProfile)*i)))->~G__TStMyProfile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyProfile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyProfile*) (soff))->~G__TStMyProfile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyHistUtil_Cint_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile* dest = (StMyProfile*) G__getstructoffset();
   *dest = *(StMyProfile*) libp->para[0].ref;
   const StMyProfile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMyProfile2D */
static int G__StMyHistUtil_Cint_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyProfile2D[n];
     } else {
       p = new((void*) gvp) StMyProfile2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMyProfile2D;
     } else {
       p = new((void*) gvp) StMyProfile2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyProfile2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) StMyProfile2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMyProfile2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) StMyProfile2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((StMyProfile2D*) G__getstructoffset())->Fill((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((StMyProfile2D*) G__getstructoffset())->Fill((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StMyProfile2D*) G__getstructoffset())->Add((StMyProfile2D*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StMyProfile2D*) G__getstructoffset())->Add((StMyProfile2D*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMyProfile2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyProfile2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMyProfile2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMyProfile2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMyProfile2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyProfile2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyProfile2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMyProfile2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMyProfile2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyHistUtil_Cint_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMyProfile2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMyProfile2D(*(StMyProfile2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMyProfile2D G__TStMyProfile2D;
static int G__StMyHistUtil_Cint_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMyProfile2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMyProfile2D*) (soff+(sizeof(StMyProfile2D)*i)))->~G__TStMyProfile2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMyProfile2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMyProfile2D*) (soff))->~G__TStMyProfile2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyHistUtil_Cint_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMyProfile2D* dest = (StMyProfile2D*) G__getstructoffset();
   *dest = *(StMyProfile2D*) libp->para[0].ref;
   const StMyProfile2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyDrawObj */
static int G__StMyHistUtil_Cint_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyDrawObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyDrawObj[n];
     } else {
       p = new((void*) gvp) MyDrawObj[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyDrawObj;
     } else {
       p = new((void*) gvp) MyDrawObj;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyDrawObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyDrawObj((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) MyDrawObj((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyDrawObj*) G__getstructoffset())->setLegend((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyDrawObj*) G__getstructoffset())->setYrange((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyDrawObj*) G__getstructoffset())->setLogy((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyDrawObj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyDrawObj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyDrawObj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyDrawObj::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyDrawObj*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyDrawObj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyDrawObj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyDrawObj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyDrawObj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StMyHistUtil_Cint_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyDrawObj* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyDrawObj(*(MyDrawObj*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyDrawObj G__TMyDrawObj;
static int G__StMyHistUtil_Cint_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyDrawObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyDrawObj*) (soff+(sizeof(MyDrawObj)*i)))->~G__TMyDrawObj();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyDrawObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyDrawObj*) (soff))->~G__TMyDrawObj();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StMyHistUtil_Cint_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyDrawObj* dest = (MyDrawObj*) G__getstructoffset();
   *dest = *(MyDrawObj*) libp->para[0].ref;
   const MyDrawObj& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__StMyHistUtil_Cint__0_2180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) normHistogram((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) normHistogram((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      drawHistRatio(
(TPad*) G__int(libp->para[0]), (TPad*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]), (TH1*) G__int(libp->para[3])
, (TH1*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (bool) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      drawHistRatio(
(TPad*) G__int(libp->para[0]), (TPad*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]), (TH1*) G__int(libp->para[3])
, (TH1*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      drawHistRatio(
(TPad*) G__int(libp->para[0]), (TPad*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]), (TH1*) G__int(libp->para[3])
, (TH1*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      drawHistRatio(
(TPad*) G__int(libp->para[0]), (TPad*) G__int(libp->para[1])
, (TFile*) G__int(libp->para[2]), (TFile*) G__int(libp->para[3])
, (TFile*) G__int(libp->para[4]), (char*) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) compareHistogram((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) compareProfile((TProfile*) G__int(libp->para[0]), (TProfile*) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) compareHistogram((TFile*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      addHistogram((TH1*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      addHistogram((TH1*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      plotHist((TCanvas*) G__int(libp->para[0]), (TH1**) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      drawHist((TFile*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      drawHist((TFile*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      combineHist((TH1D*) G__int(libp->para[0]), (TProfile**) G__int(libp->para[1])
, (TH1D**) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      combineHist((TH1D*) G__int(libp->para[0]), (TProfile**) G__int(libp->para[1])
, (TH1D**) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      printHist((TH1D*) G__int(libp->para[0]), *(ofstream*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ratioHist((const char*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ratioHist((const char*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ratioHist((const char*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (TFile*) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ratioHist((const char*) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])
, (TFile*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) rawRatioHist((const char*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) rawRatioHist((const char*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) loadFiles((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) loadFiles((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      printToFile((TH1*) G__int(libp->para[0]), *(ofstream*) libp->para[1].ref
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      printToFile((TH1*) G__int(libp->para[0]), *(ofstream*) libp->para[1].ref
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      printToFile((TH1*) G__int(libp->para[0]), *(ofstream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) convertTProfile((TProfile*) G__int(libp->para[0]), (TProfile*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) convertTProfile((TProfile*) G__int(libp->para[0]), (TProfile*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StMyHistUtil_Cint__0_2197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) convertTProfile((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) convertTProfile((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* StMyHist2D */

/* StMyProfile */

/* StMyProfile2D */

/* MyDrawObj */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStMyHistUtil_Cint {
 public:
  G__Sizep2memfuncStMyHistUtil_Cint(): p(&G__Sizep2memfuncStMyHistUtil_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStMyHistUtil_Cint::*p)();
};

size_t G__get_sizep2memfuncStMyHistUtil_Cint()
{
  G__Sizep2memfuncStMyHistUtil_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStMyHistUtil_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D))) {
     StMyHist2D *G__Lderived;
     G__Lderived=(StMyHist2D*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D),G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile))) {
     StMyProfile *G__Lderived;
     G__Lderived=(StMyProfile*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile),G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D))) {
     StMyProfile2D *G__Lderived;
     G__Lderived=(StMyProfile2D*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D),G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj))) {
     MyDrawObj *G__Lderived;
     G__Lderived=(MyDrawObj*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj),G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStMyHistUtil_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StMyHist2D */
static void G__setup_memvarStMyHist2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D));
   { StMyHist2D *p; p=(StMyHist2D*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mProfile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TProfile),-1,-1,1,"mProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mProfileW2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TProfile),-1,-1,1,"mProfileW2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mScatter)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH2D),-1,-1,1,"mScatter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyProfile */
static void G__setup_memvarStMyProfile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile));
   { StMyProfile *p; p=(StMyProfile*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mProfile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TProfile),-1,-1,1,"mProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mProfileW2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TProfile),-1,-1,1,"mProfileW2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMyProfile2D */
static void G__setup_memvarStMyProfile2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D));
   { StMyProfile2D *p; p=(StMyProfile2D*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mProfile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TProfile2D),-1,-1,1,"mProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mProfileW2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TProfile2D),-1,-1,1,"mProfileW2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyDrawObj */
static void G__setup_memvarMyDrawObj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj));
   { MyDrawObj *p; p=(MyDrawObj*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ymin)-(long)(p)),100,0,0,-1,-1,-1,1,"ymin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ymax)-(long)(p)),100,0,0,-1,-1,-1,1,"ymax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lx1)-(long)(p)),100,0,0,-1,-1,-1,1,"lx1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ly1)-(long)(p)),100,0,0,-1,-1,-1,1,"ly1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lx2)-(long)(p)),100,0,0,-1,-1,-1,1,"lx2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ly2)-(long)(p)),100,0,0,-1,-1,-1,1,"ly2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->logy)-(long)(p)),103,0,0,-1,-1,-1,1,"logy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStMyHistUtil_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStMyHist2D(void) {
   /* StMyHist2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D));
   G__memfunc_setup("StMyHist2D",923,G__StMyHistUtil_Cint_231_0_1, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyHist2D",923,G__StMyHistUtil_Cint_231_0_2, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D), -1, 0, 8, 1, 1, 0, 
"C - - 10 - histname C - - 10 - titlename "
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__StMyHistUtil_Cint_231_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 '1.0' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyHistUtil_Cint_231_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StMyHist2D' - 0 - hist d - - 0 '1.0' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyHistUtil_Cint_231_0_5, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyHist2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyHistUtil_Cint_231_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyHist2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyHistUtil_Cint_231_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyHist2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyHistUtil_Cint_231_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyHist2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyHistUtil_Cint_231_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyHistUtil_Cint_231_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyHist2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyHistUtil_Cint_231_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyHist2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyHistUtil_Cint_231_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyHist2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyHistUtil_Cint_231_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyHist2D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyHist2D", 923, G__StMyHistUtil_Cint_231_0_17, (int) ('i'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D), -1, 0, 1, 1, 1, 0, "u 'StMyHist2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyHist2D", 1049, G__StMyHistUtil_Cint_231_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyHistUtil_Cint_231_0_19, (int) ('u'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyHist2D), -1, 1, 1, 1, 1, 0, "u 'StMyHist2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyProfile(void) {
   /* StMyProfile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile));
   G__memfunc_setup("StMyProfile",1118,G__StMyHistUtil_Cint_232_0_1, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyProfile",1118,G__StMyHistUtil_Cint_232_0_2, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile), -1, 0, 5, 1, 1, 0, 
"C - - 10 - histname C - - 10 - titlename "
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyProfile",1118,G__StMyHistUtil_Cint_232_0_3, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile), -1, 0, 4, 1, 1, 0, 
"C - - 10 - histname C - - 10 - titlename "
"i - - 0 - nx D - - 10 - xbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__StMyHistUtil_Cint_232_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 '1.0' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyHistUtil_Cint_232_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StMyProfile' - 0 - hist d - - 0 '1.0' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyHistUtil_Cint_232_0_6, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyProfile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyHistUtil_Cint_232_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyProfile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyHistUtil_Cint_232_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyProfile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyHistUtil_Cint_232_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyProfile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyHistUtil_Cint_232_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyHistUtil_Cint_232_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyProfile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyHistUtil_Cint_232_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyProfile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyHistUtil_Cint_232_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyProfile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyHistUtil_Cint_232_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyProfile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyProfile", 1118, G__StMyHistUtil_Cint_232_0_18, (int) ('i'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile), -1, 0, 1, 1, 1, 0, "u 'StMyProfile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyProfile", 1244, G__StMyHistUtil_Cint_232_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyHistUtil_Cint_232_0_20, (int) ('u'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile), -1, 1, 1, 1, 1, 0, "u 'StMyProfile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMyProfile2D(void) {
   /* StMyProfile2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D));
   G__memfunc_setup("StMyProfile2D",1236,G__StMyHistUtil_Cint_233_0_1, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyProfile2D",1236,G__StMyHistUtil_Cint_233_0_2, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D), -1, 0, 6, 1, 1, 0, 
"C - - 10 - histname C - - 10 - titlename "
"i - - 0 - nx D - - 10 - xbins "
"i - - 0 - ny D - - 10 - ybins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMyProfile2D",1236,G__StMyHistUtil_Cint_233_0_3, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D), -1, 0, 8, 1, 1, 0, 
"C - - 10 - histname C - - 10 - titlename "
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__StMyHistUtil_Cint_233_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z d - - 0 '1.0' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__StMyHistUtil_Cint_233_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StMyProfile2D' - 0 - hist d - - 0 '1.0' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyHistUtil_Cint_233_0_6, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMyProfile2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyHistUtil_Cint_233_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyProfile2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyHistUtil_Cint_233_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMyProfile2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyHistUtil_Cint_233_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMyProfile2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyHistUtil_Cint_233_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyHistUtil_Cint_233_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyProfile2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyHistUtil_Cint_233_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyProfile2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyHistUtil_Cint_233_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMyProfile2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyHistUtil_Cint_233_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMyProfile2D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StMyProfile2D", 1236, G__StMyHistUtil_Cint_233_0_18, (int) ('i'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D), -1, 0, 1, 1, 1, 0, "u 'StMyProfile2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StMyProfile2D", 1362, G__StMyHistUtil_Cint_233_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyHistUtil_Cint_233_0_20, (int) ('u'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_StMyProfile2D), -1, 1, 1, 1, 1, 0, "u 'StMyProfile2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyDrawObj(void) {
   /* MyDrawObj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj));
   G__memfunc_setup("MyDrawObj",879,G__StMyHistUtil_Cint_234_0_1, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyDrawObj",879,G__StMyHistUtil_Cint_234_0_2, 105, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj), -1, 0, 2, 1, 1, 0, 
"d - - 0 - min d - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLegend",923,G__StMyHistUtil_Cint_234_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - x2 d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYrange",946,G__StMyHistUtil_Cint_234_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - min d - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLogy",743,G__StMyHistUtil_Cint_234_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StMyHistUtil_Cint_234_0_6, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyDrawObj::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StMyHistUtil_Cint_234_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyDrawObj::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StMyHistUtil_Cint_234_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyDrawObj::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StMyHistUtil_Cint_234_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyDrawObj::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StMyHistUtil_Cint_234_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StMyHistUtil_Cint_234_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyDrawObj::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StMyHistUtil_Cint_234_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyDrawObj::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StMyHistUtil_Cint_234_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyDrawObj::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StMyHistUtil_Cint_234_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyDrawObj::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyDrawObj", 879, G__StMyHistUtil_Cint_234_0_18, (int) ('i'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj), -1, 0, 1, 1, 1, 0, "u 'MyDrawObj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyDrawObj", 1005, G__StMyHistUtil_Cint_234_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StMyHistUtil_Cint_234_0_20, (int) ('u'), G__get_linked_tagnum(&G__StMyHistUtil_CintLN_MyDrawObj), -1, 1, 1, 1, 1, 0, "u 'MyDrawObj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStMyHistUtil_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStMyHistUtil_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
   G__memfunc_setup("normHistogram", 1386, G__StMyHistUtil_Cint__0_2180, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - h d - - 0 '1.0' ss", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("drawHistRatio", 1349, G__StMyHistUtil_Cint__0_2181, 121, -1, -1, 0, 11, 1, 1, 0, 
"U 'TPad' - 0 - p1 U 'TPad' - 0 - p2 "
"U 'TH1' - 0 - hdata U 'TH1' - 0 - hembed "
"U 'TH1' - 0 - hratio d - - 0 - xmin "
"d - - 0 - xmax d - - 0 - ymin "
"d - - 0 - ymax d - - 0 '1.0' zoom "
"g - - 0 'true' fnorm", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("drawHistRatio", 1349, G__StMyHistUtil_Cint__0_2182, 121, -1, -1, 0, 10, 1, 1, 0, 
"U 'TPad' - 0 - p1 U 'TPad' - 0 - p2 "
"U 'TFile' - 0 - fdata U 'TFile' - 0 - fembed "
"U 'TFile' - 0 - fratio C - - 0 - name "
"d - - 0 - xmin d - - 0 - xmax "
"d - - 0 - ymin d - - 0 - ymax", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("compareHistogram", 1685, G__StMyHistUtil_Cint__0_2183, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - ha U 'TH1' - 0 - hb", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("compareProfile", 1464, G__StMyHistUtil_Cint__0_2184, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 3, 1, 1, 0, 
"U 'TProfile' - 0 - ha U 'TProfile' - 0 - hb "
"g - - 0 - flag", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("compareHistogram", 1685, G__StMyHistUtil_Cint__0_2185, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - fa U 'TFile' - 0 - fb "
"C - - 0 - name", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("addHistogram", 1239, G__StMyHistUtil_Cint__0_2186, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - hist U 'TFile' - 0 - f "
"C - - 0 - name d - - 0 '1.' w", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("plotHist", 855, G__StMyHistUtil_Cint__0_2187, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TCanvas' - 0 - c U 'TH1' - 2 - h "
"C - - 0 - option i - - 0 - Ntrg", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("drawHist", 838, G__StMyHistUtil_Cint__0_2188, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - f C - - 0 - name "
"C - - 10 '\"\"' option", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("combineHist", 1141, G__StMyHistUtil_Cint__0_2189, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1D' - 0 - h U 'TProfile' - 2 - he "
"U 'TH1D' - 2 - hd i - - 0 '3' Ntrg", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("printHist", 965, G__StMyHistUtil_Cint__0_2190, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1D' - 0 - h u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - of", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("ratioHist", 951, G__StMyHistUtil_Cint__0_2191, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name U 'TH1' - 0 - ha "
"U 'TH1' - 0 - hb g - - 0 'true' flag", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("ratioHist", 951, G__StMyHistUtil_Cint__0_2192, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name U 'TFile' - 0 - ha "
"U 'TFile' - 0 - hb g - - 0 'true' flag", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("rawRatioHist", 1249, G__StMyHistUtil_Cint__0_2193, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name U 'TH1' - 0 - ha "
"U 'TH1' - 0 - hb g - - 0 'true' flag", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("loadFiles", 915, G__StMyHistUtil_Cint__0_2194, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 2, 1, 1, 0, 
"C - - 10 - file d - - 0 '1.0' scale", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("printToFile", 1136, G__StMyHistUtil_Cint__0_2195, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - ha u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - of "
"i - - 0 '1' xbin i - - 0 '1' ybin", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("convertTProfile", 1574, G__StMyHistUtil_Cint__0_2196, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 3, 1, 1, 0, 
"U 'TProfile' - 0 - hw U 'TProfile' - 0 - hw2 "
"C - - 10 '\"A\"' ver", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("convertTProfile", 1574, G__StMyHistUtil_Cint__0_2197, 85, G__get_linked_tagnum(&G__StMyHistUtil_CintLN_TH1D), -1, 0, 3, 1, 1, 0, 
"U 'TFile' - 0 - f C - - 10 - name "
"C - - 10 '\"A\"' ver", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStMyHistUtil_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StMyHistUtil_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_StMyHist2D = { "StMyHist2D" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_StMyProfile = { "StMyProfile" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_StMyProfile2D = { "StMyProfile2D" , 99 , -1 };
G__linked_taginfo G__StMyHistUtil_CintLN_MyDrawObj = { "MyDrawObj" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStMyHistUtil_Cint() {
  G__StMyHistUtil_CintLN_TClass.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TBuffer.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TMemberInspector.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TObject.tagnum = -1 ;
  G__StMyHistUtil_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TFile.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TCanvas.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TPad.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TH1.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TH1D.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TProfile.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TH2D.tagnum = -1 ;
  G__StMyHistUtil_CintLN_TProfile2D.tagnum = -1 ;
  G__StMyHistUtil_CintLN_StMyHist2D.tagnum = -1 ;
  G__StMyHistUtil_CintLN_StMyProfile.tagnum = -1 ;
  G__StMyHistUtil_CintLN_StMyProfile2D.tagnum = -1 ;
  G__StMyHistUtil_CintLN_MyDrawObj.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStMyHistUtil_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TPad);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TH1);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_TProfile2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_StMyHist2D),sizeof(StMyHist2D),-1,62720,(char*)NULL,G__setup_memvarStMyHist2D,G__setup_memfuncStMyHist2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_StMyProfile),sizeof(StMyProfile),-1,62720,(char*)NULL,G__setup_memvarStMyProfile,G__setup_memfuncStMyProfile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_StMyProfile2D),sizeof(StMyProfile2D),-1,62720,(char*)NULL,G__setup_memvarStMyProfile2D,G__setup_memfuncStMyProfile2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StMyHistUtil_CintLN_MyDrawObj),sizeof(MyDrawObj),-1,323840,(char*)NULL,G__setup_memvarMyDrawObj,G__setup_memfuncMyDrawObj);
}
extern "C" void G__cpp_setupStMyHistUtil_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStMyHistUtil_Cint()");
  G__set_cpp_environmentStMyHistUtil_Cint();
  G__cpp_setup_tagtableStMyHistUtil_Cint();

  G__cpp_setup_inheritanceStMyHistUtil_Cint();

  G__cpp_setup_typetableStMyHistUtil_Cint();

  G__cpp_setup_memvarStMyHistUtil_Cint();

  G__cpp_setup_memfuncStMyHistUtil_Cint();
  G__cpp_setup_globalStMyHistUtil_Cint();
  G__cpp_setup_funcStMyHistUtil_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStMyHistUtil_Cint();
  return;
}
class G__cpp_setup_initStMyHistUtil_Cint {
  public:
    G__cpp_setup_initStMyHistUtil_Cint() { G__add_setup_func("StMyHistUtil_Cint",(G__incsetup)(&G__cpp_setupStMyHistUtil_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStMyHistUtil_Cint() { G__remove_setup_func("StMyHistUtil_Cint"); }
};
G__cpp_setup_initStMyHistUtil_Cint G__cpp_setup_initializerStMyHistUtil_Cint;

